[33m22:16:42 (12780) WARN ProjectReader[39m Glob pattern "**/node_modules/**" did not result in any files.
[33m22:16:42 (12780) WARN ProjectReader[39m Glob pattern "**/vendor/**" did not result in any files.
[32m22:16:42 (12780) INFO ProjectReader[39m Found 40 of 410 file(s) to be mutated.
[32m22:16:42 (12780) INFO Instrumenter[39m Instrumented 40 source file(s) with 2923 mutant(s)
[32m22:16:42 (12780) INFO ConcurrencyTokenProvider[39m Creating 7 test runner process(es).
[32m22:16:43 (12780) INFO DryRunExecutor[39m Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
[91m22:16:52 (12780) ERROR DryRunExecutor[39m One or more tests resulted in an error:
	BABEL_PARSE_ERROR /Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-e6VyKx/test/presenters/battleshipSolitaireClues.test.js: Identifier 'topTensLine' has already been declared. (136:10)

  134 |
  135 |     // ensure tens digits line preserves spaces for singleâ€‘digit clues
> 136 |     const topTensLine = lines[0];
      |           ^
  137 |     expect(topTensLine).toBe('       1     ');
  138 |   });
  139 | }); Jest encountered an unexpected token

Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

By default "node_modules" folder is ignored by transformers.

Here's what you can do:
 â€¢ If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
 â€¢ If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
 â€¢ To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
 â€¢ If you need a custom transformation specify a "transform" option in your config.
 â€¢ If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

You'll find more details and examples of these config options in the docs:
https://jestjs.io/docs/configuration
For information about custom transformations, see:
https://jestjs.io/docs/code-transformation

Details:

SyntaxError: /Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-e6VyKx/test/presenters/battleshipSolitaireClues.test.js: Identifier 'topTensLine' has already been declared. (136:10)

  134 |
  135 |     // ensure tens digits line preserves spaces for singleâ€‘digit clues
> 136 |     const topTensLine = lines[0];
      |           ^
  137 |     expect(topTensLine).toBe('       1     ');
  138 |   });
  139 | });
    at constructor (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parse-error.ts:95:45)
    at Parser.toParseError [as raise] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)
    at ScopeHandler.raise [as checkRedeclarationInScope] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/util/scope.ts:155:19)
    at ScopeHandler.checkRedeclarationInScope [as declareName] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/util/scope.ts:109:12)
    at Parser.declareName [as declareNameFromIdentifier] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/lval.ts:752:16)
    at Parser.declareNameFromIdentifier [as checkIdentifier] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/lval.ts:747:12)
    at Parser.checkIdentifier [as checkLVal] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/lval.ts:649:12)
    at Parser.checkLVal [as parseVarId] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1588:10)
    at Parser.parseVarId [as parseVar] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1541:12)
    at Parser.parseVar [as parseVarStatement] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1210:10)
    at Parser.parseVarStatement [as parseStatementContent] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:566:21)
    at Parser.parseStatementContent [as parseStatementLike] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:437:17)
    at Parser.parseStatementLike [as parseStatementListItem] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:386:17)
    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1403:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1376:10)
    at Parser.parseBlockBody [as parseBlock] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1344:10)
    at Parser.parseBlock [as parseFunctionBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2558:24)
    at Parser.parseFunctionBody [as parseArrowExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2499:10)
    at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1790:12)
    at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1127:21)
    at Parser.parseExprAtom [as parseExprSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:710:23)
    at Parser.parseExprSubscripts [as parseUpdate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:689:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:651:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:385:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:397:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:352:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:294:21)
    at parseMaybeAssign (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:252:12)
    at Parser.callback [as allowInAnd] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:3116:12)
    at Parser.allowInAnd [as parseMaybeAssignAllowIn] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:251:17)
    at Parser.parseMaybeAssignAllowIn [as parseExprListItem] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2721:18)
    at Parser.parseExprListItem [as parseCallExpressionArguments] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1006:14)
    at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:884:29)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:773:19)
    at Parser.parseSubscript [as parseSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:731:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:716:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:689:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:651:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:385:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:397:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:352:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:294:21)
    at Parser.parseMaybeAssign [as parseExpressionBase] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:221:23)
    at parseExpressionBase (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:212:39)
    at Parser.callback [as allowInAnd] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:3111:16)
    at Parser.allowInAnd [as parseExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:212:17)
    at Parser.parseExpression [as parseStatementContent] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:642:23)
    at Parser.parseStatementContent [as parseStatementLike] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:437:17)
    at Parser.parseStatementLike [as parseStatementListItem] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:386:17)
    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1403:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1376:10)
    at Parser.parseBlockBody [as parseBlock] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1344:10)
    at Parser.parseBlock [as parseFunctionBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2558:24)
    at Parser.parseFunctionBody [as parseArrowExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2499:10)
    at Parser.parseArrowExpression [as parseParenAndDistinguishExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1790:12)
    at Parser.parseParenAndDistinguishExpression [as parseExprAtom] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1127:21)
    at Parser.parseExprAtom [as parseExprSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:710:23)
    at Parser.parseExprSubscripts [as parseUpdate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:689:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:651:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:385:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:397:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:352:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:294:21)
    at parseMaybeAssign (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:252:12)
    at Parser.callback [as allowInAnd] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:3116:12)
    at Parser.allowInAnd [as parseMaybeAssignAllowIn] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:251:17)
    at Parser.parseMaybeAssignAllowIn [as parseExprListItem] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:2721:18)
    at Parser.parseExprListItem [as parseCallExpressionArguments] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:1006:14)
    at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:884:29)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:773:19)
    at Parser.parseSubscript [as parseSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:731:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:716:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:689:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:651:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:385:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:397:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:352:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:294:21)
    at Parser.parseMaybeAssign [as parseExpressionBase] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:221:23)
    at parseExpressionBase (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:212:39)
    at Parser.callback [as allowInAnd] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:3111:16)
    at Parser.allowInAnd [as parseExpression] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/expression.ts:212:17)
    at Parser.parseExpression [as parseStatementContent] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:642:23)
    at Parser.parseStatementContent [as parseStatementLike] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:437:17)
    at Parser.parseStatementLike [as parseModuleItem] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:374:17)
    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1402:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:1376:10)
    at Parser.parseBlockBody [as parseProgram] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:225:10)
    at Parser.parseProgram [as parseTopLevel] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/statement.ts:203:25)
    at Parser.parseTopLevel [as parse] (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/parser/index.ts:90:10)
    at parse (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/parser/src/index.ts:92:38)
    at parser (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/core/src/parser/index.ts:28:19)
    at parser.next (<anonymous>)
    at normalizeFile (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/core/src/transformation/normalize-file.ts:50:24)
    at normalizeFile.next (<anonymous>)
    at run (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/core/src/transformation/index.ts:40:36)
    at run.next (<anonymous>)
    at transform (/Users/matthew.heard/Code/Matt/dadeto/node_modules/@babel/core/src/transform.ts:29:20)
    at transform.next (<anonymous>)
    at evaluateSync (/Users/matthew.heard/Code/Matt/dadeto/node_modules/gensync/index.js:251:28)
[91m22:16:52 (12780) ERROR Stryker[39m Unexpected error occurred while running Stryker Error: Something went wrong in the initial test run
    at DryRunExecutor.validateResultCompleted (file:///Users/matthew.heard/Code/Matt/dadeto/node_modules/@stryker-mutator/core/dist/src/process/3-dry-run-executor.js:76:15)
    at DryRunExecutor.executeDryRun (file:///Users/matthew.heard/Code/Matt/dadeto/node_modules/@stryker-mutator/core/dist/src/process/3-dry-run-executor.js:96:14)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async WorkItem.execute (file:///Users/matthew.heard/Code/Matt/dadeto/node_modules/@stryker-mutator/core/dist/src/concurrent/pool.js:32:28)
    at async file:///Users/matthew.heard/Code/Matt/dadeto/node_modules/@stryker-mutator/core/dist/src/concurrent/pool.js:69:13
[32m22:16:52 (12780) INFO Stryker[39m This might be a known problem with a solution documented in our troubleshooting guide.
[32m22:16:52 (12780) INFO Stryker[39m You can find it at https://stryker-mutator.io/docs/stryker-js/troubleshooting/
[32m22:16:52 (12780) INFO Stryker[39m Still having trouble figuring out what went wrong? Try `npx stryker run --fileLogLevel trace --logLevel debug` to get some more info.
