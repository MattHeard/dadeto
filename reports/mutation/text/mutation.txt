[32m09:50:12 (69473) INFO ProjectReader[39m Found 28 of 211 file(s) to be mutated.
[32m09:50:12 (69473) INFO Instrumenter[39m Instrumented 28 source file(s) with 1963 mutant(s)
[32m09:50:12 (69473) INFO ConcurrencyTokenProvider[39m Creating 7 test runner process(es).
[32m09:50:14 (69473) INFO DryRunExecutor[39m Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
[32m09:50:50 (69473) INFO DryRunExecutor[39m Initial test run succeeded. Ran 154 tests in 36 seconds (net 33233 ms, overhead 3079 ms).
[33m09:50:50 (69473) WARN MutantTestPlanner[39m Detected 109 static mutants (6% of total) that are estimated to take 43% of the time running the tests!
  You might want to enable "ignoreStatic" to ignore these static mutants for your next run. 
  For more information about static mutants visit: https://stryker-mutator.io/docs/mutation-testing-elements/static-mutants
  (disable "warnings.slow" to ignore this warning)

All tests
  src/test/toys/2025-04-06/ticTacToe.test.js
    ✓ returns optimal move for invalid input [line 49] (killed 12)
    ✓ minimax early tie return is triggered [line 67] (killed 120)
    ✓ detects win for X and returns no additional move [line 136] (killed 29)
    ✓ returns optimal move for malformed schema [line 181] (killed 3)
    ✓ detects invalid player alternation [line 201] (killed 5)
    ✓ detects duplicate positions [line 234] (killed 5)
    ✓ detects too many moves on the board [line 267] (killed 7)
    ✓ detects full board with no remaining moves [line 348] (killed 24)
    ✓ detects win for O and returns no additional move [line 416] (killed 21)
    ✓ detects tie game with no remaining moves [line 467] (killed 32)
    ✓ selects optimal move in mid-game scenario [line 535] (killed 29)
    ✓ handles null move entry gracefully [line 579] (killed 4)
    ✓ handles invalid player [line 600] (killed 5)
    ✓ handles out-of-bounds position [line 627] (killed 4)
    ✓ assigns X to first move when moves list is empty [line 654] (killed 1)
    ✓ handles position as non-object [line 669] (killed 4)
    ✓ forces minimax to score a tie at max depth [line 693] (killed 38)
    ✓ handles duplicate board cell even if not duplicate position object [line 763] (killed 4)
    ✓ forces minimax to run from O perspective [line 797] (killed 10)
    ✓ handles empty board that reaches nextPlayer assignment [line 818] (killed 1)
    ✓ returns fallback when minimax fails to assign bestMove [line 833] (killed 12)
    ✓ returns early if board cell is already filled but not caught by seen [line 856] (killed 4)
    ✓ triggers minimax tie return at full depth without win [line 891] (killed 30)
  test
    browser
      audio-controls.test.js
        ✓ createPlayClickHandler calls stopDefault and playAudio with the correct arguments [line 6] (killed 2)
        ✓ createPauseClickHandler calls stopDefault and pauseAudio with the correct arguments [line 23] (killed 2)
        ✓ createStopClickHandler calls stopDefault, pauseAudio, and resets audio.currentTime [line 38] (killed 2)
        ✓ createUpdateTimeDisplay updates the time display with the current time of the audio [line 56] (killed 3)
        ~ createUpdateTimeDisplay handles when audio currentTime is 0 [line 66] (covered 6)
        ✓ setupAudio assigns a default id to audio elements without an id [line 80] (killed 6)
        ✓ setupAudio does not overwrite existing audio element ids [line 111] (killed 1)
      data.test.js
        ✓ fetchAndCacheBlogData should prevent multiple simultaneous fetches [line 21] (killed 11)
        ✓ fetchAndCacheBlogData should start fetching blog data and update state on success [line 31] (killed 9)
        ✓ fetchAndCacheBlogData should handle HTTP errors properly [line 49] (killed 3)
        ~ fetchAndCacheBlogData should handle fetch exceptions [line 65] (covered 16)
        ✓ getData, setData, and getDeepStateCopy getDeepStateCopy returns a deep copy [line 102] (killed 1)
        ✓ getData, setData, and getDeepStateCopy getData triggers fetch if status is idle [line 110] (killed 7)
        ✓ getData, setData, and getDeepStateCopy getData logs warning on error state [line 115] (killed 10)
        ✓ getData, setData, and getDeepStateCopy getData omits internal state fields [line 121] (killed 6)
        ✓ getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it [line 131] (killed 7)
        ✓ getData, setData, and getDeepStateCopy setData throws and logs error if blog missing [line 138] (killed 7)
        ✓ getData, setData, and getDeepStateCopy shouldUseExistingFetch returns true and logs when loading and promise exists [line 143] (killed 5)
        ✓ getData, setData, and getDeepStateCopy shouldUseExistingFetch returns false if status is not loading [line 154] (killed 4)
      main.test.js
        ✓ setupAudio sets up audio controls correctly [line 53] (killed 5)
      tags.test.js
        ~ hideArticlesByClass does not throw when given a class and no matching elements [line 5] (covered 5)
        ✓ hideArticlesByClass hides articles with the given class [line 15] (killed 6)
        ✓ toggleHideLink removes the next sibling when it has the hide-span class [line 32] (killed 3)
        ✓ toggleHideLink creates a hide span when there is no next sibling with the hide-span class [line 44] (killed 2)
      toys.test.js
        ✓ enableInteractiveControls enables input and submit button [line 45] (killed 3)
        ✓ enableInteractiveControls sets output textContent to "Ready for input" [line 51] (killed 1)
        ✓ enableInteractiveControls removes "warning" class from parent element [line 56] (killed 1)
        ✓ initialiseModule can be invoked with minimal arguments [line 68] (killed 2)
        ✓ getDeepStateCopy returns a deep copy of the global state object [line 98] (killed 1)
        ✓ createHandleSubmit fetches from URL if processingFunction returns a request object [line 170] (killed 12)
        ✓ createHandleSubmit handles fetch failure if request URL is unreachable [line 198] (killed 3)
        ✓ createHandleSubmit handles error thrown by processingFunction [line 228] (killed 3)
        ✓ createHandleSubmit handles being called without an event [line 255] (killed 7)
        ✓ initializeInteractiveComponent attaches click and keypress listeners with expected arguments [line 290] (killed 10)
        ✓ initializeInteractiveComponent does not call handleSubmit when a non-Enter key is pressed [line 344] (killed 1)
        ✓ initializeVisibleComponents warns if there are no interactive components [line 392] (killed 8)
        ✓ initializeVisibleComponents initializes and observes a valid interactive component [line 405] (killed 7)
        ✓ initializeVisibleComponents warns when article element is missing for a component [line 432] (killed 3)
        ~ initializeVisibleComponents attempts to initialize all interactive components, regardless of missing fields [line 453] (covered 14)
        ✓ handleModuleError calls the error function with the correct message and error object [line 475] (killed 4)
    generator/generator.test.js
      ✓ Blog Generator should generate complete HTML page with multiple posts [line 8] (killed 276)
      ✓ Blog Generator should contain content for posts [line 103] (killed 4)
      ✓ Blog Generator should contain an illustration for posts [line 129] (killed 1)
      ~ Blog Generator should contain audio elements [line 159] (covered 151)
      ~ Blog Generator should contain related links for a post [line 186] (covered 184)
      ~ Blog Generator should contain a YouTube video for a post [line 224] (covered 153)
      ~ Blog Generator should contain a toy component for a post [line 245] (covered 202)
      ✓ Blog Generator should display tags for posts [line 290] (killed 12)
      ✓ Blog Generator should render quotes as blockquotes [line 315] (killed 27)
    presenters/paragraph.test.js
      ✓ createParagraphElement creates a <p> element with the correct text content [line 6] (killed 1)
      ~ createParagraphElement works with different input strings [line 19] (covered 2)
    toys
      2024-10-02/hello.test.js
        ✓ hello should return "Hello world" [line 4] (killed 2)
      2025-03-19/identity.test.js
        ✓ identity function returns primitive values unchanged [line 4] (killed 1)
        ~ identity function returns object references unchanged [line 13] (covered 1)
        ~ identity function keeps object values unchanged [line 23] (covered 1)
      2025-03-21
        booleanCoercer.test.js
          ✓ coerceToBoolean returns { value: true } for input boolean true [line 5] (killed 8)
          ~ coerceToBoolean returns { value: false } for input boolean false [line 9] (covered 10)
          ✓ coerceToBoolean returns { value: true } for input string "true" [line 13] (killed 8)
          ✓ coerceToBoolean returns { value: false } for input string "false" [line 17] (killed 1)
          ✓ coerceToBoolean handles case insensitivity for "TrUe" [line 21] (killed 1)
          ~ coerceToBoolean handles case insensitivity for "FaLsE" [line 25] (covered 20)
          ✓ coerceToBoolean returns {} for non-boolean and non-valid string input (number) [line 29] (killed 3)
          ~ coerceToBoolean returns {} for non-boolean and non-valid string input (object) [line 33] (covered 15)
          ~ coerceToBoolean returns {} for non-boolean and non-valid string input (null) [line 37] (covered 15)
          ~ coerceToBoolean returns {} for non-boolean and non-valid string input (undefined) [line 41] (covered 15)
        italics.test.js
          ✓ italics function returns non-string values unchanged [line 4] (killed 8)
          ✓ italics function leaves regular text unchanged [line 13] (killed 21)
          ✓ italics function adds <em> tags around asterisk-style italics while preserving asterisks [line 18] (killed 17)
          ~ italics function adds <em> tags around underscore-style italics while preserving underscores [line 25] (covered 60)
          ~ italics function handles both asterisk and underscore styles in the same string [line 32] (covered 60)
          ✓ italics function does not add <em> tags around bold double-asterisk markdown [line 39] (killed 16)
          ~ italics function does not add <em> tags around bold double-underscore markdown [line 45] (covered 71)
          ~ italics function handles complex mixed formatting correctly [line 51] (covered 71)
      2025-03-26/prettyFloat.test.js
        ✓ decomposeFloat handles zero [line 4] (killed 23)
        ✓ decomposeFloat handles positive powers of two [line 9] (killed 41)
        ~ decomposeFloat handles small irrational approximations [line 15] (covered 75)
        ✓ decomposeFloat handles negative values [line 19] (killed 2)
        ~ decomposeFloat handles max safe integer [line 24] (covered 75)
        ✓ decomposeFloat returns empty string for Infinity and -Infinity [line 28] (killed 1)
        ~ decomposeFloat returns empty string for NaN [line 33] (covered 9)
      2025-03-28/rand.test.js
        ✓ rand ignores the string input and returns the result of getRandomNumber [line 4] (killed 2)
        ~ rand works with different string inputs [line 20] (covered 2)
        ~ rand returns different values when getRandomNumber returns different values [line 33] (covered 2)
      2025-03-29
        fishingGame.test.js
          ✓ fishingGame handles empty input gracefully [line 13] (killed 42)
          ✓ fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0) [line 20] (killed 29)
          ✓ fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05) [line 29] (killed 18)
          ✓ fishingGame applies positive modifier for good bait (e.g., cheese, modifier 0.1) [line 39] (killed 20)
          ✓ fishingGame handles unrecognized bait as unconventional bait with no modifier [line 48] (killed 9)
          ✓ fishingGame produces common carp outcome for effectiveChance between 0.3 and 0.6 [line 57] (killed 3)
          ✓ fishingGame produces legendary outcome for very high effectiveChance [line 67] (killed 4)
        get.test.js
          ✓ get function with path traversal should return the value for a top-level key [line 31] (killed 27)
          ~ get function with path traversal should return the value for a nested key [line 36] (covered 45)
          ~ get function with path traversal should return the value for an array index [line 42] (covered 45)
          ~ get function with path traversal should return the full object/array if path points to it [line 48] (covered 45)
          ✓ get function with path traversal should return an error if a path segment does not exist (object) [line 54] (killed 6)
          ~ get function with path traversal should return an error if a path segment does not exist (array index) [line 60] (covered 47)
          ✓ get function with path traversal should return an error trying to access property on non-object [line 66] (killed 9)
          ✓ get function with path traversal should return an error if getData is not a function [line 72] (killed 3)
          ✓ get function with path traversal should return an error if env map is not provided or invalid [line 77] (killed 5)
          ✓ get function with path traversal should return an error if getData does not return an object or array [line 82] (killed 7)
          ✓ get function with path traversal should return an error if getData throws an error [line 96] (killed 2)
          ✓ get function with path traversal should handle non-stringifiable values gracefully at the end of the path [line 106] (killed 2)
          ~ get function with path traversal should return undefined for valid path to undefined value [line 115] (covered 45)
          ✓ get function with path traversal should handle empty input string by returning full object [line 128] (killed 3)
          ~ get function with path traversal should handle numeric string keys in object [line 134] (covered 45)
          ✓ get function with path traversal should return error when accessing deep property on null [line 141] (killed 1)
        setTemporary.test.js
          ✓ setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists [line 24] (killed 34)
          ~ setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist [line 53] (covered 52)
          ~ setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object [line 70] (covered 52)
          ✓ setTemporary function (getData -> merge -> setData) should return error for invalid JSON input and not call setData [line 105] (killed 2)
          ✓ setTemporary function (getData -> merge -> setData) should return error if input JSON is not a plain object and not call setData [line 113] (killed 3)
          ✓ setTemporary function (getData -> merge -> setData) should return error if getData or setData function is missing in env [line 120] (killed 6)
          ✓ setTemporary function (getData -> merge -> setData) should return error if getData does not return an object and not call setData [line 127] (killed 3)
          ✓ setTemporary function (getData -> merge -> setData) should return error if getData throws an error and not call setData [line 133] (killed 2)
          ~ setTemporary function (getData -> merge -> setData) should return error if setData throws an error [line 140] (covered 53)
          ✓ setTemporary function (getData -> merge -> setData) should deep merge nested objects within temporary [line 149] (killed 6)
          ~ setTemporary function (getData -> merge -> setData) should overwrite non-object properties during deep merge [line 198] (covered 51)
          ~ setTemporary function (getData -> merge -> setData) should handle merging onto an empty initial temporary object [line 220] (covered 51)
          ~ setTemporary function (getData -> merge -> setData) should handle merging onto a non-existent initial temporary object [line 230] (covered 52)
          ~ setTemporary function (getData -> merge -> setData) should preserve existing temporary data if source is not object [line 240] (covered 13)
          ~ setTemporary function (getData -> merge -> setData) should overwrite non-object temporary with object from input [line 251] (covered 52)
      2025-03-30/cyberpunkAdventure.test.js
        ✓ Cyberpunk Text Game initial naming and intro [line 20] (killed 33)
        ✓ Cyberpunk Text Game goes to Hacker Den and requires password [line 25] (killed 19)
        ✓ Cyberpunk Text Game goes to Transport Hub and trades datapad [line 34] (killed 19)
        ✓ Cyberpunk Text Game goes to Back Alley and finds stimpack (success) [line 50] (killed 16)
        ✓ Cyberpunk Text Game unknown input in hub [line 64] (killed 4)
      2025-04-05/httpRequest.test.js
        ✓ httpRequest returns correct JSON for a basic URL [line 5] (killed 3)
        ~ httpRequest handles URLs with query parameters [line 13] (covered 3)
        ~ httpRequest returns a stringified JSON object [line 20] (covered 3)
        ~ httpRequest contains only the expected structure [line 27] (covered 3)
        ~ httpRequest throws or handles invalid URLs gracefully [line 35] (covered 3)

[Survived] ArithmeticOperator
src/browser/audio-controls.js:25:32
-       const minutes = Math.floor(audio.currentTime / 60);
+       const minutes = Math.floor(audio.currentTime * 60);
Tests ran:
    createUpdateTimeDisplay updates the time display with the current time of the audio
    createUpdateTimeDisplay handles when audio currentTime is 0


[Survived] StringLiteral
src/browser/audio-controls.js:27:41
-       timeDisplay.textContent = minutes + ":" + seconds;
+       timeDisplay.textContent = minutes + "" + seconds;
Tests ran:
    createUpdateTimeDisplay updates the time display with the current time of the audio
    createUpdateTimeDisplay handles when audio currentTime is 0


[Survived] StringLiteral
src/browser/audio-controls.js:26:79
-       const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
+       const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "");
Tests ran:
    createUpdateTimeDisplay updates the time display with the current time of the audio
    createUpdateTimeDisplay handles when audio currentTime is 0


[Survived] StringLiteral
src/browser/audio-controls.js:54:35
-       controlsContainer.className = "audio-controls";
+       controlsContainer.className = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:55:28
-       controlsContainer.id = "controls-" + audio.id;
+       controlsContainer.id = "" + audio.id;
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:63:30
-       playButton.textContent = "PLAY";
+       playButton.textContent = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:62:23
-       playButton.href = "#";
+       playButton.href = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:58:29
-       timeDisplay.className = "audio-time";
+       timeDisplay.className = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:65:34
-       addEventListener(playButton, "click", onPlayClick);
+       addEventListener(playButton, "", onPlayClick);
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:59:31
-       timeDisplay.textContent = "0:00";
+       timeDisplay.textContent = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:71:31
-       pauseButton.textContent = "PAUSE";
+       pauseButton.textContent = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:72:35
-       addEventListener(pauseButton, "click", onPauseClick);
+       addEventListener(pauseButton, "", onPauseClick);
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:78:34
-       addEventListener(stopButton, "click", onStopClick);
+       addEventListener(stopButton, "", onStopClick);
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:77:30
-       stopButton.textContent = "STOP";
+       stopButton.textContent = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:70:24
-       pauseButton.href = "#";
+       pauseButton.href = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:76:23
-       stopButton.href = "#";
+       stopButton.href = "";
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/audio-controls.js:81:29
-       addEventListener(audio, "timeupdate", updateTimeDisplay);
+       addEventListener(audio, "", updateTimeDisplay);
Tests ran:
    setupAudio assigns a default id to audio elements without an id
    setupAudio does not overwrite existing audio element ids
    setupAudio sets up audio controls correctly


[Survived] StringLiteral
src/browser/data.js:47:9
-     logFn('Starting to fetch blog data...');
+     logFn("");
Tests ran:
    fetchAndCacheBlogData should start fetching blog data and update state on success
    fetchAndCacheBlogData should handle HTTP errors properly
    fetchAndCacheBlogData should handle fetch exceptions
  and 1 more test!


[Survived] StringLiteral
src/browser/data.js:51:42
-     globalState.blogFetchPromise = fetchFn('./blog.json') 
+     globalState.blogFetchPromise = fetchFn("") 
Tests ran:
    fetchAndCacheBlogData should start fetching blog data and update state on success
    fetchAndCacheBlogData should handle HTTP errors properly
    fetchAndCacheBlogData should handle fetch exceptions
  and 1 more test!


[Survived] StringLiteral
src/browser/data.js:54:25
-           throw new Error(`HTTP error! status: ${response.status}`);
+           throw new Error(``);
Tests ran:
    fetchAndCacheBlogData should handle HTTP errors properly


[Survived] ConditionalExpression
src/browser/data.js:53:11
-         if (!response.ok) {
+         if (false) {
Tests ran:
    fetchAndCacheBlogData should start fetching blog data and update state on success
    fetchAndCacheBlogData should handle HTTP errors properly
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle


[Survived] BlockStatement
src/browser/data.js:53:25
-         if (!response.ok) {
-           throw new Error(`HTTP error! status: ${response.status}`);
-         }
+         if (!response.ok) {}
Tests ran:
    fetchAndCacheBlogData should handle HTTP errors properly


[Survived] BlockStatement
src/browser/data.js:84:51
-   function restoreBlogState(globalState, blogState) {
-     globalState.blogStatus = blogState.status;
-     globalState.blogError = blogState.error;
-     globalState.blogFetchPromise = blogState.fetchPromise;
-     globalState.blog = blogState.data;
-   }
+   function restoreBlogState(globalState, blogState) {}
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it


[Survived] EqualityOperator
src/browser/data.js:92:10
-     return status === BLOG_STATUS.IDLE || status === BLOG_STATUS.ERROR;
+     return status !== BLOG_STATUS.IDLE || status === BLOG_STATUS.ERROR;
Tests ran:
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle
    getData, setData, and getDeepStateCopy getData logs warning on error state
    getData, setData, and getDeepStateCopy getData omits internal state fields


[Survived] ConditionalExpression
src/browser/data.js:92:10
-     return status === BLOG_STATUS.IDLE || status === BLOG_STATUS.ERROR;
+     return false || status === BLOG_STATUS.ERROR;
Tests ran:
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle
    getData, setData, and getDeepStateCopy getData logs warning on error state
    getData, setData, and getDeepStateCopy getData omits internal state fields


[Survived] ConditionalExpression
src/browser/data.js:92:10
-     return status === BLOG_STATUS.IDLE || status === BLOG_STATUS.ERROR;
+     return true;
Tests ran:
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle
    getData, setData, and getDeepStateCopy getData logs warning on error state
    getData, setData, and getDeepStateCopy getData omits internal state fields


[Survived] LogicalOperator
src/browser/data.js:97:5
-       typeof value !== 'object' ||
-       value === null ||
+       typeof value !== 'object' && value === null ||
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] ConditionalExpression
src/browser/data.js:97:5
-       typeof value !== 'object' ||
-       value === null ||
+       false ||
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] ConditionalExpression
src/browser/data.js:98:5
-       value === null ||
+       false ||
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] ConditionalExpression
src/browser/data.js:97:5
-       typeof value !== 'object' ||
+       false ||
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] StringLiteral
src/browser/data.js:105:13
-       errorFn('setData received invalid data structure:', incomingState);
+       errorFn("", incomingState);
Tests ran:
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] StringLiteral
src/browser/data.js:106:21
-       throw new Error("setData requires an object with at least a 'temporary' property.");
+       throw new Error("");
Tests ran:
    getData, setData, and getDeepStateCopy setData throws and logs error if blog missing


[Survived] ConditionalExpression
src/browser/data.js:111:7
-     if (status === BLOG_STATUS.IDLE) {
+     if (true) {
Tests ran:
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle
    getData, setData, and getDeepStateCopy getData logs warning on error state
    getData, setData, and getDeepStateCopy getData omits internal state fields


[Survived] ConditionalExpression
src/browser/data.js:117:7
-     if (status === BLOG_STATUS.ERROR) {
+     if (true) {
Tests ran:
    getData, setData, and getDeepStateCopy getData triggers fetch if status is idle
    getData, setData, and getDeepStateCopy getData logs warning on error state
    getData, setData, and getDeepStateCopy getData omits internal state fields


[Survived] StringLiteral
src/browser/data.js:161:9
-     logFn('Global state updated:', globalState);
+     logFn("", globalState);
Tests ran:
    getData, setData, and getDeepStateCopy setData preserves existing blog if incoming state omits it


[NoCoverage] ArrowFunction
src/browser/document.js:2:31
-   export const getElementById = (doc, id) => doc.getElementById(id);
+   export const getElementById = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:3:30
-   export const querySelector = (el, selector) => el.querySelector(selector);
+   export const querySelector = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:4:33
-   export const querySelectorAll = (docOrEl, selector) => docOrEl.querySelectorAll(selector);
+   export const querySelectorAll = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:5:33
-   export const getAudioElements = (doc) => querySelectorAll(doc, "audio");
+   export const getAudioElements = () => undefined;

[NoCoverage] StringLiteral
src/browser/document.js:5:64
-   export const getAudioElements = (doc) => querySelectorAll(doc, "audio");
+   export const getAudioElements = (doc) => querySelectorAll(doc, "");

[NoCoverage] ArrowFunction
src/browser/document.js:6:40
-   export const removeControlsAttribute = (audio) => audio.removeAttribute("controls");
+   export const removeControlsAttribute = () => undefined;

[NoCoverage] StringLiteral
src/browser/document.js:6:73
-   export const removeControlsAttribute = (audio) => audio.removeAttribute("controls");
+   export const removeControlsAttribute = (audio) => audio.removeAttribute("");

[NoCoverage] ArrowFunction
src/browser/document.js:7:30
-   export const createElement = (doc, tag) => doc.createElement(tag);
+   export const createElement = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:8:31
-   export const createTextNode = (doc) => doc.createTextNode(" ");
+   export const createTextNode = () => undefined;

[NoCoverage] StringLiteral
src/browser/document.js:8:59
-   export const createTextNode = (doc) => doc.createTextNode(" ");
+   export const createTextNode = (doc) => doc.createTextNode("");

[NoCoverage] ArrowFunction
src/browser/document.js:9:33
-   export const addEventListener = (element, event, func) => element.addEventListener(event, func);
+   export const addEventListener = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:10:28
-   export const appendChild = (parentNode, newChild) => parentNode.appendChild(newChild);
+   export const appendChild = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:11:29
-   export const insertBefore = (parentNode, newChild, refChild) => parentNode.insertBefore(newChild, refChild);
+   export const insertBefore = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:14:28
-   export const stopDefault = (e) => e.preventDefault();
+   export const stopDefault = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:15:26
-   export const playAudio = (audio) => audio.play();
+   export const playAudio = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:16:27
-   export const pauseAudio = (audio) => audio.pause();
+   export const pauseAudio = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:19:20
-   export const log = (...args) => console.log(...args);
+   export const log = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:20:21
-   export const warn = (...args) => console.warn(...args);
+   export const warn = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:21:22
-   export const error = (...args) => console.error(...args);
+   export const error = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:24:32
-   export const getRandomNumber = () => Math.random();
+   export const getRandomNumber = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:25:31
-   export const getCurrentTime = () => new Date().toISOString();
+   export const getCurrentTime = () => undefined;

[NoCoverage] ArrowFunction
src/browser/document.js:26:36
-   export const hasNextSiblingClass = (link, cls) =>
-     link.nextElementSibling && link.nextElementSibling.classList.contains(cls);
+   export const hasNextSiblingClass = () => undefined;

[NoCoverage] ConditionalExpression
src/browser/document.js:27:3
-     link.nextElementSibling && link.nextElementSibling.classList.contains(cls);
+     true;

[NoCoverage] ConditionalExpression
src/browser/document.js:27:3
-     link.nextElementSibling && link.nextElementSibling.classList.contains(cls);
+     false;

[NoCoverage] LogicalOperator
src/browser/document.js:27:3
-     link.nextElementSibling && link.nextElementSibling.classList.contains(cls);
+     link.nextElementSibling || link.nextElementSibling.classList.contains(cls);

[NoCoverage] BlockStatement
src/browser/document.js:30:46
-   export const addWarning = (outputElement) => {
-     outputElement.parentElement.classList.add('warning');
-   };
+   export const addWarning = (outputElement) => {};

[NoCoverage] StringLiteral
src/browser/document.js:31:45
-     outputElement.parentElement.classList.add('warning');
+     outputElement.parentElement.classList.add("");

[NoCoverage] ArrowFunction
src/browser/document.js:34:34
-   export const removeNextSibling = link =>
-     link.nextElementSibling && link.nextElementSibling.remove();
+   export const removeNextSibling = () => undefined;

[NoCoverage] ConditionalExpression
src/browser/document.js:35:3
-     link.nextElementSibling && link.nextElementSibling.remove();
+     true;

[NoCoverage] ConditionalExpression
src/browser/document.js:35:3
-     link.nextElementSibling && link.nextElementSibling.remove();
+     false;

[NoCoverage] LogicalOperator
src/browser/document.js:35:3
-     link.nextElementSibling && link.nextElementSibling.remove();
+     link.nextElementSibling || link.nextElementSibling.remove();

[NoCoverage] BlockStatement
src/browser/document.js:37:50
-   export function setTextContent(element, content) {
-     element.textContent = content;
-   }
+   export function setTextContent(element, content) {}

[NoCoverage] ObjectLiteral
src/browser/main.js:1:19
-   let globalState = {
-     blog: null, // Holds the fetched blog data
-     blogStatus: 'idle', // 'idle', 'loading', 'loaded', 'error'
-     blogError: null, // Stores any error during fetch
-     blogFetchPromise: null, // Tracks the ongoing fetch promise
-     temporary: {} // Holds data managed by toys like setTemporary
-   };
+   let globalState = {};

[NoCoverage] StringLiteral
src/browser/main.js:3:15
-     blogStatus: 'idle', // 'idle', 'loading', 'loaded', 'error'
+     blogStatus: "", // 'idle', 'loading', 'loaded', 'error'

[NoCoverage] BlockStatement
src/browser/main.js:44:55
-   function importModule(modulePath, onSuccess, onError) {
-     import(modulePath).then(onSuccess).catch(onError);
-   }
+   function importModule(modulePath, onSuccess, onError) {}

[NoCoverage] ArrowFunction
src/browser/main.js:48:27
-   const createHandleClick = (link, className) => event => {
-     stopDefault(event);
-     toggleHideLink(
-       link,
-       className,
-       hasNextSiblingClass,
-       removeNextSibling,
-       createHideSpan
-     );
-   };
+   const createHandleClick = () => undefined;

[NoCoverage] BlockStatement
src/browser/main.js:48:57
-   const createHandleClick = (link, className) => event => {
-     stopDefault(event);
-     toggleHideLink(
-       link,
-       className,
-       hasNextSiblingClass,
-       removeNextSibling,
-       createHideSpan
-     );
-   };
+   const createHandleClick = (link, className) => event => {};

[NoCoverage] BlockStatement
src/browser/main.js:59:45
-   const createHideSpan = (link, className) => {
-     var span = createElement(document, 'span');
-     span.classList.add('hide-span');
-     appendChild(span, document.createTextNode(" ("));
-     var hideLink = createElement(document, 'a');
-     hideLink.textContent = "hide";
-     addEventListener(hideLink, 'click', function(event) {
-       stopDefault(event);
-       hideArticlesByClass(
-         className,
-         tagName => document.getElementsByTagName(tagName),
-         (element, cls) => element.classList.contains(cls),
-         element => element.style.display = 'none'
-       );
-     });
-     appendChild(span, hideLink);
-     appendChild(span, document.createTextNode(")"));
-     insertBefore(link.parentNode, span, link.nextSibling);
-   };
+   const createHideSpan = (link, className) => {};

[NoCoverage] StringLiteral
src/browser/main.js:60:38
-     var span = createElement(document, 'span');
+     var span = createElement(document, "");

[NoCoverage] StringLiteral
src/browser/main.js:61:22
-     span.classList.add('hide-span');
+     span.classList.add("");

[NoCoverage] StringLiteral
src/browser/main.js:62:45
-     appendChild(span, document.createTextNode(" ("));
+     appendChild(span, document.createTextNode(""));

[NoCoverage] StringLiteral
src/browser/main.js:64:42
-     var hideLink = createElement(document, 'a');
+     var hideLink = createElement(document, "");

[NoCoverage] StringLiteral
src/browser/main.js:65:26
-     hideLink.textContent = "hide";
+     hideLink.textContent = "";

[NoCoverage] StringLiteral
src/browser/main.js:66:30
-     addEventListener(hideLink, 'click', function(event) {
+     addEventListener(hideLink, "", function(event) {

[NoCoverage] BlockStatement
src/browser/main.js:66:55
-     addEventListener(hideLink, 'click', function(event) {
-       stopDefault(event);
-       hideArticlesByClass(
-         className,
-         tagName => document.getElementsByTagName(tagName),
-         (element, cls) => element.classList.contains(cls),
-         element => element.style.display = 'none'
-       );
-     });
+     addEventListener(hideLink, 'click', function(event) {});

[NoCoverage] ArrowFunction
src/browser/main.js:70:7
-         tagName => document.getElementsByTagName(tagName),
+         () => undefined,

[NoCoverage] ArrowFunction
src/browser/main.js:71:7
-         (element, cls) => element.classList.contains(cls),
+         () => undefined,

[NoCoverage] ArrowFunction
src/browser/main.js:72:7
-         element => element.style.display = 'none'
+         () => undefined

[NoCoverage] StringLiteral
src/browser/main.js:72:42
-         element => element.style.display = 'none'
+         element => element.style.display = ""

[NoCoverage] StringLiteral
src/browser/main.js:77:45
-     appendChild(span, document.createTextNode(")"));
+     appendChild(span, document.createTextNode(""));

[NoCoverage] BlockStatement
src/browser/main.js:81:22
-   function createEnv() {
-     return new Map([
-       ["getRandomNumber", getRandomNumber],
-       ["getCurrentTime", getCurrentTime],
-       ["getData", () => getData(globalState, fetch, log, error, warn)],
-       ["setData", (newData) => setData(newData, globalState, log, error)]
-     ]);
-   }
+   function createEnv() {}

[NoCoverage] ArrayDeclaration
src/browser/main.js:82:18
-     return new Map([
-       ["getRandomNumber", getRandomNumber],
-       ["getCurrentTime", getCurrentTime],
-       ["getData", () => getData(globalState, fetch, log, error, warn)],
-       ["setData", (newData) => setData(newData, globalState, log, error)]
-     ]);
+     return new Map([]);

[NoCoverage] ArrayDeclaration
src/browser/main.js:83:5
-       ["getRandomNumber", getRandomNumber],
+       [],

[NoCoverage] StringLiteral
src/browser/main.js:83:6
-       ["getRandomNumber", getRandomNumber],
+       ["", getRandomNumber],

[NoCoverage] ArrayDeclaration
src/browser/main.js:84:5
-       ["getCurrentTime", getCurrentTime],
+       [],

[NoCoverage] StringLiteral
src/browser/main.js:84:6
-       ["getCurrentTime", getCurrentTime],
+       ["", getCurrentTime],

[NoCoverage] ArrayDeclaration
src/browser/main.js:85:5
-       ["getData", () => getData(globalState, fetch, log, error, warn)],
+       [],

[NoCoverage] StringLiteral
src/browser/main.js:85:6
-       ["getData", () => getData(globalState, fetch, log, error, warn)],
+       ["", () => getData(globalState, fetch, log, error, warn)],

[NoCoverage] ArrowFunction
src/browser/main.js:85:17
-       ["getData", () => getData(globalState, fetch, log, error, warn)],
+       ["getData", () => undefined],

[NoCoverage] ArrayDeclaration
src/browser/main.js:86:5
-       ["setData", (newData) => setData(newData, globalState, log, error)]
+       []

[NoCoverage] StringLiteral
src/browser/main.js:86:6
-       ["setData", (newData) => setData(newData, globalState, log, error)]
+       ["", (newData) => setData(newData, globalState, log, error)]

[NoCoverage] ArrowFunction
src/browser/main.js:86:17
-       ["setData", (newData) => setData(newData, globalState, log, error)]
+       ["setData", () => undefined]

[NoCoverage] BlockStatement
src/browser/main.js:90:72
-   function createIntersectionObserver(article, modulePath, functionName) {
-     return new IntersectionObserver((entries, observer) =>
-       handleIntersectionEntries(entries, observer, modulePath, article, functionName), {
-       root: null,
-       threshold: 0.1
-     });
-   }
+   function createIntersectionObserver(article, modulePath, functionName) {}

[NoCoverage] ArrowFunction
src/browser/main.js:91:35
-     return new IntersectionObserver((entries, observer) =>
-       handleIntersectionEntries(entries, observer, modulePath, article, functionName), {
+     return new IntersectionObserver(() => undefined, {

[NoCoverage] ObjectLiteral
src/browser/main.js:92:86
-       handleIntersectionEntries(entries, observer, modulePath, article, functionName), {
-       root: null,
-       threshold: 0.1
-     });
+       handleIntersectionEntries(entries, observer, modulePath, article, functionName), {});

[NoCoverage] BlockStatement
src/browser/main.js:98:81
-   function handleIntersection(entry, observer, modulePath, article, functionName) {
-     if (entry.isIntersecting) {
-       const dom = { createElement, setTextContent, stopDefault, addWarning, addEventListener, querySelector };
-       importModule(
-         modulePath,
-         initialiseModule(article, functionName, globalState, createEnv, error, fetch, dom),
-         handleModuleError(modulePath, error)
-       );
-       observer.disconnect();
-     }
-   }
+   function handleIntersection(entry, observer, modulePath, article, functionName) {}

[NoCoverage] ConditionalExpression
src/browser/main.js:99:7
-     if (entry.isIntersecting) {
+     if (true) {

[NoCoverage] ConditionalExpression
src/browser/main.js:99:7
-     if (entry.isIntersecting) {
+     if (false) {

[NoCoverage] BlockStatement
src/browser/main.js:99:29
-     if (entry.isIntersecting) {
-       const dom = { createElement, setTextContent, stopDefault, addWarning, addEventListener, querySelector };
-       importModule(
-         modulePath,
-         initialiseModule(article, functionName, globalState, createEnv, error, fetch, dom),
-         handleModuleError(modulePath, error)
-       );
-       observer.disconnect();
-     }
+     if (entry.isIntersecting) {}

[NoCoverage] ObjectLiteral
src/browser/main.js:100:17
-       const dom = { createElement, setTextContent, stopDefault, addWarning, addEventListener, querySelector };
+       const dom = {};

[NoCoverage] BlockStatement
src/browser/main.js:110:90
-   function handleIntersectionEntries(entries, observer, modulePath, article, functionName) {
-     entries.forEach(entry => handleIntersection(entry, observer, modulePath, article, functionName));
-   }
+   function handleIntersectionEntries(entries, observer, modulePath, article, functionName) {}

[NoCoverage] ArrowFunction
src/browser/main.js:111:19
-     entries.forEach(entry => handleIntersection(entry, observer, modulePath, article, functionName));
+     entries.forEach(() => undefined);

[NoCoverage] BlockStatement
src/browser/main.js:126:30
-   const handleTagLinks = () => {
-     const handleLink = link => {
-       const handleClassName = className => {
-         if (className.indexOf('tag-') === 0) {
-           const handleClick = createHandleClick(link, className);
-           addEventListener(link, 'click', handleClick);
-           return; // exit after first tag- match
-         }
-       };
-       Array.from(link.classList).forEach(handleClassName);
-     };
-     Array.from(document.getElementsByTagName('a')).forEach(handleLink);
-   };
+   const handleTagLinks = () => {};

[NoCoverage] BlockStatement
src/browser/main.js:127:30
-     const handleLink = link => {
-       const handleClassName = className => {
-         if (className.indexOf('tag-') === 0) {
-           const handleClick = createHandleClick(link, className);
-           addEventListener(link, 'click', handleClick);
-           return; // exit after first tag- match
-         }
-       };
-       Array.from(link.classList).forEach(handleClassName);
-     };
+     const handleLink = link => {};

[NoCoverage] BlockStatement
src/browser/main.js:128:42
-       const handleClassName = className => {
-         if (className.indexOf('tag-') === 0) {
-           const handleClick = createHandleClick(link, className);
-           addEventListener(link, 'click', handleClick);
-           return; // exit after first tag- match
-         }
-       };
+       const handleClassName = className => {};

[NoCoverage] ConditionalExpression
src/browser/main.js:129:11
-         if (className.indexOf('tag-') === 0) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/browser/main.js:129:11
-         if (className.indexOf('tag-') === 0) {
+         if (false) {

[NoCoverage] EqualityOperator
src/browser/main.js:129:11
-         if (className.indexOf('tag-') === 0) {
+         if (className.indexOf('tag-') !== 0) {

[NoCoverage] StringLiteral
src/browser/main.js:129:29
-         if (className.indexOf('tag-') === 0) {
+         if (className.indexOf("") === 0) {

[NoCoverage] BlockStatement
src/browser/main.js:129:44
-         if (className.indexOf('tag-') === 0) {
-           const handleClick = createHandleClick(link, className);
-           addEventListener(link, 'click', handleClick);
-           return; // exit after first tag- match
-         }
+         if (className.indexOf('tag-') === 0) {}

[NoCoverage] StringLiteral
src/browser/main.js:131:32
-           addEventListener(link, 'click', handleClick);
+           addEventListener(link, "", handleClick);

[NoCoverage] StringLiteral
src/browser/main.js:139:44
-     Array.from(document.getElementsByTagName('a')).forEach(handleLink);
+     Array.from(document.getElementsByTagName("")).forEach(handleLink);

[Survived] EqualityOperator
src/browser/tags.js:14:19
-     for (var i = 0; i < articles.length; i++) {
+     for (var i = 0; i <= articles.length; i++) {
Tests ran:
    hideArticlesByClass does not throw when given a class and no matching elements
    hideArticlesByClass hides articles with the given class


[Survived] StringLiteral
src/browser/tags.js:13:39
-     var articles = getElementsByTagName('article');
+     var articles = getElementsByTagName("");
Tests ran:
    hideArticlesByClass does not throw when given a class and no matching elements
    hideArticlesByClass hides articles with the given class


[Survived] StringLiteral
src/browser/tags.js:31:33
-     if (hasNextSiblingClass(link, 'hide-span')) {
+     if (hasNextSiblingClass(link, "")) {
Tests ran:
    toggleHideLink removes the next sibling when it has the hide-span class
    toggleHideLink creates a hide span when there is no next sibling with the hide-span class


[Survived] BlockStatement
src/browser/toys.js:25:22
-     return (module) => {
-       const processingFunction = module[functionName];
-       initializeInteractiveComponent(
-         article,
-         processingFunction,
-         globalState,
-         createEnv,
-         error,
-         fetch,
-         dom
-       );
-     };
+     return (module) => {};
Tests ran:
    initialiseModule can be invoked with minimal arguments


[Survived] ConditionalExpression
src/browser/toys.js:69:7
-     if (event) {
+     if (true) {
Tests ran:
    createHandleSubmit fetches from URL if processingFunction returns a request object
    createHandleSubmit handles fetch failure if request URL is unreachable
    createHandleSubmit handles error thrown by processingFunction
  and 2 more tests!


[Survived] BlockStatement
src/browser/toys.js:69:14
-     if (event) {
-       dom.stopDefault(event);
-     }
+     if (event) {}
Tests ran:
    createHandleSubmit fetches from URL if processingFunction returns a request object
    createHandleSubmit handles fetch failure if request URL is unreachable
    createHandleSubmit handles error thrown by processingFunction
  and 1 more test!


[Survived] ConditionalExpression
src/browser/toys.js:69:7
-     if (event) {
+     if (false) {
Tests ran:
    createHandleSubmit fetches from URL if processingFunction returns a request object
    createHandleSubmit handles fetch failure if request URL is unreachable
    createHandleSubmit handles error thrown by processingFunction
  and 2 more tests!


[Survived] BlockStatement
src/browser/toys.js:83:13
-       } catch {
-         parsed = null;
-       }
+       } catch {}
Tests ran:
    createHandleSubmit handles being called without an event
    initializeInteractiveComponent attaches click and keypress listeners with expected arguments


[Survived] ConditionalExpression
src/browser/toys.js:87:19
-       if (parsed && typeof parsed === 'object' && parsed.request && typeof parsed.request.url === 'string') {
+       if (parsed && true && parsed.request && typeof parsed.request.url === 'string') {
Tests ran:
    createHandleSubmit fetches from URL if processingFunction returns a request object
    createHandleSubmit handles fetch failure if request URL is unreachable


[Survived] ConditionalExpression
src/browser/toys.js:87:67
-       if (parsed && typeof parsed === 'object' && parsed.request && typeof parsed.request.url === 'string') {
+       if (parsed && typeof parsed === 'object' && parsed.request && true) {
Tests ran:
    createHandleSubmit fetches from URL if processingFunction returns a request object
    createHandleSubmit handles fetch failure if request URL is unreachable


[Survived] StringLiteral
src/browser/toys.js:125:51
-     const outputParent = dom.querySelector(article, 'div.output'); // Get the parent element
+     const outputParent = dom.querySelector(article, ""); // Get the parent element
Tests ran:
    initialiseModule can be invoked with minimal arguments
    initializeInteractiveComponent attaches click and keypress listeners with expected arguments
    initializeInteractiveComponent does not call handleSubmit when a non-Enter key is pressed


[Survived] BooleanLiteral
src/browser/toys.js:129:27
-     submitButton.disabled = true;
+     submitButton.disabled = false;
Tests ran:
    initialiseModule can be invoked with minimal arguments
    initializeInteractiveComponent attaches click and keypress listeners with expected arguments
    initializeInteractiveComponent does not call handleSubmit when a non-Enter key is pressed


[Survived] BooleanLiteral
src/browser/toys.js:128:27
-     inputElement.disabled = true;
+     inputElement.disabled = false;
Tests ran:
    initialiseModule can be invoked with minimal arguments
    initializeInteractiveComponent attaches click and keypress listeners with expected arguments
    initializeInteractiveComponent does not call handleSubmit when a non-Enter key is pressed


[Survived] StringLiteral
src/browser/toys.js:132:31
-     outputElement.textContent = 'Initialising...';
+     outputElement.textContent = "";
Tests ran:
    initialiseModule can be invoked with minimal arguments
    initializeInteractiveComponent attaches click and keypress listeners with expected arguments
    initializeInteractiveComponent does not call handleSubmit when a non-Enter key is pressed


[NoCoverage] StringLiteral
src/generator/copy.js:12:45
-   const projectRoot = path.resolve(__dirname, '../..'); // Adjust based on script location
+   const projectRoot = path.resolve(__dirname, ""); // Adjust based on script location

[NoCoverage] StringLiteral
src/generator/copy.js:13:42
-   const srcDir = path.resolve(projectRoot, 'src');
+   const srcDir = path.resolve(projectRoot, "");

[NoCoverage] StringLiteral
src/generator/copy.js:14:45
-   const publicDir = path.resolve(projectRoot, 'public');
+   const publicDir = path.resolve(projectRoot, "");

[NoCoverage] StringLiteral
src/generator/copy.js:15:41
-   const srcToysDir = path.resolve(srcDir, 'toys');
+   const srcToysDir = path.resolve(srcDir, "");

[NoCoverage] StringLiteral
src/generator/copy.js:16:44
-   const srcBrowserDir = path.resolve(srcDir, 'browser');
+   const srcBrowserDir = path.resolve(srcDir, "");

[NoCoverage] BooleanLiteral
src/generator/copy.js:19:5
-   if (!fs.existsSync(publicDir)) {
+   if (fs.existsSync(publicDir)) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:19:5
-   if (!fs.existsSync(publicDir)) {
+   if (true) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:19:5
-   if (!fs.existsSync(publicDir)) {
+   if (false) {

[NoCoverage] BlockStatement
src/generator/copy.js:19:32
-   if (!fs.existsSync(publicDir)) {
-     fs.mkdirSync(publicDir, { recursive: true });
-   }
+   if (!fs.existsSync(publicDir)) {}

[NoCoverage] ObjectLiteral
src/generator/copy.js:20:27
-     fs.mkdirSync(publicDir, { recursive: true });
+     fs.mkdirSync(publicDir, {});

[NoCoverage] BooleanLiteral
src/generator/copy.js:20:40
-     fs.mkdirSync(publicDir, { recursive: true });
+     fs.mkdirSync(publicDir, { recursive: false });

[NoCoverage] BlockStatement
src/generator/copy.js:26:27
-   function findJsFiles(dir) {
-     let jsFiles = [];
-     const entries = fs.readdirSync(dir, { withFileTypes: true });
-     for (const entry of entries) {
-       const fullPath = path.join(dir, entry.name);
-       if (entry.isDirectory()) {
-         jsFiles = jsFiles.concat(findJsFiles(fullPath));
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
-         jsFiles.push(fullPath);
-       }
-     }
-     return jsFiles;
-   }
+   function findJsFiles(dir) {}

[NoCoverage] ArrayDeclaration
src/generator/copy.js:27:17
-     let jsFiles = [];
+     let jsFiles = ["Stryker was here"];

[NoCoverage] ObjectLiteral
src/generator/copy.js:28:39
-     const entries = fs.readdirSync(dir, { withFileTypes: true });
+     const entries = fs.readdirSync(dir, {});

[NoCoverage] BooleanLiteral
src/generator/copy.js:28:56
-     const entries = fs.readdirSync(dir, { withFileTypes: true });
+     const entries = fs.readdirSync(dir, { withFileTypes: false });

[NoCoverage] BlockStatement
src/generator/copy.js:29:32
-     for (const entry of entries) {
-       const fullPath = path.join(dir, entry.name);
-       if (entry.isDirectory()) {
-         jsFiles = jsFiles.concat(findJsFiles(fullPath));
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
-         jsFiles.push(fullPath);
-       }
-     }
+     for (const entry of entries) {}

[NoCoverage] ConditionalExpression
src/generator/copy.js:31:9
-       if (entry.isDirectory()) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:31:9
-       if (entry.isDirectory()) {
+       if (false) {

[NoCoverage] BlockStatement
src/generator/copy.js:31:30
-       if (entry.isDirectory()) {
-         jsFiles = jsFiles.concat(findJsFiles(fullPath));
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       if (entry.isDirectory()) {} else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:33:16
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (true) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:33:16
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (false) {

[NoCoverage] LogicalOperator
src/generator/copy.js:33:16
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.endsWith('.js') || !entry.name.endsWith('.test.js')) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:33:16
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (true && !entry.name.endsWith('.test.js')) {

[NoCoverage] LogicalOperator
src/generator/copy.js:33:16
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() || entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {

[NoCoverage] MethodExpression
src/generator/copy.js:33:34
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.startsWith('.js') && !entry.name.endsWith('.test.js')) {

[NoCoverage] StringLiteral
src/generator/copy.js:33:54
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.endsWith("") && !entry.name.endsWith('.test.js')) {

[NoCoverage] BooleanLiteral
src/generator/copy.js:33:64
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.endsWith('.js') && entry.name.endsWith('.test.js')) {

[NoCoverage] MethodExpression
src/generator/copy.js:33:65
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.startsWith('.test.js')) {

[NoCoverage] StringLiteral
src/generator/copy.js:33:85
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
+       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith("")) {

[NoCoverage] BlockStatement
src/generator/copy.js:33:98
-       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {
-         jsFiles.push(fullPath);
-       }
+       } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {}

[NoCoverage] BlockStatement
src/generator/copy.js:44:30
-   toyFiles.forEach(filePath => {
-     const relativePath = path.relative(srcToysDir, filePath);
-     const destPath = path.join(publicDir, relativePath);
-     const destDir = path.dirname(destPath);
-     // Ensure the destination directory exists
-     if (!fs.existsSync(destDir)) {
-       fs.mkdirSync(destDir, { recursive: true });
-     }
-     // Copy the file
-     fs.copyFileSync(filePath, destPath);
-     console.log(`Copied: ${filePath} -> ${destPath}`);
-   });
+   toyFiles.forEach(filePath => {});

[NoCoverage] BooleanLiteral
src/generator/copy.js:50:7
-     if (!fs.existsSync(destDir)) {
+     if (fs.existsSync(destDir)) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:50:7
-     if (!fs.existsSync(destDir)) {
+     if (true) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:50:7
-     if (!fs.existsSync(destDir)) {
+     if (false) {

[NoCoverage] BlockStatement
src/generator/copy.js:50:32
-     if (!fs.existsSync(destDir)) {
-       fs.mkdirSync(destDir, { recursive: true });
-     }
+     if (!fs.existsSync(destDir)) {}

[NoCoverage] ObjectLiteral
src/generator/copy.js:51:27
-       fs.mkdirSync(destDir, { recursive: true });
+       fs.mkdirSync(destDir, {});

[NoCoverage] BooleanLiteral
src/generator/copy.js:51:40
-       fs.mkdirSync(destDir, { recursive: true });
+       fs.mkdirSync(destDir, { recursive: false });

[NoCoverage] StringLiteral
src/generator/copy.js:56:15
-     console.log(`Copied: ${filePath} -> ${destPath}`);
+     console.log(``);

[NoCoverage] StringLiteral
src/generator/copy.js:59:13
-   console.log('Toy files copied successfully!');
+   console.log("");

[NoCoverage] ArrayDeclaration
src/generator/copy.js:63:22
-   const assetsToCopy = [
-     { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, 'blog.json') },
-     { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, 'data.js') },
-     { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, 'main.js') },
-     { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, 'toys.js') },
-     { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, 'audio-controls.js') },
-     { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, 'document.js') },
-     { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, 'tags.js') }
-   ];
+   const assetsToCopy = [];

[NoCoverage] ObjectLiteral
src/generator/copy.js:64:3
-     { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, 'blog.json') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:64:28
-     { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, 'blog.json') },
+     { src: path.join(srcDir, ""), dest: path.join(publicDir, 'blog.json') },

[NoCoverage] StringLiteral
src/generator/copy.js:64:69
-     { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, 'blog.json') },
+     { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:65:3
-     { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, 'data.js') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:65:35
-     { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, 'data.js') },
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'data.js') },

[NoCoverage] StringLiteral
src/generator/copy.js:65:74
-     { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, 'data.js') },
+     { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:66:3
-     { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, 'main.js') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:66:35
-     { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, 'main.js') },
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'main.js') },

[NoCoverage] StringLiteral
src/generator/copy.js:66:74
-     { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, 'main.js') },
+     { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:67:3
-     { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, 'toys.js') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:67:35
-     { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, 'toys.js') },
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'toys.js') },

[NoCoverage] StringLiteral
src/generator/copy.js:67:74
-     { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, 'toys.js') },
+     { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:68:3
-     { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, 'audio-controls.js') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:68:35
-     { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, 'audio-controls.js') },
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'audio-controls.js') },

[NoCoverage] StringLiteral
src/generator/copy.js:68:84
-     { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, 'audio-controls.js') },
+     { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:69:3
-     { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, 'document.js') },
+     {},

[NoCoverage] StringLiteral
src/generator/copy.js:69:35
-     { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, 'document.js') },
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'document.js') },

[NoCoverage] StringLiteral
src/generator/copy.js:69:78
-     { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, 'document.js') },
+     { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, "") },

[NoCoverage] ObjectLiteral
src/generator/copy.js:70:3
-     { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, 'tags.js') }
+     {}

[NoCoverage] StringLiteral
src/generator/copy.js:70:35
-     { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, 'tags.js') }
+     { src: path.join(srcBrowserDir, ""), dest: path.join(publicDir, 'tags.js') }

[NoCoverage] StringLiteral
src/generator/copy.js:70:74
-     { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, 'tags.js') }
+     { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, "") }

[NoCoverage] BlockStatement
src/generator/copy.js:73:31
-   assetsToCopy.forEach(asset => {
-     if (fs.existsSync(asset.src)) {
-       fs.copyFileSync(asset.src, asset.dest);
-       console.log(`Copied: ${asset.src} -> ${asset.dest}`);
-     } else {
-       console.warn(`Warning: Asset not found, skipping copy: ${asset.src}`);
-     }
-   });
+   assetsToCopy.forEach(asset => {});

[NoCoverage] ConditionalExpression
src/generator/copy.js:74:7
-     if (fs.existsSync(asset.src)) {
+     if (true) {

[NoCoverage] ConditionalExpression
src/generator/copy.js:74:7
-     if (fs.existsSync(asset.src)) {
+     if (false) {

[NoCoverage] BlockStatement
src/generator/copy.js:74:33
-     if (fs.existsSync(asset.src)) {
-       fs.copyFileSync(asset.src, asset.dest);
-       console.log(`Copied: ${asset.src} -> ${asset.dest}`);
-     } else {
+     if (fs.existsSync(asset.src)) {} else {

[NoCoverage] StringLiteral
src/generator/copy.js:76:17
-       console.log(`Copied: ${asset.src} -> ${asset.dest}`);
+       console.log(``);

[NoCoverage] BlockStatement
src/generator/copy.js:77:10
-     } else {
-       console.warn(`Warning: Asset not found, skipping copy: ${asset.src}`);
-     }
+     } else {}

[NoCoverage] StringLiteral
src/generator/copy.js:78:18
-       console.warn(`Warning: Asset not found, skipping copy: ${asset.src}`);
+       console.warn(``);

[NoCoverage] StringLiteral
src/generator/copy.js:82:13
-   console.log('Specific assets copied successfully!');
+   console.log("");

[NoCoverage] BlockStatement
src/generator/generator.js:161:39
-   function prefixWithEmptyKey(valueDiv) {
-     const emptyKeyDiv = createEmptyKeyDiv();
-     return createPair(emptyKeyDiv, valueDiv);
-   }
+   function prefixWithEmptyKey(valueDiv) {}

[NoCoverage] BlockStatement
src/generator/generator.js:169:32
-   function createHeaderContent() {
-     const valueDivs = [
-       createValueDiv(HEADER_BANNER),
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
-     ];
-     const parts = valueDivs.map(prefixWithEmptyKey);
-     
-     return join(parts);
-   }
+   function createHeaderContent() {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:170:21
-     const valueDivs = [
-       createValueDiv(HEADER_BANNER),
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
-     ];
+     const valueDivs = [];

[NoCoverage] ArrayDeclaration
src/generator/generator.js:172:35
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
+       createValueDiv(METADATA_TEXT, [])

[NoCoverage] BlockStatement
src/generator/generator.js:185:33
-   function createSection(content) {
-     return createDiv(CLASS.ENTRY, content);
-   }
+   function createSection(content) {}

[NoCoverage] BlockStatement
src/generator/generator.js:193:32
-   function createHeaderSection() {
-     const headerContent = createHeaderContent();
-     return createSection(headerContent);
-   }
+   function createHeaderSection() {}

[NoCoverage] BlockStatement
src/generator/generator.js:206:32
-   function createFooterContent() {
-     const classes = joinClasses([CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]);
-     const footerDiv = createDiv(classes, WARNING_MESSAGE);
-     return prefixWithEmptyKey(footerDiv);
-   }
+   function createFooterContent() {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:207:31
-     const classes = joinClasses([CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]);
+     const classes = joinClasses([]);

[NoCoverage] BlockStatement
src/generator/generator.js:216:32
-   function createFooterSection() {
-     const footerContent = createFooterContent();
-     return createSection(footerContent);
-   }
+   function createFooterSection() {}

[NoCoverage] BlockStatement
src/generator/generator.js:226:35
-   function createContainerDivOpen() {
-     const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);
-     return `<${DIV_TAG_NAME} ${idAttr}>`;
-   }
+   function createContainerDivOpen() {}

[NoCoverage] StringLiteral
src/generator/generator.js:228:10
-     return `<${DIV_TAG_NAME} ${idAttr}>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/generator.js:234:50
-   function createHeaderContentArray(headerElement) {
-     return [
-       headElement,
-       '<body>',
-       createContainerDivOpen(),
-       '<!-- Header -->',
-       headerElement,
-     ];
-   }
+   function createHeaderContentArray(headerElement) {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:235:10
-     return [
-       headElement,
-       '<body>',
-       createContainerDivOpen(),
-       '<!-- Header -->',
-       headerElement,
-     ];
+     return [];

[NoCoverage] StringLiteral
src/generator/generator.js:237:5
-       '<body>',
+       "",

[NoCoverage] StringLiteral
src/generator/generator.js:239:5
-       '<!-- Header -->',
+       "",

[NoCoverage] BlockStatement
src/generator/generator.js:247:29
-   function createPageHeader() {
-     const headerElement = createHeaderSection();
-     const contentArray = createHeaderContentArray(headerElement);
-     return contentArray.join('');
-   }
+   function createPageHeader() {}

[NoCoverage] StringLiteral
src/generator/generator.js:251:28
-     return contentArray.join('');
+     return contentArray.join("Stryker was here!");

[NoCoverage] BlockStatement
src/generator/generator.js:257:36
-   function createContainerDivClose() {
-     return '</div>';
-   }
+   function createContainerDivClose() {}

[NoCoverage] StringLiteral
src/generator/generator.js:258:10
-     return '</div>';
+     return "";

[NoCoverage] BlockStatement
src/generator/generator.js:264:28
-   function createBodyClose() {
-     return '</body>';
-   }
+   function createBodyClose() {}

[NoCoverage] StringLiteral
src/generator/generator.js:265:10
-     return '</body>';
+     return "";

[NoCoverage] BlockStatement
src/generator/generator.js:271:50
-   function createFooterContentArray(footerElement) {
-     return [
-       '',
-       footerElement,
-       createContainerDivClose(),
-       '<script type="module" src="main.js" defer></script>',
-       createBodyClose(),
-     ];
-   }
+   function createFooterContentArray(footerElement) {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:272:10
-     return [
-       '',
-       footerElement,
-       createContainerDivClose(),
-       '<script type="module" src="main.js" defer></script>',
-       createBodyClose(),
-     ];
+     return [];

[NoCoverage] StringLiteral
src/generator/generator.js:273:5
-       '',
+       "Stryker was here!",

[NoCoverage] StringLiteral
src/generator/generator.js:276:5
-       '<script type="module" src="main.js" defer></script>',
+       "",

[NoCoverage] BlockStatement
src/generator/generator.js:284:29
-   function createPageFooter() {
-     const footerElement = createFooterSection();
-     const contentArray = createFooterContentArray(footerElement);
-     return contentArray.join('');
-   }
+   function createPageFooter() {}

[NoCoverage] StringLiteral
src/generator/generator.js:288:28
-     return contentArray.join('');
+     return contentArray.join("Stryker was here!");

[NoCoverage] BlockStatement
src/generator/generator.js:325:18
-     if (!post.key) {
-       return '';
-     }
+     if (!post.key) {}

[NoCoverage] StringLiteral
src/generator/generator.js:326:12
-       return '';
+       return "Stryker was here!";

[NoCoverage] BlockStatement
src/generator/generator.js:493:30
-     if (!post.publicationDate) {
-       return '';
-     }
+     if (!post.publicationDate) {}

[NoCoverage] StringLiteral
src/generator/generator.js:494:12
-       return '';
+       return "Stryker was here!";

[NoCoverage] ArrowFunction
src/generator/generator.js:594:37
-     return (generators[mediaType] || (() => ''))(post);
+     return (generators[mediaType] || (() => undefined))(post);

[NoCoverage] StringLiteral
src/generator/generator.js:594:43
-     return (generators[mediaType] || (() => ''))(post);
+     return (generators[mediaType] || (() => "Stryker was here!"))(post);

[NoCoverage] ObjectLiteral
src/generator/generator.js:969:37
-   const createBlogComponents = () => ({
-     header: createPageHeader(),
-     footer: createPageFooter(),
-     wrapFunc: wrapHtml,
-   });
+   const createBlogComponents = () => ({});

[NoCoverage] BlockStatement
src/generator/generator.js:979:34
-   function getBlogGenerationArgs() {
-     const components = createBlogComponents();
-     const { header, footer, wrapFunc } = components;
-     return { header, footer, wrapFunc };
-   }
+   function getBlogGenerationArgs() {}

[NoCoverage] ObjectLiteral
src/generator/generator.js:982:10
-     return { header, footer, wrapFunc };
+     return {};

[NoCoverage] BlockStatement
src/generator/generator.js:985:44
-   export const generateBlogOuter = (blog) => {
-     const { header, footer, wrapFunc } = getBlogGenerationArgs();
-     return generateBlog(blog, header, footer, wrapFunc);
-   };
+   export const generateBlogOuter = (blog) => {};

[Survived] MethodExpression
src/generator/generator.js:93:19
-     const classes = [CLASS.VALUE, ...additionalClasses].filter(Boolean);
+     const classes = [CLASS.VALUE, ...additionalClasses];
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain a toy component for a post


[Survived] ConditionalExpression
src/generator/generator.js:325:7
-     if (!post.key) {
+     if (false) {
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] ConditionalExpression
src/generator/generator.js:389:41
-     return typeof content !== 'object' || content === null;
+     return typeof content !== 'object' || false;
Tests ran:
    Blog Generator should render quotes as blockquotes


[Survived] StringLiteral
src/generator/generator.js:400:43
-     return isTextContent(content) ? { type: 'text', content } : content;
+     return isTextContent(content) ? { type: "", content } : content;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:421:10
-     return type === 'text' && Array.isArray(content);
+     return true && Array.isArray(content);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should display tags for posts
  and 1 more test!


[Survived] ConditionalExpression
src/generator/generator.js:493:7
-     if (!post.publicationDate) {
+     if (false) {
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] ConditionalExpression
src/generator/generator.js:531:34
-     return Array.isArray(value) && value.length > 0;
+     return Array.isArray(value) && true;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] ConditionalExpression
src/generator/generator.js:531:10
-     return Array.isArray(value) && value.length > 0;
+     return true;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] EqualityOperator
src/generator/generator.js:531:34
-     return Array.isArray(value) && value.length > 0;
+     return Array.isArray(value) && value.length >= 0;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] LogicalOperator
src/generator/generator.js:531:10
-     return Array.isArray(value) && value.length > 0;
+     return Array.isArray(value) || value.length > 0;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] ConditionalExpression
src/generator/generator.js:540:10
-     return post.relatedLinks !== undefined && isNonEmptyArray(post.relatedLinks);
+     return true && isNonEmptyArray(post.relatedLinks);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] LogicalOperator
src/generator/generator.js:540:10
-     return post.relatedLinks !== undefined && isNonEmptyArray(post.relatedLinks);
+     return post.relatedLinks !== undefined || isNonEmptyArray(post.relatedLinks);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] ConditionalExpression
src/generator/generator.js:549:38
-     return Array.isArray(post.tags) && post.tags.length > 0;
+     return Array.isArray(post.tags) && true;
Tests ran:
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:556:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return true;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] EqualityOperator
src/generator/generator.js:549:38
-     return Array.isArray(post.tags) && post.tags.length > 0;
+     return Array.isArray(post.tags) && post.tags.length >= 0;
Tests ran:
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:556:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return false || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] EqualityOperator
src/generator/generator.js:556:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return mediaType !== 'youtube' || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] StringLiteral
src/generator/generator.js:556:24
-     return mediaType === 'youtube' || post.publicationDate;
+     return mediaType === "" || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] MethodExpression
src/generator/generator.js:723:10
-     return parts.filter(Boolean).join('');
+     return parts.join('');
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] OptionalChaining
src/generator/generator.js:789:28
-     return extractModulePath(post?.toy);
+     return extractModulePath(post.toy);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] OptionalChaining
src/generator/generator.js:797:30
-     return extractFunctionName(post?.toy);
+     return extractFunctionName(post.toy);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain a toy component for a post


[Survived] OptionalChaining
src/generator/generator.js:793:10
-     return toy?.functionName;
+     return toy.functionName;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain a toy component for a post


[Survived] LogicalOperator
src/generator/generator.js:814:10
-     return hasModulePath(post) && hasFunctionName(post);
+     return hasModulePath(post) || hasFunctionName(post);
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] StringLiteral
src/generator/generator.js:41:11
-     FOOTER: 'footer',
+     FOOTER: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:44:15
-     FULL_WIDTH: 'full-width',
+     FULL_WIDTH: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:62:22
-   const CONTAINER_ID = 'container';
+   const CONTAINER_ID = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:151:23
-   const METADATA_TEXT = `Software developer and philosopher in Berlin`;
+   const METADATA_TEXT = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:200:3
-     'All content is authored by Matt Heard and is <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>, unless otherwise noted.';
+     "";
Ran all tests for this mutant.

[Survived] ArrowFunction
src/generator/generator.js:969:30
-   const createBlogComponents = () => ({
-     header: createPageHeader(),
-     footer: createPageFooter(),
-     wrapFunc: wrapHtml,
-   });
+   const createBlogComponents = () => undefined;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/head.js:3:28
-   export const headElement = `<head>
-     <meta charset="UTF-8">
-     <meta name="viewport" content="width=device-width">
-     <title>Matt Heard</title>
-     <link rel="preconnect" href="https://fonts.googleapis.com">
-     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
-     <link href="https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap" rel="stylesheet">
-     <style>
-       ${styles}
-     </style>
-     
-     <!-- Define the component management system in the head -->
-     <script type="module">
-       // Define array of interactive components to initialize
-       window.interactiveComponents = [];
-       
-       /**
-        * Create a function that can add a component to the interactiveComponents list
-        * This is defined in the head so it's available as soon as possible
-        */
-       const createComponentAdder = () => {
-         /**
-          * Add a component to the interactive components list
-          * @param {string} id - The ID of the article element
-          * @param {string} modulePath - Path to the module containing the processing function
-          * @param {string} functionName - Name of the function to import from the module
-          * @returns {Object} The component configuration that was added
-          */
-         return function addComponent(id, modulePath, functionName) {
-           // Create the component configuration
-           const component = {
-             id,
-             modulePath,
-             functionName
-           };
-           
-           // Add to the global list
-           window.interactiveComponents.push(component);
-           
-           return component;
-         };
-       };
-       
-       // Create the component adder function and expose it globally
-       window.addComponent = createComponentAdder();
-     </script>
-   </head>`;
+   export const headElement = ``;
Ran all tests for this mutant.

[NoCoverage] BlockStatement
src/generator/html.js:161:40
-   export function createHtmlTag(content) {
-     const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);
-     return createTag(HTML_TAG_NAME, langAttr, content);
-   }
+   export function createHtmlTag(content) {}

[NoCoverage] BlockStatement
src/generator/html.js:171:35
-   export function wrapHtml(content) {
-     const htmlTag = createHtmlTag(content);
-     return join([DOCTYPE, htmlTag]);
-   }
+   export function wrapHtml(content) {}

[NoCoverage] ArrayDeclaration
src/generator/html.js:173:15
-     return join([DOCTYPE, htmlTag]);
+     return join([]);

[Survived] ObjectLiteral
src/generator/html.js:7:25
-   export const LANGUAGE = {
-     EN: 'en',
-   };
+   export const LANGUAGE = {};
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:12:30
-   export const HTML_TAG_NAME = 'html';
+   export const HTML_TAG_NAME = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:16:9
-     LANG: 'lang',
+     LANG: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:4:24
-   export const DOCTYPE = '<!DOCTYPE html>';
+   export const DOCTYPE = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:8:7
-     EN: 'en',
+     EN: "",
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:24:3
-     { from: /</g, to: '&lt;' },
+     {},
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:24:21
-     { from: /</g, to: '&lt;' },
+     { from: /</g, to: "" },
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:25:3
-     { from: />/g, to: '&gt;' },
+     {},
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:25:21
-     { from: />/g, to: '&gt;' },
+     { from: />/g, to: "" },
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:26:21
-     { from: /"/g, to: '&quot;' },
+     { from: /"/g, to: "" },
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:27:3
-     { from: /'/g, to: '&#039;' },
+     {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:26:3
-     { from: /"/g, to: '&quot;' },
+     {},
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:27:21
-     { from: /'/g, to: '&#039;' },
+     { from: /'/g, to: "" },
Ran all tests for this mutant.

[NoCoverage] BlockStatement
src/generator/interactive.js:8:82
-   export function generateInteractiveComponentScript(id, modulePath, functionName) {
-     return `<script type="module">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`;
-   }
+   export function generateInteractiveComponentScript(id, modulePath, functionName) {}

[NoCoverage] StringLiteral
src/generator/interactive.js:9:10
-     return `<script type="module">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/interactive.js:18:61
-   export function generateInteractiveComponentHTML(id, title) {
-     return `<div class="key article-title">${id}</div><div class="value"><h2><a href="#${id}">${title}</a></h2></div><div class="key">in</div><div class="value"><form><input type="text" disabled></form></div><div class="key"></div><div class="value"><button type="submit" disabled>Submit</button></div><div class="key">out</div><div class="value warning"><p>This toy requires Javascript to run.</p></div>`;
-   }
+   export function generateInteractiveComponentHTML(id, title) {}

[NoCoverage] StringLiteral
src/generator/interactive.js:19:10
-     return `<div class="key article-title">${id}</div><div class="value"><h2><a href="#${id}">${title}</a></h2></div><div class="key">in</div><div class="value"><form><input type="text" disabled></form></div><div class="key"></div><div class="value"><button type="submit" disabled>Submit</button></div><div class="key">out</div><div class="value warning"><p>This toy requires Javascript to run.</p></div>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/interactive.js:30:91
-   export function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {
-     const structure = generateInteractiveComponentHTML(id, title);
-     const script = generateInteractiveComponentScript(id, modulePath, functionName);
-     
-     return structure + script;
-   }
+   export function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {}

[NoCoverage] ArithmeticOperator
src/generator/interactive.js:34:10
-     return structure + script;
+     return structure - script;

[Survived] StringLiteral
src/generator/styles.js:1:23
-   export const styles = `
-     body {
-       background-color: #121212;
-       color: #CCCCCC;
-       font-family: "Sono", Consolas, monospace;
-       font-size: 16px;
-       line-height: 1.5;
-       margin: 0;
-       padding: 0;
-     }
-     #container {
-       max-width: 85ch;
-       padding: 1lh;
-     }
-     .entry {
-       display: grid;
-       grid-template-columns: 5ch auto;
-       padding-bottom: 1em;
-       gap: 0em 1em;
-     }
-     .key {
-       font-weight: bold;
-       color: #33CCFF;
-       text-align: right;
-       padding: 0em 0em;
-     }
-     .value {
-       text-align: left;
-       color: #CCCCCC;
-     }
-     .article-title {
-       color: #121212;
-       background-color: #00FFFF;
-     }
-     .media {
-       color: #00FF00;
-     }
-     .footer {
-       font-style: italic;
-     }
-     .full-width {
-       white-space: nowrap;
-       font-family: monospace;
-       display: block;
-       width: 100%;
-       overflow: hidden;
-       text-overflow: clip;
-       line-height: 1;
-       color: #00FFFF;
-     }
-     h1, h2, h3 {
-       color: #FFFFFF;
-       font-size: 16px;
-       margin: 0;
-       text-transform: uppercase;
-     }
-     img {
-       max-width: min(20em, 60vw);
-       height: auto;
-       display: block;
-       filter: sepia(0.8) hue-rotate(151deg) saturate(2);
-     }
-     p {
-       margin: 0;
-     }
-     ul, .related-links {
-       margin: 0;
-       padding-left: 0;
-       list-style-type: none;
-     }
-     
-     ul li::before, .related-links li::before {
-       content: "- ";
-       color: #33CCFF;
-     }
-     a {
-       color: #00FFFF;
-       text-decoration: none;
-     }
-     a:hover {
-       color: #33FFFF;
-       text-decoration: underline;
-     }
-     h1 > a, h2 > a, h3 > a {
-       color: #FFFFFF;
-     }
-     .warning {
-       color: #FFA500;
-     }
-     .error {
-       color: #FF0000;
-     }
-     .success {
-       color: #00FF00;
-     }
-     .metadata {
-       color: #33CCFF;
-     }
-     code {
-       background-color: #1A1A1A;
-       color: #00FFFF;
-     }
-     pre {
-       background: linear-gradient(0deg, #00ffff, #ff00ff);
-       -webkit-background-clip: text;
-       -webkit-text-fill-color: transparent;
-       padding: 10px;
-       overflow-x: auto;
-     }
-     #audio-controls {
-       background-color: #1A1A1A;
-       color: #00FFFF;
-       display: inline-block;
-     }
-     .audio-btn {
-       padding: 0em 1em;
-       border: none;
-       background: #00FF00;
-       color: #1A1A1A;
-       font-family: Consolas, monospace;
-       cursor: pointer;
-       height: 2em;
-       margin-right: 1em;
-     }
-     .audio-btn:hover {
-       text-decoration: underline;
-     }
-     blockquote {
-       font-style: italic;
-       padding: 1.5em 2ch;
-       margin: 0;
-       background-color: #1a1a1a;
-       position: relative; /* Add this to make absolute positioning of corners work */
-     }
-     .corner {
-       position: absolute;
-       display: block; /* Ensure the corners are displayed */
-       width: 2ch;
-       height: 1.5em;
-     }
-     .corner .h-line,
-     .corner .v-line {
-       position: absolute;
-       background: #CCCCCC;
-       display: block; /* Ensure the lines are displayed */
-     }
-     .h-line {
-       height: 2px;
-       width: 2ch;
-     }
-     .v-line {
-       width: 2px;
-       height: 1.5em;
-     }
-     .corner-tl {
-       top: 0;
-       left: 0;
-     }
-     .corner-tl .h-line {
-       top: 0;
-       left: 0;
-     }
-     .corner-tl .v-line {
-       top: 0;
-       left: 0;
-     }
-     .corner-tr {
-       top: 0;
-       right: 0;
-     }
-     .corner-tr .h-line {
-       top: 0;
-       right: 0;
-     }
-     .corner-tr .v-line {
-       top: 0;
-       right: 0;
-     }
-     .corner-bl {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-bl .h-line {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-bl .v-line {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-br {
-       bottom: 0;
-       right: 0;
-     }
-     .corner-br .h-line {
-       bottom: 0;
-       right: 0;
-     }
-     .corner-br .v-line {
-       bottom: 0;
-       right: 0;
-     }
-   `;
+   export const styles = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/title.js:10:30
-   export const HEADER_BANNER = `<pre aria-label="Matt Heard" role="heading" aria-level="1">
-   ▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      
-   ▐▛▚▞▜▌▐▌ ▐▌ █    █        
-   ▐▌  ▐▌▐▛▀▜▌ █    █        
-   ▐▌  ▐▌▐▌ ▐▌ █    █        
-   ▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  
-   ▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ 
-   ▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ 
-   ▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀
-   </pre>`;
+   export const HEADER_BANNER = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/presenters/paragraph.js:2:39
-     const paragraph = dom.createElement('p');
+     const paragraph = dom.createElement("");
Tests ran:
    createParagraphElement creates a <p> element with the correct text content
    createParagraphElement works with different input strings


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:6:32
-     const result = ticTacToeMove('invalid json', env);
+     const result = ticTacToeMove("", env);
Tests ran:
    returns optimal move for invalid input


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:4:54
-   test('returns optimal move for invalid input', () => {
-     const env = new Map();
-     const result = ticTacToeMove('invalid json', env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('returns optimal move for invalid input', () => {});
Tests ran:
    returns optimal move for invalid input


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:12:53
-   test('minimax early tie return is triggered', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 1, column: 2 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 2, column: 1 } },
-         { player: 'O', position: { row: 2, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(9);
-     expect(output.moves[8]).toEqual({ player: 'X', position: { row: 2, column: 2 } });
-   });
+   test('minimax early tie return is triggered', () => {});
Tests ran:
    minimax early tie return is triggered


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:32:64
-   test('detects win for X and returns no additional move', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 0, column: 1 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } } // X wins across the top row
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toEqual(input.moves); // no additional move since game is over
-   });
+   test('detects win for X and returns no additional move', () => {});
Tests ran:
    detects win for X and returns no additional move


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:48:57
-   test('returns optimal move for malformed schema', () => {
-     const env = new Map();
-     const result = ticTacToeMove(JSON.stringify({ badKey: [] }), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('returns optimal move for malformed schema', () => {});
Tests ran:
    returns optimal move for malformed schema


[Survived] ArrayDeclaration
src/test/toys/2025-04-06/ticTacToe.test.js:50:57
-     const result = ticTacToeMove(JSON.stringify({ badKey: [] }), env);
+     const result = ticTacToeMove(JSON.stringify({ badKey: ["Stryker was here"] }), env);
Tests ran:
    returns optimal move for malformed schema


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:50:47
-     const result = ticTacToeMove(JSON.stringify({ badKey: [] }), env);
+     const result = ticTacToeMove(JSON.stringify({}), env);
Tests ran:
    returns optimal move for malformed schema


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:56:50
-   test('detects invalid player alternation', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'X', position: { row: 0, column: 1 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('detects invalid player alternation', () => {});
Tests ran:
    detects invalid player alternation


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:61:17
-         { player: 'X', position: { row: 0, column: 1 } }
+         { player: "", position: { row: 0, column: 1 } }
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:61:7
-         { player: 'X', position: { row: 0, column: 1 } }
+         {}
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:60:7
-         { player: 'X', position: { row: 0, column: 0 } },
+         {},
Tests ran:
    detects invalid player alternation


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:60:17
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: "", position: { row: 0, column: 0 } },
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:60:32
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: 'X', position: {} },
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:58:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'X', position: { row: 0, column: 1 } }
-       ]
-     };
+     const input = {};
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:61:32
-         { player: 'X', position: { row: 0, column: 1 } }
+         { player: 'X', position: {} }
Tests ran:
    detects invalid player alternation


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:72:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 0 } }
-       ]
-     };
+     const input = {};
Tests ran:
    detects duplicate positions


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:70:43
-   test('detects duplicate positions', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('detects duplicate positions', () => {});
Tests ran:
    detects duplicate positions


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:74:32
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: 'X', position: {} },
Tests ran:
    detects duplicate positions


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:75:7
-         { player: 'O', position: { row: 0, column: 0 } }
+         {}
Tests ran:
    detects duplicate positions


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:74:7
-         { player: 'X', position: { row: 0, column: 0 } },
+         {},
Tests ran:
    detects duplicate positions


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:75:17
-         { player: 'O', position: { row: 0, column: 0 } }
+         { player: "", position: { row: 0, column: 0 } }
Tests ran:
    detects duplicate positions


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:74:17
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: "", position: { row: 0, column: 0 } },
Tests ran:
    detects duplicate positions


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:84:51
-   test('detects too many moves on the board', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 1, column: 1 } },
-         { player: 'O', position: { row: 1, column: 2 } },
-         { player: 'X', position: { row: 2, column: 0 } },
-         { player: 'O', position: { row: 2, column: 1 } },
-         { player: 'X', position: { row: 2, column: 2 } },
-         { player: 'O', position: { row: 0, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('detects too many moves on the board', () => {});
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:75:32
-         { player: 'O', position: { row: 0, column: 0 } }
+         { player: 'O', position: {} }
Tests ran:
    detects duplicate positions


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:86:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 1, column: 1 } },
-         { player: 'O', position: { row: 1, column: 2 } },
-         { player: 'X', position: { row: 2, column: 0 } },
-         { player: 'O', position: { row: 2, column: 1 } },
-         { player: 'X', position: { row: 2, column: 2 } },
-         { player: 'O', position: { row: 0, column: 0 } }
-       ]
-     };
+     const input = {};
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:88:32
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: 'X', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:88:17
-         { player: 'X', position: { row: 0, column: 0 } },
+         { player: "", position: { row: 0, column: 0 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:88:7
-         { player: 'X', position: { row: 0, column: 0 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:89:7
-         { player: 'O', position: { row: 0, column: 1 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:89:17
-         { player: 'O', position: { row: 0, column: 1 } },
+         { player: "", position: { row: 0, column: 1 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:89:32
-         { player: 'O', position: { row: 0, column: 1 } },
+         { player: 'O', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:91:7
-         { player: 'O', position: { row: 1, column: 0 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:90:7
-         { player: 'X', position: { row: 0, column: 2 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:90:17
-         { player: 'X', position: { row: 0, column: 2 } },
+         { player: "", position: { row: 0, column: 2 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:90:32
-         { player: 'X', position: { row: 0, column: 2 } },
+         { player: 'X', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:91:17
-         { player: 'O', position: { row: 1, column: 0 } },
+         { player: "", position: { row: 1, column: 0 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:92:7
-         { player: 'X', position: { row: 1, column: 1 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:92:32
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: 'X', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:91:32
-         { player: 'O', position: { row: 1, column: 0 } },
+         { player: 'O', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:93:7
-         { player: 'O', position: { row: 1, column: 2 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:93:17
-         { player: 'O', position: { row: 1, column: 2 } },
+         { player: "", position: { row: 1, column: 2 } },
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:92:17
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: "", position: { row: 1, column: 1 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:93:32
-         { player: 'O', position: { row: 1, column: 2 } },
+         { player: 'O', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:94:7
-         { player: 'X', position: { row: 2, column: 0 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:94:32
-         { player: 'X', position: { row: 2, column: 0 } },
+         { player: 'X', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:95:7
-         { player: 'O', position: { row: 2, column: 1 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:95:17
-         { player: 'O', position: { row: 2, column: 1 } },
+         { player: "", position: { row: 2, column: 1 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:95:32
-         { player: 'O', position: { row: 2, column: 1 } },
+         { player: 'O', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:94:17
-         { player: 'X', position: { row: 2, column: 0 } },
+         { player: "", position: { row: 2, column: 0 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:96:7
-         { player: 'X', position: { row: 2, column: 2 } },
+         {},
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:96:17
-         { player: 'X', position: { row: 2, column: 2 } },
+         { player: "", position: { row: 2, column: 2 } },
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:97:32
-         { player: 'O', position: { row: 0, column: 0 } }
+         { player: 'O', position: {} }
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:97:7
-         { player: 'O', position: { row: 0, column: 0 } }
+         {}
Tests ran:
    detects too many moves on the board


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:97:17
-         { player: 'O', position: { row: 0, column: 0 } }
+         { player: "", position: { row: 0, column: 0 } }
Tests ran:
    detects too many moves on the board


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:96:32
-         { player: 'X', position: { row: 2, column: 2 } },
+         { player: 'X', position: {} },
Tests ran:
    detects too many moves on the board


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:106:58
-   test('detects full board with no remaining moves', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 1, column: 1 } },
-         { player: 'O', position: { row: 1, column: 2 } },
-         { player: 'X', position: { row: 2, column: 0 } },
-         { player: 'O', position: { row: 2, column: 1 } },
-         { player: 'X', position: { row: 2, column: 2 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toEqual(input.moves);
-   });
+   test('detects full board with no remaining moves', () => {});
Tests ran:
    detects full board with no remaining moves


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:117:7
-         { player: 'O', position: { row: 2, column: 1 } },
+         {},
Tests ran:
    detects full board with no remaining moves


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:117:17
-         { player: 'O', position: { row: 2, column: 1 } },
+         { player: "", position: { row: 2, column: 1 } },
Tests ran:
    detects full board with no remaining moves


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:118:7
-         { player: 'X', position: { row: 2, column: 2 } }
+         {}
Tests ran:
    detects full board with no remaining moves


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:118:32
-         { player: 'X', position: { row: 2, column: 2 } }
+         { player: 'X', position: {} }
Tests ran:
    detects full board with no remaining moves


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:126:64
-   test('detects win for O and returns no additional move', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 0, column: 1 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 2, column: 2 } },
-         { player: 'O', position: { row: 1, column: 2 } } // O wins across the middle row
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toEqual(input.moves); // game is over, no extra move
-   });
+   test('detects win for O and returns no additional move', () => {});
Tests ran:
    detects win for O and returns no additional move


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:118:17
-         { player: 'X', position: { row: 2, column: 2 } }
+         { player: "", position: { row: 2, column: 2 } }
Tests ran:
    detects full board with no remaining moves


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:117:32
-         { player: 'O', position: { row: 2, column: 1 } },
+         { player: 'O', position: {} },
Tests ran:
    detects full board with no remaining moves


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:143:56
-   test('detects tie game with no remaining moves', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 1, column: 0 } },
-         { player: 'O', position: { row: 2, column: 0 } },
-         { player: 'X', position: { row: 1, column: 2 } },
-         { player: 'O', position: { row: 2, column: 2 } },
-         { player: 'X', position: { row: 2, column: 1 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-       expect(output.moves).toEqual(input.moves); // board is full, no move added
-   });
+   test('detects tie game with no remaining moves', () => {});
Tests ran:
    detects tie game with no remaining moves


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:163:57
-   test('selects optimal move in mid-game scenario', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 0, column: 1 } },
-         { player: 'O', position: { row: 2, column: 1 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(5);
-     expect(output.moves[4].player).toBe('X');
-     // X can win by taking (0, 2)
-     expect(output.moves[4].position).toEqual({ row: 0, column: 2 });
-   });
+   test('selects optimal move in mid-game scenario', () => {});
Tests ran:
    selects optimal move in mid-game scenario


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:181:50
-   test('handles null move entry gracefully', () => {
-     const env = new Map();
-     const input = {
-       moves: [null]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('handles null move entry gracefully', () => {});
Tests ran:
    handles null move entry gracefully


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:183:17
-     const input = {
-       moves: [null]
-     };
+     const input = {};
Tests ran:
    handles null move entry gracefully


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:194:17
-     const input = {
-       moves: [
-         { player: 'Z', position: { row: 0, column: 0 } }
-       ]
-     };
+     const input = {};
Tests ran:
    handles invalid player


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:192:38
-   test('handles invalid player', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'Z', position: { row: 0, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('handles invalid player', () => {});
Tests ran:
    handles invalid player


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:196:7
-         { player: 'Z', position: { row: 0, column: 0 } }
+         {}
Tests ran:
    handles invalid player


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:196:17
-         { player: 'Z', position: { row: 0, column: 0 } }
+         { player: "", position: { row: 0, column: 0 } }
Tests ran:
    handles invalid player


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:196:32
-         { player: 'Z', position: { row: 0, column: 0 } }
+         { player: 'Z', position: {} }
Tests ran:
    handles invalid player


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:207:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 5, column: -1 } }
-       ]
-     };
+     const input = {};
Tests ran:
    handles out-of-bounds position


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:205:46
-   test('handles out-of-bounds position', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 5, column: -1 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('handles out-of-bounds position', () => {});
Tests ran:
    handles out-of-bounds position


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:209:7
-         { player: 'X', position: { row: 5, column: -1 } }
+         {}
Tests ran:
    handles out-of-bounds position


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:209:32
-         { player: 'X', position: { row: 5, column: -1 } }
+         { player: 'X', position: {} }
Tests ran:
    handles out-of-bounds position


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:209:17
-         { player: 'X', position: { row: 5, column: -1 } }
+         { player: "", position: { row: 5, column: -1 } }
Tests ran:
    handles out-of-bounds position


[Survived] UnaryOperator
src/test/toys/2025-04-06/ticTacToe.test.js:209:50
-         { player: 'X', position: { row: 5, column: -1 } }
+         { player: 'X', position: { row: 5, column: +1 } }
Tests ran:
    handles out-of-bounds position


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:220:17
-     const input = {
-       moves: []
-     };
+     const input = {};
Tests ran:
    assigns X to first move when moves list is empty


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:218:64
-   test('assigns X to first move when moves list is empty', () => {
-     const env = new Map();
-     const input = {
-       moves: []
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0].player).toBe('X');
-   });
+   test('assigns X to first move when moves list is empty', () => {});
Tests ran:
    assigns X to first move when moves list is empty


[Survived] ArrayDeclaration
src/test/toys/2025-04-06/ticTacToe.test.js:221:12
-       moves: []
+       moves: ["Stryker was here"]
Tests ran:
    assigns X to first move when moves list is empty


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:229:46
-   test('handles position as non-object', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: "invalid" }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('handles position as non-object', () => {});
Tests ran:
    handles position as non-object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:231:17
-     const input = {
-       moves: [
-         { player: 'X', position: "invalid" }
-       ]
-     };
+     const input = {};
Tests ran:
    handles position as non-object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:233:7
-         { player: 'X', position: "invalid" }
+         {}
Tests ran:
    handles position as non-object


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:233:17
-         { player: 'X', position: "invalid" }
+         { player: "", position: "invalid" }
Tests ran:
    handles position as non-object


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:233:32
-         { player: 'X', position: "invalid" }
+         { player: 'X', position: "" }
Tests ran:
    handles position as non-object


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:242:58
-   test('forces minimax to score a tie at max depth', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 0 } },
-         { player: 'X', position: { row: 1, column: 2 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 2, column: 1 } },
-         { player: 'O', position: { row: 2, column: 2 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     // Only one move left, and it leads to a tie
-     expect(output.moves).toHaveLength(9);
-     expect(output.moves[8]).toEqual({ player: 'X', position: { row: 2, column: 0 } });
-   });
+   test('forces minimax to score a tie at max depth', () => {});
Tests ran:
    forces minimax to score a tie at max depth


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:263:82
-   test('handles duplicate board cell even if not duplicate position object', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 1, column: 1 } },
-         { player: 'O', position: { row: 1, column: 1 } } // duplicate board cell
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('handles duplicate board cell even if not duplicate position object', () => {});
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:265:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 1, column: 1 } },
-         { player: 'O', position: { row: 1, column: 1 } } // duplicate board cell
-       ]
-     };
+     const input = {};
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:267:7
-         { player: 'X', position: { row: 1, column: 1 } },
+         {},
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:267:32
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: 'X', position: {} },
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:267:17
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: "", position: { row: 1, column: 1 } },
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:268:17
-         { player: 'O', position: { row: 1, column: 1 } } // duplicate board cell
+         { player: "", position: { row: 1, column: 1 } } // duplicate board cell
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:268:7
-         { player: 'O', position: { row: 1, column: 1 } } // duplicate board cell
+         {} // duplicate board cell
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:268:32
-         { player: 'O', position: { row: 1, column: 1 } } // duplicate board cell
+         { player: 'O', position: {} } // duplicate board cell
Tests ran:
    handles duplicate board cell even if not duplicate position object


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:277:56
-   test('forces minimax to run from O perspective', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(2);
-     expect(output.moves[1].player).toBe('O');
-   });
+   test('forces minimax to run from O perspective', () => {});
Tests ran:
    forces minimax to run from O perspective


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:290:70
-   test('handles empty board that reaches nextPlayer assignment', () => {
-     const env = new Map();
-     const input = { moves: [] };
-     // This test is duplicated to ensure nextPlayer assignment is executed
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves[0].player).toBe('X');
-   });
+   test('handles empty board that reaches nextPlayer assignment', () => {});
Tests ran:
    handles empty board that reaches nextPlayer assignment


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:292:17
-     const input = { moves: [] };
+     const input = {};
Tests ran:
    handles empty board that reaches nextPlayer assignment


[Survived] ArrayDeclaration
src/test/toys/2025-04-06/ticTacToe.test.js:292:26
-     const input = { moves: [] };
+     const input = { moves: ["Stryker was here"] };
Tests ran:
    handles empty board that reaches nextPlayer assignment


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:299:70
-   test('returns fallback when minimax fails to assign bestMove', () => {
-     const env = new Map();
-     // All cells are filled with null to simulate a fully corrupted board
-     const input = {
-       moves: Array.from({ length: 9 }, (_, i) => ({
-         player: i % 2 === 0 ? 'X' : 'O',
-         position: { row: Math.floor(i / 3), column: i % 3 }
-       }))
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toEqual(input.moves); // no move added
-   });
+   test('returns fallback when minimax fails to assign bestMove', () => {});
Tests ran:
    returns fallback when minimax fails to assign bestMove


[Survived] EqualityOperator
src/test/toys/2025-04-06/ticTacToe.test.js:304:15
-         player: i % 2 === 0 ? 'X' : 'O',
+         player: i % 2 !== 0 ? 'X' : 'O',
Tests ran:
    returns fallback when minimax fails to assign bestMove


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:313:84
-   test('returns early if board cell is already filled but not caught by seen', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 1, column: 1 } },
-         // duplicate using a different object reference
-         { player: 'O', position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     // Should fallback to initial move
-     expect(output.moves).toHaveLength(1);
-     expect(output.moves[0]).toEqual({ player: 'X', position: { row: 1, column: 1 } });
-   });
+   test('returns early if board cell is already filled but not caught by seen', () => {});
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:315:17
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 1, column: 1 } },
-         // duplicate using a different object reference
-         { player: 'O', position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
-       ]
-     };
+     const input = {};
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:317:7
-         { player: 'X', position: { row: 1, column: 1 } },
+         {},
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:317:17
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: "", position: { row: 1, column: 1 } },
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:317:32
-         { player: 'X', position: { row: 1, column: 1 } },
+         { player: 'X', position: {} },
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:319:7
-         { player: 'O', position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
+         {}
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:319:17
-         { player: 'O', position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
+         { player: "", position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] ObjectLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:319:58
-         { player: 'O', position: JSON.parse(JSON.stringify({ row: 1, column: 1 })) }
+         { player: 'O', position: JSON.parse(JSON.stringify({})) }
Tests ran:
    returns early if board cell is already filled but not caught by seen


[Survived] BlockStatement
src/test/toys/2025-04-06/ticTacToe.test.js:329:69
-   test('triggers minimax tie return at full depth without win', () => {
-     const env = new Map();
-     const input = {
-       moves: [
-         { player: 'X', position: { row: 0, column: 0 } },
-         { player: 'O', position: { row: 0, column: 1 } },
-         { player: 'X', position: { row: 0, column: 2 } },
-         { player: 'O', position: { row: 1, column: 1 } },
-         { player: 'X', position: { row: 1, column: 0 } },
-         { player: 'O', position: { row: 1, column: 2 } },
-         { player: 'X', position: { row: 2, column: 1 } },
-         { player: 'O', position: { row: 2, column: 0 } }
-       ]
-     };
-     const result = ticTacToeMove(JSON.stringify(input), env);
-     const output = JSON.parse(result);
-     expect(output.moves).toHaveLength(9);
-     expect(output.moves[8]).toEqual({ player: 'X', position: { row: 2, column: 2 } });
-   });
+   test('triggers minimax tie return at full depth without win', () => {});
Tests ran:
    triggers minimax tie return at full depth without win


[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:12:6
-   test('minimax early tie return is triggered', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:4:6
-   test('returns optimal move for invalid input', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:70:6
-   test('detects duplicate positions', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:84:6
-   test('detects too many moves on the board', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:48:6
-   test('returns optimal move for malformed schema', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:32:6
-   test('detects win for X and returns no additional move', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:56:6
-   test('detects invalid player alternation', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:106:6
-   test('detects full board with no remaining moves', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:143:6
-   test('detects tie game with no remaining moves', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:163:6
-   test('selects optimal move in mid-game scenario', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:126:6
-   test('detects win for O and returns no additional move', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:181:6
-   test('handles null move entry gracefully', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:192:6
-   test('handles invalid player', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:205:6
-   test('handles out-of-bounds position', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:229:6
-   test('handles position as non-object', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:218:6
-   test('assigns X to first move when moves list is empty', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:242:6
-   test('forces minimax to score a tie at max depth', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:263:6
-   test('handles duplicate board cell even if not duplicate position object', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:277:6
-   test('forces minimax to run from O perspective', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:290:6
-   test('handles empty board that reaches nextPlayer assignment', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:299:6
-   test('returns fallback when minimax fails to assign bestMove', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:313:6
-   test('returns early if board cell is already filled but not caught by seen', () => {
+   test("", () => {
Ran all tests for this mutant.

[Survived] StringLiteral
src/test/toys/2025-04-06/ticTacToe.test.js:329:6
-   test('triggers minimax tie return at full depth without win', () => {
+   test("", () => {
Ran all tests for this mutant.

[NoCoverage] StringLiteral
src/toys/2025-03-21/italics.js:133:61
-     return afterText ? processTextPreservingBold(afterText) : '';
+     return afterText ? processTextPreservingBold(afterText) : "Stryker was here!";

[Survived] MethodExpression
src/toys/2025-03-21/italics.js:9:11
-     return !text?.trim();
+     return !text;
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] BlockStatement
src/toys/2025-03-21/italics.js:8:28
-   function isEmptyText(text) {
-     return !text?.trim();
-   }
+   function isEmptyText(text) {}
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] OptionalChaining
src/toys/2025-03-21/italics.js:9:11
-     return !text?.trim();
+     return !text.trim();
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-21/italics.js:61:30
-     return new RegExp(pattern, 's');
+     return new RegExp(pattern, "");
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] MethodExpression
src/toys/2025-03-21/italics.js:95:10
-     return [
-       processItalicBefore(beforeText),
-       boldText,
-       processBoldAfter(afterText)
-     ].filter(Boolean).join('');
+     return [processItalicBefore(beforeText), boldText, processBoldAfter(afterText)].join('');
Tests ran:
    italics function does not add <em> tags around bold double-asterisk markdown
    italics function does not add <em> tags around bold double-underscore markdown
    italics function handles complex mixed formatting correctly


[NoCoverage] StringLiteral
src/toys/2025-03-26/prettyFloat.js:4:30
-     if (!decomposition) return "";
+     if (!decomposition) return "Stryker was here!";

[NoCoverage] BlockStatement
src/toys/2025-03-26/prettyFloat.js:113:28
-     if (exponentBits === 0n) {
-       return {};
-     }
+     if (exponentBits === 0n) {}

[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:4:7
-     if (!decomposition) return "";
+     if (false) return "";
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:17:10
-     return result !== null ? result : null;
+     return true ? result : null;
Tests ran:
    decomposeFloat handles zero
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
  and 2 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:22:7
-     if (!isValidIEEEParts(parts)) return null;
+     if (false) return null;
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:41:7
-     if (resolveZeroVariant(num)) return resolveZeroVariant(num);
+     if (true) return resolveZeroVariant(num);
Tests ran:
    decomposeFloat handles zero
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
  and 2 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:40:7
-     if (!Number.isFinite(num)) return "";
+     if (false) return "";
Tests ran:
    decomposeFloat handles zero
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-26/prettyFloat.js:67:21
-     return A.includes('.') ? A.replace(/\.?0+$/, '') : A;
+     return A.includes("") ? A.replace(/\.?0+$/, '') : A;
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ArrayDeclaration
src/toys/2025-03-26/prettyFloat.js:71:10
-     return ['sign', 'mantissa', 'exponent'].every(key => key in parts);
+     return [].every(key => key in parts);
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] MethodExpression
src/toys/2025-03-26/prettyFloat.js:71:10
-     return ['sign', 'mantissa', 'exponent'].every(key => key in parts);
+     return ['sign', 'mantissa', 'exponent'].some(key => key in parts);
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:75:10
-     return Boolean(parts) && hasIEEEFields(parts);
+     return true;
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] LogicalOperator
src/toys/2025-03-26/prettyFloat.js:75:10
-     return Boolean(parts) && hasIEEEFields(parts);
+     return Boolean(parts) || hasIEEEFields(parts);
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:87:7
-     if (!Number.isFinite(value)) return {};
+     if (false) return {};
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-03-26/prettyFloat.js:113:7
-     if (exponentBits === 0n) {
+     if (false) {
Tests ran:
    decomposeFloat handles positive powers of two
    decomposeFloat handles small irrational approximations
    decomposeFloat handles negative values
  and 1 more test!


[NoCoverage] StringLiteral
src/toys/2025-03-29/fishingGame.js:41:31
-     if (!match) throw new Error(`Unrecognized hour: ${hour}`);
+     if (!match) throw new Error(``);

[NoCoverage] StringLiteral
src/toys/2025-03-29/fishingGame.js:53:31
-     if (!match) throw new Error(`Unrecognized month: ${month}`);
+     if (!match) throw new Error(``);

[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:38:5
-       { start: 0, end: 5, label: "night" },
+       {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:38:32
-       { start: 0, end: 5, label: "night" },
+       { start: 0, end: 5, label: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/fishingGame.js:40:49
-     const match = ranges.find(({ start, end }) => hour >= start && hour < end);
+     const match = ranges.find(({ start, end }) => true && hour < end);
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/fishingGame.js:41:7
-     if (!match) throw new Error(`Unrecognized hour: ${hour}`);
+     if (false) throw new Error(`Unrecognized hour: ${hour}`);
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/fishingGame.js:53:7
-     if (!match) throw new Error(`Unrecognized month: ${month}`);
+     if (false) throw new Error(`Unrecognized month: ${month}`);
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:115:46
-       "insect": { modifier: 0.05, description: "a lively insect" },
+       "insect": { modifier: 0.05, description: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:115:15
-       "insect": { modifier: 0.05, description: "a lively insect" },
+       "insect": {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] UnaryOperator
src/toys/2025-03-29/fishingGame.js:116:26
-       "bread": { modifier: -0.05, description: "a slice of bread" },
+       "bread": { modifier: +0.05, description: "a slice of bread" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:118:19
-       "shiny bait": { modifier: 0.15, description: "a glittering lure" },
+       "shiny bait": {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:118:50
-       "shiny bait": { modifier: 0.15, description: "a glittering lure" },
+       "shiny bait": { modifier: 0.15, description: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:120:13
-       "grub": { modifier: 0.05, description: "a succulent grub" },
+       "grub": {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:122:46
-       "sausage": { modifier: 0.2, description: "a savory sausage" },
+       "sausage": { modifier: 0.2, description: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:120:44
-       "grub": { modifier: 0.05, description: "a succulent grub" },
+       "grub": { modifier: 0.05, description: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] UnaryOperator
src/toys/2025-03-29/fishingGame.js:123:27
-       "maggot": { modifier: -0.1, description: "a squirming maggot" },
+       "maggot": { modifier: +0.1, description: "a squirming maggot" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:122:16
-       "sausage": { modifier: 0.2, description: "a savory sausage" },
+       "sausage": {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] ObjectLiteral
src/toys/2025-03-29/fishingGame.js:123:15
-       "maggot": { modifier: -0.1, description: "a squirming maggot" },
+       "maggot": {},
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] StringLiteral
src/toys/2025-03-29/fishingGame.js:123:46
-       "maggot": { modifier: -0.1, description: "a squirming maggot" },
+       "maggot": { modifier: -0.1, description: "" },
Tests ran:
    fishingGame handles empty input gracefully
    fishingGame recognizes a known bait and applies its modifier (e.g., worm, modifier 0.0)
    fishingGame applies negative modifier for poor bait (e.g., bread, modifier -0.05)
  and 4 more tests!


[Survived] MethodExpression
src/toys/2025-03-29/get.js:18:9
-       if (input.trim() === '') {
+       if (input === '') {
Tests ran:
    get function with path traversal should return the value for a top-level key
    get function with path traversal should return the value for a nested key
    get function with path traversal should return the value for an array index
  and 10 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/get.js:35:116
-           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf('.') !== -1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
+           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, true ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
Tests ran:
    get function with path traversal should return an error trying to access property on non-object
    get function with path traversal should return error when accessing deep property on null


[Survived] StringLiteral
src/toys/2025-03-29/get.js:35:140
-           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf('.') !== -1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
+           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf("") !== -1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
Tests ran:
    get function with path traversal should return an error trying to access property on non-object
    get function with path traversal should return error when accessing deep property on null


[Survived] UnaryOperator
src/toys/2025-03-29/get.js:35:149
-           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf('.') !== -1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
+           return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf('.') !== +1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;
Tests ran:
    get function with path traversal should return an error trying to access property on non-object
    get function with path traversal should return error when accessing deep property on null


[NoCoverage] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:35:14
-     } else if (isObject(source)) {
+     } else if (true) {

[NoCoverage] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:35:14
-     } else if (isObject(source)) {
+     } else if (false) {

[NoCoverage] BlockStatement
src/toys/2025-03-29/setTemporary.js:35:32
-     } else if (isObject(source)) {
-         // If target is not an object but source is, return a shallow copy of source
-         // (or deep copy if required, but shallow should suffice here as we merge onto it)
-         return { ...source };
-     }
+     } else if (isObject(source)) {}

[NoCoverage] ObjectLiteral
src/toys/2025-03-29/setTemporary.js:38:14
-         return { ...source };
+         return {};

[NoCoverage] BlockStatement
src/toys/2025-03-29/setTemporary.js:64:46
-     if (!env || typeof env.get !== 'function') {
-       return "Error: 'env' Map with 'get' method is required.";
-     }
+     if (!env || typeof env.get !== 'function') {}

[NoCoverage] StringLiteral
src/toys/2025-03-29/setTemporary.js:65:12
-       return "Error: 'env' Map with 'get' method is required.";
+       return "";

[Survived] LogicalOperator
src/toys/2025-03-29/setTemporary.js:21:7
-     if (isObject(target) && isObject(source)) {
+     if (isObject(target) || isObject(source)) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 6 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:21:7
-     if (isObject(target) && isObject(source)) {
+     if (true) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 6 more tests!


[Survived] LogicalOperator
src/toys/2025-03-29/setTemporary.js:25:11
-         if (isObject(targetValue) && isObject(sourceValue)) {
+         if (isObject(targetValue) || isObject(sourceValue)) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 6 more tests!


[Survived] LogicalOperator
src/toys/2025-03-29/setTemporary.js:64:7
-     if (!env || typeof env.get !== 'function') {
+     if (!env && typeof env.get !== 'function') {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 9 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:64:15
-     if (!env || typeof env.get !== 'function') {
+     if (!env || false) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 9 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:64:7
-     if (!env || typeof env.get !== 'function') {
+     if (false) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 9 more tests!


[Survived] BlockStatement
src/toys/2025-03-29/setTemporary.js:88:39
-       if (!isObject(newData.temporary)) {
-           newData.temporary = {}; 
-       }
+       if (!isObject(newData.temporary)) {}
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
    setTemporary function (getData -> merge -> setData) should return error if setData throws an error
  and 2 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-29/setTemporary.js:88:9
-       if (!isObject(newData.temporary)) {
+       if (false) {
Tests ran:
    setTemporary function (getData -> merge -> setData) should call setData with merged JSON when temporary exists
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it does not exist
    setTemporary function (getData -> merge -> setData) should call setData creating temporary if it exists but is not a valid object
  and 6 more tests!


[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:10:49
-       const name = scoped.name || input.trim() || "Stray";
+       const name = scoped.name || input.trim() || "";

[NoCoverage] BlockStatement
src/toys/2025-03-30/cyberpunkAdventure.js:58:16
-           } else {
-             output = `> Hint: the password is a number and a name...`;
-           }
+           } else {}

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:59:20
-             output = `> Hint: the password is a number and a name...`;
+             output = ``;

[NoCoverage] BlockStatement
src/toys/2025-03-30/cyberpunkAdventure.js:76:16
-           } else {
-             output = `> Do you want to trade? Type 'trade datapad'.`;
-           }
+           } else {}

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:77:20
-             output = `> Do you want to trade? Type 'trade datapad'.`;
+             output = ``;

[NoCoverage] BlockStatement
src/toys/2025-03-30/cyberpunkAdventure.js:89:16
-           } else {
-             output = `> You trip a wire. Sirens start up. You sprint back to the Market.`;
-           }
+           } else {}

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:90:20
-             output = `> You trip a wire. Sirens start up. You sprint back to the Market.`;
+             output = ``;

[NoCoverage] ConditionalExpression
src/toys/2025-03-30/cyberpunkAdventure.js:95:7
-         default:
-           output = `> Glitch in the grid. Resetting...`;
-           nextState = "intro";
+         default:

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:96:18
-           output = `> Glitch in the grid. Resetting...`;
+           output = ``;

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:97:21
-           nextState = "intro";
+           nextState = "";

[NoCoverage] BlockStatement
src/toys/2025-03-30/cyberpunkAdventure.js:112:11
-     } catch {
-       return `> SYSTEM ERROR: neural link failure`;
-     }
+     } catch {}

[NoCoverage] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:113:12
-       return `> SYSTEM ERROR: neural link failure`;
+       return ``;

[Survived] MethodExpression
src/toys/2025-03-30/cyberpunkAdventure.js:10:33
-       const name = scoped.name || input.trim() || "Stray";
+       const name = scoped.name || input || "Stray";
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game unknown input in hub


[Survived] LogicalOperator
src/toys/2025-03-30/cyberpunkAdventure.js:13:29
-       const visited = new Set(scoped.visited || []);
+       const visited = new Set(scoped.visited && []);
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game goes to Transport Hub and trades datapad
  and 2 more tests!


[Survived] ArrayDeclaration
src/toys/2025-03-30/cyberpunkAdventure.js:12:43
-       const inventory = scoped.inventory || [];
+       const inventory = scoped.inventory || ["Stryker was here"];
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game unknown input in hub


[Survived] ArrayDeclaration
src/toys/2025-03-30/cyberpunkAdventure.js:13:47
-       const visited = new Set(scoped.visited || []);
+       const visited = new Set(scoped.visited || ["Stryker was here"]);
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game unknown input in hub


[Survived] MethodExpression
src/toys/2025-03-30/cyberpunkAdventure.js:15:24
-       const lowerInput = input.trim().toLowerCase();
+       const lowerInput = input.toLowerCase();
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game goes to Transport Hub and trades datapad
  and 2 more tests!


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:18:18
-       let output = "";
+       let output = "Stryker was here!";
Tests ran:
    Cyberpunk Text Game initial naming and intro
    Cyberpunk Text Game goes to Hacker Den and requires password
    Cyberpunk Text Game goes to Transport Hub and trades datapad
  and 2 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-30/cyberpunkAdventure.js:53:13
-           if (lowerInput.includes("zero")) {
+           if (true) {
Tests ran:
    Cyberpunk Text Game goes to Hacker Den and requires password


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:53:33
-           if (lowerInput.includes("zero")) {
+           if (lowerInput.includes("")) {
Tests ran:
    Cyberpunk Text Game goes to Hacker Den and requires password


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:57:23
-             nextState = "hub";
+             nextState = "";
Tests ran:
    Cyberpunk Text Game goes to Hacker Den and requires password


[Survived] ConditionalExpression
src/toys/2025-03-30/cyberpunkAdventure.js:70:13
-           if (nextInventory.includes("datapad") && lowerInput.includes("trade")) {
+           if (true) {
Tests ran:
    Cyberpunk Text Game goes to Transport Hub and trades datapad


[Survived] LogicalOperator
src/toys/2025-03-30/cyberpunkAdventure.js:70:13
-           if (nextInventory.includes("datapad") && lowerInput.includes("trade")) {
+           if (nextInventory.includes("datapad") || lowerInput.includes("trade")) {
Tests ran:
    Cyberpunk Text Game goes to Transport Hub and trades datapad


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:70:70
-           if (nextInventory.includes("datapad") && lowerInput.includes("trade")) {
+           if (nextInventory.includes("datapad") && lowerInput.includes("")) {
Tests ran:
    Cyberpunk Text Game goes to Transport Hub and trades datapad


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:72:54
-             nextInventory.splice(nextInventory.indexOf("datapad"), 1);
+             nextInventory.splice(nextInventory.indexOf(""), 1);
Tests ran:
    Cyberpunk Text Game goes to Transport Hub and trades datapad


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:75:23
-             nextState = "hub";
+             nextState = "";
Tests ran:
    Cyberpunk Text Game goes to Transport Hub and trades datapad


[Survived] ConditionalExpression
src/toys/2025-03-30/cyberpunkAdventure.js:85:13
-           if (success) {
+           if (true) {
Tests ran:
    Cyberpunk Text Game goes to Back Alley and finds stimpack (success)


[Survived] EqualityOperator
src/toys/2025-03-30/cyberpunkAdventure.js:84:25
-           const success = stealthCheck > 0.3;
+           const success = stealthCheck >= 0.3;
Tests ran:
    Cyberpunk Text Game goes to Back Alley and finds stimpack (success)


[Survived] ConditionalExpression
src/toys/2025-03-30/cyberpunkAdventure.js:84:25
-           const success = stealthCheck > 0.3;
+           const success = true;
Tests ran:
    Cyberpunk Text Game goes to Back Alley and finds stimpack (success)


[Survived] StringLiteral
src/toys/2025-03-30/cyberpunkAdventure.js:92:21
-           nextState = "hub";
+           nextState = "";
Tests ran:
    Cyberpunk Text Game goes to Back Alley and finds stimpack (success)


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:12:11
-         if (!move || typeof move !== "object") return returnInitialOptimalMove();
+         if (false) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 15 more tests!


[Survived] LogicalOperator
src/toys/2025-04-06/ticTacToe.js:12:11
-         if (!move || typeof move !== "object") return returnInitialOptimalMove();
+         if (!move && typeof move !== "object") return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 15 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:12:20
-         if (!move || typeof move !== "object") return returnInitialOptimalMove();
+         if (!move || false) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 14 more tests!


[Survived] ArrayDeclaration
src/toys/2025-04-06/ticTacToe.js:7:51
-       const board = Array.from({ length: 3 }, () => Array(3).fill(null));
+       const board = Array.from({ length: 3 }, () => Array().fill(null));
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 17 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:16:11
-         if (!position || typeof position !== "object") return returnInitialOptimalMove();
+         if (false) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] LogicalOperator
src/toys/2025-04-06/ticTacToe.js:16:11
-         if (!position || typeof position !== "object") return returnInitialOptimalMove();
+         if (!position && typeof position !== "object") return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:16:24
-         if (!position || typeof position !== "object") return returnInitialOptimalMove();
+         if (!position || false) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:19:11
-         if (![0, 1, 2].includes(row) || ![0, 1, 2].includes(column)) return returnInitialOptimalMove();
+         if (false) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 12 more tests!


[Survived] LogicalOperator
src/toys/2025-04-06/ticTacToe.js:19:11
-         if (![0, 1, 2].includes(row) || ![0, 1, 2].includes(column)) return returnInitialOptimalMove();
+         if (![0, 1, 2].includes(row) && ![0, 1, 2].includes(column)) return returnInitialOptimalMove();
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 12 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:38:24
-       const nextPlayer = moves.length === 0
+       const nextPlayer = false
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:45:30
-           if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return true;
+           if (b[0][i] === p && true && b[2][i] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 11 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:45:30
-           if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return true;
+           if (b[0][i] === p && b[1][i] !== p && b[2][i] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 11 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:45:13
-           if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return true;
+           if (false) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:47:11
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (false) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] BooleanLiteral
src/toys/2025-04-06/ticTacToe.js:45:69
-           if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return true;
+           if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return false;
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 2 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:47:28
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (b[0][0] === p && true && b[2][2] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 11 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:47:28
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (b[0][0] === p && b[1][1] !== p && b[2][2] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 11 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:47:45
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (b[0][0] === p && b[1][1] === p && true) return true;
Tests ran:
    detects full board with no remaining moves
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
  and 2 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:47:45
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (b[0][0] === p && b[1][1] === p && b[2][2] !== p) return true;
Tests ran:
    detects full board with no remaining moves
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
  and 2 more tests!


[Survived] BooleanLiteral
src/toys/2025-04-06/ticTacToe.js:47:67
-         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;
+         if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return false;
Tests ran:
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
    handles empty board that reaches nextPlayer assignment


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:48:11
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (false) return true;
Tests ran:
    minimax early tie return is triggered
    detects win for X and returns no additional move
    detects invalid player alternation
  and 13 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:48:28
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (b[0][2] === p && true && b[2][0] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects full board with no remaining moves
    detects tie game with no remaining moves
  and 7 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:53:19
-         const opp = player === "X" ? "O" : "X";
+         const opp = false ? "O" : "X";
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:53:19
-         const opp = player === "X" ? "O" : "X";
+         const opp = player !== "X" ? "O" : "X";
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:48:45
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (b[0][2] === p && b[1][1] === p && true) return true;
Tests ran:
    detects full board with no remaining moves
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 3 more tests!


[Survived] StringLiteral
src/toys/2025-04-06/ticTacToe.js:53:30
-         const opp = player === "X" ? "O" : "X";
+         const opp = player === "" ? "O" : "X";
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:48:28
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (b[0][2] === p && b[1][1] !== p && b[2][0] === p) return true;
Tests ran:
    minimax early tie return is triggered
    detects full board with no remaining moves
    detects tie game with no remaining moves
  and 7 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:54:11
-         if (isWin(b, player)) return 10 - depth;
+         if (true) return 10 - depth;
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:48:45
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (b[0][2] === p && b[1][1] === p && b[2][0] !== p) return true;
Tests ran:
    detects full board with no remaining moves
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 3 more tests!


[Survived] BooleanLiteral
src/toys/2025-04-06/ticTacToe.js:48:67
-         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;
+         if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return false;
Tests ran:
    detects full board with no remaining moves
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 3 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:53:19
-         const opp = player === "X" ? "O" : "X";
+         const opp = true ? "O" : "X";
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:55:11
-         if (isWin(b, opp)) return depth - 10;
+         if (true) return depth - 10;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:56:11
-         if (depth + moves.length === 9) return 0;
+         if (true) return 0;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:54:11
-         if (isWin(b, player)) return 10 - depth;
+         if (false) return 10 - depth;
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:56:11
-         if (depth + moves.length === 9) return 0;
+         if (depth + moves.length !== 9) return 0;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:55:11
-         if (isWin(b, opp)) return depth - 10;
+         if (false) return depth - 10;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] ArithmeticOperator
src/toys/2025-04-06/ticTacToe.js:55:33
-         if (isWin(b, opp)) return depth - 10;
+         if (isWin(b, opp)) return depth + 10;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
  and 1 more test!


[Survived] ConditionalExpression
src/toys/2025-04-06/ticTacToe.js:56:11
-         if (depth + moves.length === 9) return 0;
+         if (false) return 0;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] ArithmeticOperator
src/toys/2025-04-06/ticTacToe.js:56:11
-         if (depth + moves.length === 9) return 0;
+         if (depth - moves.length === 9) return 0;
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to score a tie at max depth
  and 3 more tests!


[Survived] BooleanLiteral
src/toys/2025-04-06/ticTacToe.js:63:47
-               scores.push(minimax(b, depth + 1, !isMax, player));
+               scores.push(minimax(b, depth + 1, isMax, player));
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
  and 1 more test!


[Survived] MethodExpression
src/toys/2025-04-06/ticTacToe.js:68:22
-         return isMax ? Math.max(...scores) : Math.min(...scores);
+         return isMax ? Math.min(...scores) : Math.min(...scores);
Tests ran:
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
    forces minimax to run from O perspective
  and 1 more test!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:79:15
-             if (score > best) {
+             if (score >= best) {
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


[Survived] EqualityOperator
src/toys/2025-04-06/ticTacToe.js:74:23
-         for (let c = 0; c < 3; c++) {
+         for (let c = 0; c <= 3; c++) {
Tests ran:
    minimax early tie return is triggered
    selects optimal move in mid-game scenario
    assigns X to first move when moves list is empty
  and 4 more tests!


Ran 4.78 tests per mutant on average.
-------------------------|------------------|----------|-----------|------------|----------|----------|
                         | % Mutation score |          |           |            |          |          |
File                     |  total | covered | # killed | # timeout | # survived | # no cov | # errors |
-------------------------|--------|---------|----------|-----------|------------|----------|----------|
All files                |  71.73 |   80.78 |     1388 |        20 |        335 |      220 |        0 |
 browser                 |  56.48 |   77.63 |      168 |         2 |         49 |       82 |        0 |
  audio-controls.js      |  55.26 |   55.26 |       21 |         0 |         17 |        0 |        0 |
  data.js                |  79.55 |   79.55 |       70 |         0 |         18 |        0 |        0 |
  document.js            |   0.00 |    0.00 |        0 |         0 |          0 |       32 |        0 |
  main.js                |   0.00 |    0.00 |        0 |         0 |          0 |       50 |        0 |
  tags.js                |  81.25 |   81.25 |       11 |         2 |          3 |        0 |        0 |
  toys.js                |  85.71 |   85.71 |       66 |         0 |         11 |        0 |        0 |
 generator               |  66.67 |   87.67 |      320 |         0 |         45 |      115 |        0 |
  copy.js                |   0.00 |    0.00 |        0 |         0 |          0 |       69 |        0 |
  full-width.js          | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
  generator.js           |  81.51 |   90.94 |      291 |         0 |         29 |       37 |        0 |
  head.js                |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
  html.js                |  63.64 |   68.29 |       28 |         0 |         13 |        3 |        0 |
  interactive.js         |   0.00 |    0.00 |        0 |         0 |          0 |        6 |        0 |
  styles.js              |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
  title.js               |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
 presenters              |  50.00 |   50.00 |        1 |         0 |          1 |        0 |        0 |
  paragraph.js           |  50.00 |   50.00 |        1 |         0 |          1 |        0 |        0 |
 test                    |  65.63 |   65.63 |      254 |         0 |        133 |        0 |        0 |
  toys                   |  65.63 |   65.63 |      254 |         0 |        133 |        0 |        0 |
   2025-04-06            |  65.63 |   65.63 |      254 |         0 |        133 |        0 |        0 |
    ticTacToe.test.js    |  65.63 |   65.63 |      254 |         0 |        133 |        0 |        0 |
 toys                    |  83.61 |   86.10 |      645 |        18 |        107 |       23 |        0 |
  2024-10-02             | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
   hello.js              | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
  2025-03-19             | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
   identity.js           | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
  2025-03-21             |  93.81 |   94.79 |       83 |         8 |          5 |        1 |        0 |
   booleanCoercer.js     | 100.00 |  100.00 |       21 |         0 |          0 |        0 |        0 |
   italics.js            |  92.11 |   93.33 |       62 |         8 |          5 |        1 |        0 |
  2025-03-26             |  82.72 |   84.81 |       67 |         0 |         12 |        2 |        0 |
   prettyFloat.js        |  82.72 |   84.81 |       67 |         0 |         12 |        2 |        0 |
  2025-03-28             | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
   rand.js               | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
  2025-03-29             |  86.97 |   89.49 |      246 |         1 |         29 |        8 |        0 |
   fishingGame.js        |  86.81 |   88.03 |      125 |         0 |         17 |        2 |        0 |
   get.js                |  94.20 |   94.20 |       65 |         0 |          4 |        0 |        0 |
   setTemporary.js       |  80.28 |   87.69 |       56 |         1 |          8 |        6 |        0 |
  2025-03-30             |  75.21 |   83.49 |       91 |         0 |         18 |       12 |        0 |
   cyberpunkAdventure.js |  75.21 |   83.49 |       91 |         0 |         18 |       12 |        0 |
  2025-04-05             | 100.00 |  100.00 |        3 |         0 |          0 |        0 |        0 |
   httpRequest.js        | 100.00 |  100.00 |        3 |         0 |          0 |        0 |        0 |
  2025-04-06             |  78.71 |   78.71 |      150 |         9 |         43 |        0 |        0 |
   ticTacToe.js          |  78.71 |   78.71 |      150 |         9 |         43 |        0 |        0 |
-------------------------|--------|---------|----------|-----------|------------|----------|----------|
[32m09:57:58 (69473) INFO MutationTestExecutor[39m Done in 7 minutes 46 seconds.
