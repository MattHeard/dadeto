[32m20:24:20 (22749) INFO ProjectReader[39m Found 13 of 101 file(s) to be mutated.
[32m20:24:21 (22749) INFO Instrumenter[39m Instrumented 13 source file(s) with 610 mutant(s)
[32m20:24:21 (22749) INFO ConcurrencyTokenProvider[39m Creating 7 test runner process(es).
[32m20:24:22 (22749) INFO DryRunExecutor[39m Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
[32m20:24:23 (22749) INFO DryRunExecutor[39m Initial test run succeeded. Ran 31 tests in 1 second (net 35 ms, overhead 1523 ms).

All tests
  generator/generator.test.js
    ✓ Blog Generator should generate complete HTML page with multiple posts [line 8] (killed 265)
    ✓ Blog Generator should contain content for posts [line 103] (killed 6)
    ✓ Blog Generator should contain an illustration for posts [line 129] (killed 1)
    ~ Blog Generator should contain audio elements [line 159] (covered 147)
    ~ Blog Generator should contain related links for a post [line 186] (covered 179)
    ~ Blog Generator should contain a YouTube video for a post [line 224] (covered 149)
    ~ Blog Generator should contain a toy component for a post [line 245] (covered 193)
    ✓ Blog Generator should display tags for posts [line 290] (killed 14)
    ✓ Blog Generator should render quotes as blockquotes [line 315] (killed 23)
  toys
    2024-10-02/hello.test.js
      ✓ hello should return "Hello world" [line 4] (killed 2)
    2025-03-19/identity.test.js
      ✓ identity function returns primitive values unchanged [line 4] (killed 1)
      ~ identity function returns object references unchanged [line 13] (covered 1)
      ~ identity function keeps object values unchanged [line 23] (covered 1)
    2025-03-21
      booleanCoercer.test.js
        ✓ coerceToBoolean returns { value: true } for input boolean true [line 5] (killed 6)
        ~ coerceToBoolean returns { value: false } for input boolean false [line 9] (covered 10)
        ✓ coerceToBoolean returns { value: true } for input string "true" [line 13] (killed 10)
        ✓ coerceToBoolean returns { value: false } for input string "false" [line 17] (killed 1)
        ✓ coerceToBoolean handles case insensitivity for "TrUe" [line 21] (killed 1)
        ~ coerceToBoolean handles case insensitivity for "FaLsE" [line 25] (covered 18)
        ✓ coerceToBoolean returns {} for non-boolean and non-valid string input (number) [line 29] (killed 3)
        ~ coerceToBoolean returns {} for non-boolean and non-valid string input (object) [line 33] (covered 17)
        ~ coerceToBoolean returns {} for non-boolean and non-valid string input (null) [line 37] (covered 17)
        ~ coerceToBoolean returns {} for non-boolean and non-valid string input (undefined) [line 41] (covered 17)
      italics.test.js
        ✓ italics function returns non-string values unchanged [line 4] (killed 6)
        ✓ italics function leaves regular text unchanged [line 13] (killed 18)
        ✓ italics function adds <em> tags around asterisk-style italics while preserving asterisks [line 18] (killed 16)
        ~ italics function adds <em> tags around underscore-style italics while preserving underscores [line 25] (covered 52)
        ~ italics function handles both asterisk and underscore styles in the same string [line 32] (covered 52)
        ✓ italics function does not add <em> tags around bold double-asterisk markdown [line 39] (killed 13)
        ~ italics function does not add <em> tags around bold double-underscore markdown [line 45] (covered 62)
        ~ italics function handles complex mixed formatting correctly [line 51] (covered 62)

[NoCoverage] BlockStatement
src/generator/generator.js:163:39
-   function prefixWithEmptyKey(valueDiv) {
-     const emptyKeyDiv = createEmptyKeyDiv();
-     return createPair(emptyKeyDiv, valueDiv);
-   }
+   function prefixWithEmptyKey(valueDiv) {}

[NoCoverage] BlockStatement
src/generator/generator.js:171:32
-   function createHeaderContent() {
-     const valueDivs = [
-       createValueDiv(HEADER_BANNER),
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
-     ];
-     const parts = valueDivs.map(prefixWithEmptyKey);
-     
-     return join(parts);
-   }
+   function createHeaderContent() {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:172:21
-     const valueDivs = [
-       createValueDiv(HEADER_BANNER),
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
-     ];
+     const valueDivs = [];

[NoCoverage] ArrayDeclaration
src/generator/generator.js:174:35
-       createValueDiv(METADATA_TEXT, [CLASS.METADATA])
+       createValueDiv(METADATA_TEXT, [])

[NoCoverage] BlockStatement
src/generator/generator.js:187:33
-   function createSection(content) {
-     return createDiv(CLASS.ENTRY, content);
-   }
+   function createSection(content) {}

[NoCoverage] BlockStatement
src/generator/generator.js:195:32
-   function createHeaderSection() {
-     const headerContent = createHeaderContent();
-     return createSection(headerContent);
-   }
+   function createHeaderSection() {}

[NoCoverage] BlockStatement
src/generator/generator.js:208:32
-   function createFooterContent() {
-     const classes = joinClasses([CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]);
-     const footerDiv = createDiv(classes, WARNING_MESSAGE);
-     return prefixWithEmptyKey(footerDiv);
-   }
+   function createFooterContent() {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:209:31
-     const classes = joinClasses([CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]);
+     const classes = joinClasses([]);

[NoCoverage] BlockStatement
src/generator/generator.js:218:32
-   function createFooterSection() {
-     const footerContent = createFooterContent();
-     return createSection(footerContent);
-   }
+   function createFooterSection() {}

[NoCoverage] BlockStatement
src/generator/generator.js:228:35
-   function createContainerDivOpen() {
-     const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);
-     return `<${DIV_TAG_NAME} ${idAttr}>`;
-   }
+   function createContainerDivOpen() {}

[NoCoverage] StringLiteral
src/generator/generator.js:230:10
-     return `<${DIV_TAG_NAME} ${idAttr}>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/generator.js:236:50
-   function createHeaderContentArray(headerElement) {
-     return [
-       headElement,
-       '<body>',
-       createContainerDivOpen(),
-       '<!-- Header -->',
-       headerElement,
-     ];
-   }
+   function createHeaderContentArray(headerElement) {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:237:10
-     return [
-       headElement,
-       '<body>',
-       createContainerDivOpen(),
-       '<!-- Header -->',
-       headerElement,
-     ];
+     return [];

[NoCoverage] StringLiteral
src/generator/generator.js:239:5
-       '<body>',
+       "",

[NoCoverage] StringLiteral
src/generator/generator.js:241:5
-       '<!-- Header -->',
+       "",

[NoCoverage] BlockStatement
src/generator/generator.js:249:29
-   function createPageHeader() {
-     const headerElement = createHeaderSection();
-     const contentArray = createHeaderContentArray(headerElement);
-     return contentArray.join('');
-   }
+   function createPageHeader() {}

[NoCoverage] StringLiteral
src/generator/generator.js:253:28
-     return contentArray.join('');
+     return contentArray.join("Stryker was here!");

[NoCoverage] BlockStatement
src/generator/generator.js:259:36
-   function createContainerDivClose() {
-     return '</div>';
-   }
+   function createContainerDivClose() {}

[NoCoverage] StringLiteral
src/generator/generator.js:260:10
-     return '</div>';
+     return "";

[NoCoverage] BlockStatement
src/generator/generator.js:266:28
-   function createBodyClose() {
-     return '</body>';
-   }
+   function createBodyClose() {}

[NoCoverage] StringLiteral
src/generator/generator.js:267:10
-     return '</body>';
+     return "";

[NoCoverage] BlockStatement
src/generator/generator.js:273:50
-   function createFooterContentArray(footerElement) {
-     return [
-       '',
-       footerElement,
-       createContainerDivClose(),
-       scriptTag,
-       createBodyClose(),
-     ];
-   }
+   function createFooterContentArray(footerElement) {}

[NoCoverage] ArrayDeclaration
src/generator/generator.js:274:10
-     return [
-       '',
-       footerElement,
-       createContainerDivClose(),
-       scriptTag,
-       createBodyClose(),
-     ];
+     return [];

[NoCoverage] StringLiteral
src/generator/generator.js:275:5
-       '',
+       "Stryker was here!",

[NoCoverage] BlockStatement
src/generator/generator.js:286:29
-   function createPageFooter() {
-     const footerElement = createFooterSection();
-     const contentArray = createFooterContentArray(footerElement);
-     return contentArray.join('');
-   }
+   function createPageFooter() {}

[NoCoverage] StringLiteral
src/generator/generator.js:290:28
-     return contentArray.join('');
+     return contentArray.join("Stryker was here!");

[NoCoverage] BlockStatement
src/generator/generator.js:327:18
-     if (!post.key) {
-       return '';
-     }
+     if (!post.key) {}

[NoCoverage] StringLiteral
src/generator/generator.js:328:12
-       return '';
+       return "Stryker was here!";

[NoCoverage] BlockStatement
src/generator/generator.js:480:30
-     if (!post.publicationDate) {
-       return '';
-     }
+     if (!post.publicationDate) {}

[NoCoverage] StringLiteral
src/generator/generator.js:481:12
-       return '';
+       return "Stryker was here!";

[NoCoverage] ArrowFunction
src/generator/generator.js:577:37
-     return (generators[mediaType] || (() => ''))(post);
+     return (generators[mediaType] || (() => undefined))(post);

[NoCoverage] StringLiteral
src/generator/generator.js:577:43
-     return (generators[mediaType] || (() => ''))(post);
+     return (generators[mediaType] || (() => "Stryker was here!"))(post);

[NoCoverage] ObjectLiteral
src/generator/generator.js:908:37
-   const createBlogComponents = () => ({
-     header: createPageHeader(),
-     footer: createPageFooter(),
-     wrapFunc: wrapHtml,
-   });
+   const createBlogComponents = () => ({});

[NoCoverage] BlockStatement
src/generator/generator.js:918:34
-   function getBlogGenerationArgs() {
-     const components = createBlogComponents();
-     const { header, footer, wrapFunc } = components;
-     return { header, footer, wrapFunc };
-   }
+   function getBlogGenerationArgs() {}

[NoCoverage] ObjectLiteral
src/generator/generator.js:921:10
-     return { header, footer, wrapFunc };
+     return {};

[NoCoverage] BlockStatement
src/generator/generator.js:924:44
-   export const generateBlogOuter = (blog) => {
-     const { header, footer, wrapFunc } = getBlogGenerationArgs();
-     return generateBlog(blog, header, footer, wrapFunc);
-   };
+   export const generateBlogOuter = (blog) => {};

[Survived] MethodExpression
src/generator/generator.js:95:19
-     const classes = [CLASS.VALUE, ...additionalClasses].filter(Boolean);
+     const classes = [CLASS.VALUE, ...additionalClasses];
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain a toy component for a post


[Survived] ConditionalExpression
src/generator/generator.js:327:7
-     if (!post.key) {
+     if (false) {
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] ConditionalExpression
src/generator/generator.js:393:42
-     return (typeof content === 'object' && content !== null)
+     return (typeof content === 'object' && true)
Tests ran:
    Blog Generator should render quotes as blockquotes


[Survived] StringLiteral
src/generator/generator.js:395:15
-       : { type: 'text', content };
+       : { type: "", content };
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:412:7
-     if (type === 'text' && Array.isArray(content)) {
+     if (true && Array.isArray(content)) {
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should display tags for posts
  and 1 more test!


[Survived] ConditionalExpression
src/generator/generator.js:480:7
-     if (!post.publicationDate) {
+     if (false) {
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] ConditionalExpression
src/generator/generator.js:523:10
-     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
+     return true && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] LogicalOperator
src/generator/generator.js:523:10
-     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
+     return post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] EqualityOperator
src/generator/generator.js:523:81
-     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
+     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length >= 0;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] ConditionalExpression
src/generator/generator.js:523:81
-     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;
+     return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && true;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] EqualityOperator
src/generator/generator.js:532:38
-     return Array.isArray(post.tags) && post.tags.length > 0;
+     return Array.isArray(post.tags) && post.tags.length >= 0;
Tests ran:
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:532:38
-     return Array.isArray(post.tags) && post.tags.length > 0;
+     return Array.isArray(post.tags) && true;
Tests ran:
    Blog Generator should display tags for posts


[Survived] ConditionalExpression
src/generator/generator.js:539:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return true;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] ConditionalExpression
src/generator/generator.js:539:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return false || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] EqualityOperator
src/generator/generator.js:539:10
-     return mediaType === 'youtube' || post.publicationDate;
+     return mediaType !== 'youtube' || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] StringLiteral
src/generator/generator.js:539:24
-     return mediaType === 'youtube' || post.publicationDate;
+     return mediaType === "" || post.publicationDate;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain an illustration for posts
    Blog Generator should contain audio elements
  and 1 more test!


[Survived] MethodExpression
src/generator/generator.js:712:31
-     return `<li>${[baseLink, ...optionalParts.filter(Boolean)].join('')}</li>`;
+     return `<li>${[baseLink, ...optionalParts].join('')}</li>`;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain related links for a post
    Blog Generator should contain a toy component for a post


[Survived] OptionalChaining
src/generator/generator.js:753:10
-     return post?.toy?.modulePath && post.toy.functionName;
+     return post.toy?.modulePath && post.toy.functionName;
Tests ran:
    Blog Generator should generate complete HTML page with multiple posts
    Blog Generator should contain content for posts
    Blog Generator should contain an illustration for posts
  and 6 more tests!


[Survived] StringLiteral
src/generator/generator.js:46:15
-     FULL_WIDTH: 'full-width',
+     FULL_WIDTH: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:43:11
-     FOOTER: 'footer',
+     FOOTER: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:64:22
-   const CONTAINER_ID = 'container';
+   const CONTAINER_ID = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:153:23
-   const METADATA_TEXT = `Software developer and philosopher in Berlin`;
+   const METADATA_TEXT = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/generator.js:202:3
-     'All content is authored by Matt Heard and is <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a>, unless otherwise noted.';
+     "";
Ran all tests for this mutant.

[Survived] ArrowFunction
src/generator/generator.js:908:30
-   const createBlogComponents = () => ({
-     header: createPageHeader(),
-     footer: createPageFooter(),
-     wrapFunc: wrapHtml,
-   });
+   const createBlogComponents = () => undefined;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/head.js:3:28
-   export const headElement = `<head>
-     <meta charset="UTF-8">
-     <meta name="viewport" content="width=device-width">
-     <title>Matt Heard</title>
-     <link rel="preconnect" href="https://fonts.googleapis.com">
-     <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
-     <link href="https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap" rel="stylesheet">
-     <style>
-       ${styles}
-     </style>
-     
-     <!-- Define the component management system in the head -->
-     <script type="module">
-       // Define array of interactive components to initialize
-       window.interactiveComponents = [];
-       
-       /**
-        * Create a function that can add a component to the interactiveComponents list
-        * This is defined in the head so it's available as soon as possible
-        */
-       const createComponentAdder = () => {
-         /**
-          * Add a component to the interactive components list
-          * @param {string} id - The ID of the article element
-          * @param {string} modulePath - Path to the module containing the processing function
-          * @param {string} functionName - Name of the function to import from the module
-          * @returns {Object} The component configuration that was added
-          */
-         return function addComponent(id, modulePath, functionName) {
-           // Create the component configuration
-           const component = {
-             id,
-             modulePath,
-             functionName
-           };
-           
-           // Add to the global list
-           window.interactiveComponents.push(component);
-           
-           return component;
-         };
-       };
-       
-       // Create the component adder function and expose it globally
-       window.addComponent = createComponentAdder();
-     </script>
-   </head>`;
+   export const headElement = ``;
Ran all tests for this mutant.

[NoCoverage] BlockStatement
src/generator/html.js:161:40
-   export function createHtmlTag(content) {
-     const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);
-     return createTag(HTML_TAG_NAME, langAttr, content);
-   }
+   export function createHtmlTag(content) {}

[NoCoverage] BlockStatement
src/generator/html.js:171:35
-   export function wrapHtml(content) {
-     const htmlTag = createHtmlTag(content);
-     return join([DOCTYPE, htmlTag]);
-   }
+   export function wrapHtml(content) {}

[NoCoverage] ArrayDeclaration
src/generator/html.js:173:15
-     return join([DOCTYPE, htmlTag]);
+     return join([]);

[Survived] StringLiteral
src/generator/html.js:4:24
-   export const DOCTYPE = '<!DOCTYPE html>';
+   export const DOCTYPE = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:12:30
-   export const HTML_TAG_NAME = 'html';
+   export const HTML_TAG_NAME = "";
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:16:9
-     LANG: 'lang',
+     LANG: "",
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:8:7
-     EN: 'en',
+     EN: "",
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:7:25
-   export const LANGUAGE = {
-     EN: 'en',
-   };
+   export const LANGUAGE = {};
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:25:21
-     { from: />/g, to: '&gt;' },
+     { from: />/g, to: "" },
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:25:3
-     { from: />/g, to: '&gt;' },
+     {},
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:24:3
-     { from: /</g, to: '&lt;' },
+     {},
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:24:21
-     { from: /</g, to: '&lt;' },
+     { from: /</g, to: "" },
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:26:3
-     { from: /"/g, to: '&quot;' },
+     {},
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:26:21
-     { from: /"/g, to: '&quot;' },
+     { from: /"/g, to: "" },
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/html.js:27:21
-     { from: /'/g, to: '&#039;' },
+     { from: /'/g, to: "" },
Ran all tests for this mutant.

[Survived] ObjectLiteral
src/generator/html.js:27:3
-     { from: /'/g, to: '&#039;' },
+     {},
Ran all tests for this mutant.

[NoCoverage] BlockStatement
src/generator/interactive.js:8:82
-   export function generateInteractiveComponentScript(id, modulePath, functionName) {
-     return `<script type="module">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`;
-   }
+   export function generateInteractiveComponentScript(id, modulePath, functionName) {}

[NoCoverage] StringLiteral
src/generator/interactive.js:9:10
-     return `<script type="module">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/interactive.js:18:61
-   export function generateInteractiveComponentHTML(id, title) {
-     return `<div class="key article-title">${id}</div><div class="value"><h2><a href="#${id}">${title}</a></h2></div><div class="key">in</div><div class="value"><form><input type="text" disabled></form></div><div class="key"></div><div class="value"><button type="submit" disabled>Submit</button></div><div class="key">out</div><div class="value warning"><p>This toy requires Javascript to run.</p></div>`;
-   }
+   export function generateInteractiveComponentHTML(id, title) {}

[NoCoverage] StringLiteral
src/generator/interactive.js:19:10
-     return `<div class="key article-title">${id}</div><div class="value"><h2><a href="#${id}">${title}</a></h2></div><div class="key">in</div><div class="value"><form><input type="text" disabled></form></div><div class="key"></div><div class="value"><button type="submit" disabled>Submit</button></div><div class="key">out</div><div class="value warning"><p>This toy requires Javascript to run.</p></div>`;
+     return ``;

[NoCoverage] BlockStatement
src/generator/interactive.js:30:91
-   export function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {
-     const structure = generateInteractiveComponentHTML(id, title);
-     const script = generateInteractiveComponentScript(id, modulePath, functionName);
-     
-     return structure + script;
-   }
+   export function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {}

[NoCoverage] ArithmeticOperator
src/generator/interactive.js:34:10
-     return structure + script;
+     return structure - script;

[NoCoverage] BlockStatement
src/generator/main.js:2:13
-   (function() {
-     const audioElements = document.querySelectorAll("audio");
-     
-     audioElements.forEach(function(audio, index) {
-       audio.removeAttribute("controls");
-       
-       if (!audio.id) {
-         audio.id = "audio-" + index;
-       }
-       
-       const controlsContainer = document.createElement("div");
-       controlsContainer.className = "audio-controls";
-       controlsContainer.id = "controls-" + audio.id;
-       
-       const timeDisplay = document.createElement("span");
-       timeDisplay.className = "audio-time";
-       timeDisplay.textContent = "0:00";
-       
-       const playButton = document.createElement("a");
-       playButton.href = "#";
-       playButton.textContent = "PLAY";
-       playButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.play();
-       });
-       
-       const pauseButton = document.createElement("a");
-       pauseButton.href = "#";
-       pauseButton.textContent = "PAUSE";
-       pauseButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-       });
-       
-       const stopButton = document.createElement("a");
-       stopButton.href = "#";
-       stopButton.textContent = "STOP";
-       stopButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-         audio.currentTime = 0;
-       });
-       
-       audio.addEventListener("timeupdate", function() {
-         const minutes = Math.floor(audio.currentTime / 60);
-         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
-         timeDisplay.textContent = minutes + ":" + seconds;
-       });
-       
-       controlsContainer.appendChild(playButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(pauseButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(stopButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(timeDisplay);
-       
-       audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);
-     });
-   })();
+   (function() {})();

[NoCoverage] StringLiteral
src/generator/main.js:3:51
-     const audioElements = document.querySelectorAll("audio");
+     const audioElements = document.querySelectorAll("");

[NoCoverage] BlockStatement
src/generator/main.js:5:48
-     audioElements.forEach(function(audio, index) {
-       audio.removeAttribute("controls");
-       
-       if (!audio.id) {
-         audio.id = "audio-" + index;
-       }
-       
-       const controlsContainer = document.createElement("div");
-       controlsContainer.className = "audio-controls";
-       controlsContainer.id = "controls-" + audio.id;
-       
-       const timeDisplay = document.createElement("span");
-       timeDisplay.className = "audio-time";
-       timeDisplay.textContent = "0:00";
-       
-       const playButton = document.createElement("a");
-       playButton.href = "#";
-       playButton.textContent = "PLAY";
-       playButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.play();
-       });
-       
-       const pauseButton = document.createElement("a");
-       pauseButton.href = "#";
-       pauseButton.textContent = "PAUSE";
-       pauseButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-       });
-       
-       const stopButton = document.createElement("a");
-       stopButton.href = "#";
-       stopButton.textContent = "STOP";
-       stopButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-         audio.currentTime = 0;
-       });
-       
-       audio.addEventListener("timeupdate", function() {
-         const minutes = Math.floor(audio.currentTime / 60);
-         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
-         timeDisplay.textContent = minutes + ":" + seconds;
-       });
-       
-       controlsContainer.appendChild(playButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(pauseButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(stopButton);
-       controlsContainer.appendChild(document.createTextNode(" "));
-       controlsContainer.appendChild(timeDisplay);
-       
-       audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);
-     });
+     audioElements.forEach(function(audio, index) {});

[NoCoverage] StringLiteral
src/generator/main.js:6:27
-       audio.removeAttribute("controls");
+       audio.removeAttribute("");

[NoCoverage] BooleanLiteral
src/generator/main.js:8:9
-       if (!audio.id) {
+       if (audio.id) {

[NoCoverage] ConditionalExpression
src/generator/main.js:8:9
-       if (!audio.id) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:8:9
-       if (!audio.id) {
+       if (false) {

[NoCoverage] BlockStatement
src/generator/main.js:8:20
-       if (!audio.id) {
-         audio.id = "audio-" + index;
-       }
+       if (!audio.id) {}

[NoCoverage] StringLiteral
src/generator/main.js:9:18
-         audio.id = "audio-" + index;
+         audio.id = "" + index;

[NoCoverage] StringLiteral
src/generator/main.js:12:54
-       const controlsContainer = document.createElement("div");
+       const controlsContainer = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:13:35
-       controlsContainer.className = "audio-controls";
+       controlsContainer.className = "";

[NoCoverage] StringLiteral
src/generator/main.js:14:28
-       controlsContainer.id = "controls-" + audio.id;
+       controlsContainer.id = "" + audio.id;

[NoCoverage] StringLiteral
src/generator/main.js:16:48
-       const timeDisplay = document.createElement("span");
+       const timeDisplay = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:17:29
-       timeDisplay.className = "audio-time";
+       timeDisplay.className = "";

[NoCoverage] StringLiteral
src/generator/main.js:18:31
-       timeDisplay.textContent = "0:00";
+       timeDisplay.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:20:47
-       const playButton = document.createElement("a");
+       const playButton = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:21:23
-       playButton.href = "#";
+       playButton.href = "";

[NoCoverage] StringLiteral
src/generator/main.js:22:30
-       playButton.textContent = "PLAY";
+       playButton.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:23:33
-       playButton.addEventListener("click", function(e) {
+       playButton.addEventListener("", function(e) {

[NoCoverage] BlockStatement
src/generator/main.js:23:54
-       playButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.play();
-       });
+       playButton.addEventListener("click", function(e) {});

[NoCoverage] StringLiteral
src/generator/main.js:28:48
-       const pauseButton = document.createElement("a");
+       const pauseButton = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:29:24
-       pauseButton.href = "#";
+       pauseButton.href = "";

[NoCoverage] StringLiteral
src/generator/main.js:30:31
-       pauseButton.textContent = "PAUSE";
+       pauseButton.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:31:34
-       pauseButton.addEventListener("click", function(e) {
+       pauseButton.addEventListener("", function(e) {

[NoCoverage] BlockStatement
src/generator/main.js:31:55
-       pauseButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-       });
+       pauseButton.addEventListener("click", function(e) {});

[NoCoverage] StringLiteral
src/generator/main.js:36:47
-       const stopButton = document.createElement("a");
+       const stopButton = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:37:23
-       stopButton.href = "#";
+       stopButton.href = "";

[NoCoverage] StringLiteral
src/generator/main.js:38:30
-       stopButton.textContent = "STOP";
+       stopButton.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:39:33
-       stopButton.addEventListener("click", function(e) {
+       stopButton.addEventListener("", function(e) {

[NoCoverage] BlockStatement
src/generator/main.js:39:54
-       stopButton.addEventListener("click", function(e) {
-         e.preventDefault();
-         audio.pause();
-         audio.currentTime = 0;
-       });
+       stopButton.addEventListener("click", function(e) {});

[NoCoverage] StringLiteral
src/generator/main.js:45:28
-       audio.addEventListener("timeupdate", function() {
+       audio.addEventListener("", function() {

[NoCoverage] BlockStatement
src/generator/main.js:45:53
-       audio.addEventListener("timeupdate", function() {
-         const minutes = Math.floor(audio.currentTime / 60);
-         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
-         timeDisplay.textContent = minutes + ":" + seconds;
-       });
+       audio.addEventListener("timeupdate", function() {});

[NoCoverage] ArithmeticOperator
src/generator/main.js:46:34
-         const minutes = Math.floor(audio.currentTime / 60);
+         const minutes = Math.floor(audio.currentTime * 60);

[NoCoverage] ArithmeticOperator
src/generator/main.js:47:34
-         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
+         const seconds = Math.floor(audio.currentTime * 60).toString().padStart(2, "0");

[NoCoverage] StringLiteral
src/generator/main.js:47:81
-         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "0");
+         const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, "");

[NoCoverage] StringLiteral
src/generator/main.js:48:43
-         timeDisplay.textContent = minutes + ":" + seconds;
+         timeDisplay.textContent = minutes + "" + seconds;

[NoCoverage] StringLiteral
src/generator/main.js:52:59
-       controlsContainer.appendChild(document.createTextNode(" "));
+       controlsContainer.appendChild(document.createTextNode(""));

[NoCoverage] StringLiteral
src/generator/main.js:54:59
-       controlsContainer.appendChild(document.createTextNode(" "));
+       controlsContainer.appendChild(document.createTextNode(""));

[NoCoverage] StringLiteral
src/generator/main.js:56:59
-       controlsContainer.appendChild(document.createTextNode(" "));
+       controlsContainer.appendChild(document.createTextNode(""));

[NoCoverage] BlockStatement
src/generator/main.js:69:65
-   function initializeInteractiveComponent(id, processingFunction) {
-     // Get the article element
-     const article = document.getElementById(id);
-     
-     // Get the elements within the article
-     const inputElement = article.querySelector('input');
-     const submitButton = article.querySelector('button');
-     const outputElement = article.querySelector('p.output');
-     
-     // Disable controls during initialization
-     inputElement.disabled = true;
-     submitButton.disabled = true;
-     
-     // Update message to show JS is running
-     outputElement.textContent = 'Initialising...';
-     
-     /**
-      * Enable controls and update status message
-      */
-     function enableControls() {
-       inputElement.disabled = false;
-       submitButton.disabled = false;
-       outputElement.textContent = 'Ready for input';
-       outputElement.parentElement.classList.remove('warning');
-     }
-     
-     /**
-      * Handle form submission events
-      * @param {Event} event - The submission event
-      */
-     function handleSubmit(event) {
-       if (event) {
-         event.preventDefault();
-       }
-       const inputValue = inputElement.value;
-       
-       // Use the provided processing function
-       const result = processingFunction(inputValue);
-       
-       // Update the output
-       outputElement.textContent = result;
-     }
-     
-     // Add event listener to the submit button
-     submitButton.addEventListener('click', handleSubmit);
-     
-     // Add event listener for Enter key in the input field
-     inputElement.addEventListener('keypress', (event) => {
-       if (event.key === 'Enter') {
-         handleSubmit(event);
-       }
-     });
-     
-     // Enable controls when initialization is complete
-     enableControls();
-   }
+   function initializeInteractiveComponent(id, processingFunction) {}

[NoCoverage] StringLiteral
src/generator/main.js:74:46
-     const inputElement = article.querySelector('input');
+     const inputElement = article.querySelector("");

[NoCoverage] StringLiteral
src/generator/main.js:75:46
-     const submitButton = article.querySelector('button');
+     const submitButton = article.querySelector("");

[NoCoverage] StringLiteral
src/generator/main.js:76:47
-     const outputElement = article.querySelector('p.output');
+     const outputElement = article.querySelector("");

[NoCoverage] BooleanLiteral
src/generator/main.js:79:27
-     inputElement.disabled = true;
+     inputElement.disabled = false;

[NoCoverage] BooleanLiteral
src/generator/main.js:80:27
-     submitButton.disabled = true;
+     submitButton.disabled = false;

[NoCoverage] StringLiteral
src/generator/main.js:83:31
-     outputElement.textContent = 'Initialising...';
+     outputElement.textContent = "";

[NoCoverage] BlockStatement
src/generator/main.js:88:29
-     function enableControls() {
-       inputElement.disabled = false;
-       submitButton.disabled = false;
-       outputElement.textContent = 'Ready for input';
-       outputElement.parentElement.classList.remove('warning');
-     }
+     function enableControls() {}

[NoCoverage] BooleanLiteral
src/generator/main.js:89:29
-       inputElement.disabled = false;
+       inputElement.disabled = true;

[NoCoverage] BooleanLiteral
src/generator/main.js:90:29
-       submitButton.disabled = false;
+       submitButton.disabled = true;

[NoCoverage] StringLiteral
src/generator/main.js:91:33
-       outputElement.textContent = 'Ready for input';
+       outputElement.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:92:50
-       outputElement.parentElement.classList.remove('warning');
+       outputElement.parentElement.classList.remove("");

[NoCoverage] BlockStatement
src/generator/main.js:99:32
-     function handleSubmit(event) {
-       if (event) {
-         event.preventDefault();
-       }
-       const inputValue = inputElement.value;
-       
-       // Use the provided processing function
-       const result = processingFunction(inputValue);
-       
-       // Update the output
-       outputElement.textContent = result;
-     }
+     function handleSubmit(event) {}

[NoCoverage] ConditionalExpression
src/generator/main.js:100:9
-       if (event) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:100:9
-       if (event) {
+       if (false) {

[NoCoverage] BlockStatement
src/generator/main.js:100:16
-       if (event) {
-         event.preventDefault();
-       }
+       if (event) {}

[NoCoverage] StringLiteral
src/generator/main.js:113:33
-     submitButton.addEventListener('click', handleSubmit);
+     submitButton.addEventListener("", handleSubmit);

[NoCoverage] StringLiteral
src/generator/main.js:116:33
-     inputElement.addEventListener('keypress', (event) => {
+     inputElement.addEventListener("", (event) => {

[NoCoverage] BlockStatement
src/generator/main.js:116:56
-     inputElement.addEventListener('keypress', (event) => {
-       if (event.key === 'Enter') {
-         handleSubmit(event);
-       }
-     });
+     inputElement.addEventListener('keypress', (event) => {});

[NoCoverage] ConditionalExpression
src/generator/main.js:117:9
-       if (event.key === 'Enter') {
+       if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:117:9
-       if (event.key === 'Enter') {
+       if (false) {

[NoCoverage] EqualityOperator
src/generator/main.js:117:9
-       if (event.key === 'Enter') {
+       if (event.key !== 'Enter') {

[NoCoverage] StringLiteral
src/generator/main.js:117:23
-       if (event.key === 'Enter') {
+       if (event.key === "") {

[NoCoverage] BlockStatement
src/generator/main.js:117:32
-       if (event.key === 'Enter') {
-         handleSubmit(event);
-       }
+       if (event.key === 'Enter') {}

[NoCoverage] BlockStatement
src/generator/main.js:132:62
-   function initializeWhenVisible(id, modulePath, functionName) {
-     const article = document.getElementById(id);
-     
-     // Create an observer instance
-     const observer = new IntersectionObserver((entries, observer) => {
-       entries.forEach(entry => {
-         // If the article is visible
-         if (entry.isIntersecting) {
-           // Dynamically import the module only when the article is visible
-           import(modulePath).then((module) => {
-             const processingFunction = module[functionName];
-             
-             // Initialize the component with the imported function
-             initializeInteractiveComponent(id, processingFunction);
-           }).catch(error => {
-             console.error('Error loading module ' + modulePath + ':', error);
-           });
-           
-           // Stop observing once initialized
-           observer.disconnect();
-         }
-       });
-     }, {
-       // Options for the observer
-       root: null, // viewport
-       threshold: 0.1 // 10% visibility is enough to trigger
-     });
-     
-     // Start observing the article
-     observer.observe(article);
-   }
+   function initializeWhenVisible(id, modulePath, functionName) {}

[NoCoverage] BlockStatement
src/generator/main.js:136:68
-     const observer = new IntersectionObserver((entries, observer) => {
-       entries.forEach(entry => {
-         // If the article is visible
-         if (entry.isIntersecting) {
-           // Dynamically import the module only when the article is visible
-           import(modulePath).then((module) => {
-             const processingFunction = module[functionName];
-             
-             // Initialize the component with the imported function
-             initializeInteractiveComponent(id, processingFunction);
-           }).catch(error => {
-             console.error('Error loading module ' + modulePath + ':', error);
-           });
-           
-           // Stop observing once initialized
-           observer.disconnect();
-         }
-       });
-     }, {
+     const observer = new IntersectionObserver((entries, observer) => {}, {

[NoCoverage] BlockStatement
src/generator/main.js:137:30
-       entries.forEach(entry => {
-         // If the article is visible
-         if (entry.isIntersecting) {
-           // Dynamically import the module only when the article is visible
-           import(modulePath).then((module) => {
-             const processingFunction = module[functionName];
-             
-             // Initialize the component with the imported function
-             initializeInteractiveComponent(id, processingFunction);
-           }).catch(error => {
-             console.error('Error loading module ' + modulePath + ':', error);
-           });
-           
-           // Stop observing once initialized
-           observer.disconnect();
-         }
-       });
+       entries.forEach(entry => {});

[NoCoverage] ConditionalExpression
src/generator/main.js:139:11
-         if (entry.isIntersecting) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:139:11
-         if (entry.isIntersecting) {
+         if (false) {

[NoCoverage] BlockStatement
src/generator/main.js:139:33
-         if (entry.isIntersecting) {
-           // Dynamically import the module only when the article is visible
-           import(modulePath).then((module) => {
-             const processingFunction = module[functionName];
-             
-             // Initialize the component with the imported function
-             initializeInteractiveComponent(id, processingFunction);
-           }).catch(error => {
-             console.error('Error loading module ' + modulePath + ':', error);
-           });
-           
-           // Stop observing once initialized
-           observer.disconnect();
-         }
+         if (entry.isIntersecting) {}

[NoCoverage] BlockStatement
src/generator/main.js:141:45
-           import(modulePath).then((module) => {
-             const processingFunction = module[functionName];
-             
-             // Initialize the component with the imported function
-             initializeInteractiveComponent(id, processingFunction);
-           }).catch(error => {
+           import(modulePath).then((module) => {}).catch(error => {

[NoCoverage] BlockStatement
src/generator/main.js:146:27
-           }).catch(error => {
-             console.error('Error loading module ' + modulePath + ':', error);
-           });
+           }).catch(error => {});

[NoCoverage] StringLiteral
src/generator/main.js:147:25
-             console.error('Error loading module ' + modulePath + ':', error);
+             console.error("" + modulePath + ':', error);

[NoCoverage] StringLiteral
src/generator/main.js:147:64
-             console.error('Error loading module ' + modulePath + ':', error);
+             console.error('Error loading module ' + modulePath + "", error);

[NoCoverage] ObjectLiteral
src/generator/main.js:154:6
-     }, {
-       // Options for the observer
-       root: null, // viewport
-       threshold: 0.1 // 10% visibility is enough to trigger
-     });
+     }, {});

[NoCoverage] ConditionalExpression
src/generator/main.js:165:5
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:165:5
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (false) {

[NoCoverage] LogicalOperator
src/generator/main.js:165:5
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (window.interactiveComponents || window.interactiveComponents.length > 0) {

[NoCoverage] ConditionalExpression
src/generator/main.js:165:37
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (window.interactiveComponents && true) {

[NoCoverage] EqualityOperator
src/generator/main.js:165:37
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (window.interactiveComponents && window.interactiveComponents.length >= 0) {

[NoCoverage] EqualityOperator
src/generator/main.js:165:37
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
+   if (window.interactiveComponents && window.interactiveComponents.length <= 0) {

[NoCoverage] BlockStatement
src/generator/main.js:165:78
-   if (window.interactiveComponents && window.interactiveComponents.length > 0) {
-     console.log('Initializing', window.interactiveComponents.length, 'interactive components');
-     window.interactiveComponents.forEach(component => {
-       initializeWhenVisible(component.id, component.modulePath, component.functionName);
-     });
-   } else {
+   if (window.interactiveComponents && window.interactiveComponents.length > 0) {} else {

[NoCoverage] StringLiteral
src/generator/main.js:166:15
-     console.log('Initializing', window.interactiveComponents.length, 'interactive components');
+     console.log("", window.interactiveComponents.length, 'interactive components');

[NoCoverage] StringLiteral
src/generator/main.js:166:68
-     console.log('Initializing', window.interactiveComponents.length, 'interactive components');
+     console.log('Initializing', window.interactiveComponents.length, "");

[NoCoverage] BlockStatement
src/generator/main.js:167:53
-     window.interactiveComponents.forEach(component => {
-       initializeWhenVisible(component.id, component.modulePath, component.functionName);
-     });
+     window.interactiveComponents.forEach(component => {});

[NoCoverage] BlockStatement
src/generator/main.js:170:8
-   } else {
-     console.warn('No interactive components found to initialize');
-   }
+   } else {}

[NoCoverage] StringLiteral
src/generator/main.js:171:16
-     console.warn('No interactive components found to initialize');
+     console.warn("");

[NoCoverage] BlockStatement
src/generator/main.js:175:41
-   function hideArticlesByClass(className) {
-     var articles = document.getElementsByTagName('article');
-     for (var i = 0; i < articles.length; i++) {
-       if (articles[i].classList.contains(className)) {
-         articles[i].style.display = 'none';
-       }
-     }
-   }
+   function hideArticlesByClass(className) {}

[NoCoverage] StringLiteral
src/generator/main.js:176:48
-     var articles = document.getElementsByTagName('article');
+     var articles = document.getElementsByTagName("");

[NoCoverage] ConditionalExpression
src/generator/main.js:177:19
-     for (var i = 0; i < articles.length; i++) {
+     for (var i = 0; false; i++) {

[NoCoverage] EqualityOperator
src/generator/main.js:177:19
-     for (var i = 0; i < articles.length; i++) {
+     for (var i = 0; i <= articles.length; i++) {

[NoCoverage] EqualityOperator
src/generator/main.js:177:19
-     for (var i = 0; i < articles.length; i++) {
+     for (var i = 0; i >= articles.length; i++) {

[NoCoverage] UpdateOperator
src/generator/main.js:177:40
-     for (var i = 0; i < articles.length; i++) {
+     for (var i = 0; i < articles.length; i--) {

[NoCoverage] BlockStatement
src/generator/main.js:177:45
-     for (var i = 0; i < articles.length; i++) {
-       if (articles[i].classList.contains(className)) {
-         articles[i].style.display = 'none';
-       }
-     }
+     for (var i = 0; i < articles.length; i++) {}

[NoCoverage] ConditionalExpression
src/generator/main.js:178:9
-       if (articles[i].classList.contains(className)) {
+       if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:178:9
-       if (articles[i].classList.contains(className)) {
+       if (false) {

[NoCoverage] BlockStatement
src/generator/main.js:178:52
-       if (articles[i].classList.contains(className)) {
-         articles[i].style.display = 'none';
-       }
+       if (articles[i].classList.contains(className)) {}

[NoCoverage] StringLiteral
src/generator/main.js:179:35
-         articles[i].style.display = 'none';
+         articles[i].style.display = "";

[NoCoverage] BlockStatement
src/generator/main.js:184:42
-   function toggleHideLink(link, className) {
-     // Check if a span with the hide link already exists immediately after the link.
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
-       // Remove the span if it exists.
-       link.nextElementSibling.remove();
-     } else {
-       // Create a new span element.
-       var span = document.createElement('span');
-       span.classList.add('hide-span');
-       // Append the opening text node.
-       span.appendChild(document.createTextNode(" ("));
-       // Create the hide anchor element.
-       var hideLink = document.createElement('a');
-       hideLink.textContent = "hide";
-       // Add click listener to trigger hideArticlesByClass.
-       hideLink.addEventListener('click', function(event) {
-         event.preventDefault();
-         hideArticlesByClass(className);
-       });
-       span.appendChild(hideLink);
-       // Append the closing text node.
-       span.appendChild(document.createTextNode(")"));
-       // Insert the span immediately after the link.
-       link.parentNode.insertBefore(span, link.nextSibling);
-     }
-   }
+   function toggleHideLink(link, className) {}

[NoCoverage] ConditionalExpression
src/generator/main.js:186:7
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
+     if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:186:7
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
+     if (false) {

[NoCoverage] LogicalOperator
src/generator/main.js:186:7
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
+     if (link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span')) {

[NoCoverage] StringLiteral
src/generator/main.js:186:77
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
+     if (link.nextElementSibling && link.nextElementSibling.classList.contains("")) {

[NoCoverage] BlockStatement
src/generator/main.js:186:91
-     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {
-       // Remove the span if it exists.
-       link.nextElementSibling.remove();
-     } else {
+     if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {} else {

[NoCoverage] BlockStatement
src/generator/main.js:189:10
-     } else {
-       // Create a new span element.
-       var span = document.createElement('span');
-       span.classList.add('hide-span');
-       // Append the opening text node.
-       span.appendChild(document.createTextNode(" ("));
-       // Create the hide anchor element.
-       var hideLink = document.createElement('a');
-       hideLink.textContent = "hide";
-       // Add click listener to trigger hideArticlesByClass.
-       hideLink.addEventListener('click', function(event) {
-         event.preventDefault();
-         hideArticlesByClass(className);
-       });
-       span.appendChild(hideLink);
-       // Append the closing text node.
-       span.appendChild(document.createTextNode(")"));
-       // Insert the span immediately after the link.
-       link.parentNode.insertBefore(span, link.nextSibling);
-     }
+     } else {}

[NoCoverage] StringLiteral
src/generator/main.js:191:39
-       var span = document.createElement('span');
+       var span = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:192:24
-       span.classList.add('hide-span');
+       span.classList.add("");

[NoCoverage] StringLiteral
src/generator/main.js:194:46
-       span.appendChild(document.createTextNode(" ("));
+       span.appendChild(document.createTextNode(""));

[NoCoverage] StringLiteral
src/generator/main.js:197:43
-       var hideLink = document.createElement('a');
+       var hideLink = document.createElement("");

[NoCoverage] StringLiteral
src/generator/main.js:198:28
-       hideLink.textContent = "hide";
+       hideLink.textContent = "";

[NoCoverage] StringLiteral
src/generator/main.js:200:31
-       hideLink.addEventListener('click', function(event) {
+       hideLink.addEventListener("", function(event) {

[NoCoverage] BlockStatement
src/generator/main.js:200:56
-       hideLink.addEventListener('click', function(event) {
-         event.preventDefault();
-         hideArticlesByClass(className);
-       });
+       hideLink.addEventListener('click', function(event) {});

[NoCoverage] StringLiteral
src/generator/main.js:206:46
-       span.appendChild(document.createTextNode(")"));
+       span.appendChild(document.createTextNode(""));

[NoCoverage] BlockStatement
src/generator/main.js:213:13
-   (function() {
-     Array.from(document.getElementsByTagName('a')).forEach(function(link) {
-       Array.from(link.classList).forEach(function(className) {
-         if (className.indexOf('tag-') === 0) {
-           link.addEventListener('click', function(event) {
-             event.preventDefault();
-             toggleHideLink(link, className);
-           });
-           return; // exit after first tag- match
-         }
-       });
-     });
-   })();
+   (function() {})();

[NoCoverage] StringLiteral
src/generator/main.js:214:44
-     Array.from(document.getElementsByTagName('a')).forEach(function(link) {
+     Array.from(document.getElementsByTagName("")).forEach(function(link) {

[NoCoverage] BlockStatement
src/generator/main.js:214:73
-     Array.from(document.getElementsByTagName('a')).forEach(function(link) {
-       Array.from(link.classList).forEach(function(className) {
-         if (className.indexOf('tag-') === 0) {
-           link.addEventListener('click', function(event) {
-             event.preventDefault();
-             toggleHideLink(link, className);
-           });
-           return; // exit after first tag- match
-         }
-       });
-     });
+     Array.from(document.getElementsByTagName('a')).forEach(function(link) {});

[NoCoverage] BlockStatement
src/generator/main.js:215:60
-       Array.from(link.classList).forEach(function(className) {
-         if (className.indexOf('tag-') === 0) {
-           link.addEventListener('click', function(event) {
-             event.preventDefault();
-             toggleHideLink(link, className);
-           });
-           return; // exit after first tag- match
-         }
-       });
+       Array.from(link.classList).forEach(function(className) {});

[NoCoverage] ConditionalExpression
src/generator/main.js:216:11
-         if (className.indexOf('tag-') === 0) {
+         if (true) {

[NoCoverage] ConditionalExpression
src/generator/main.js:216:11
-         if (className.indexOf('tag-') === 0) {
+         if (false) {

[NoCoverage] EqualityOperator
src/generator/main.js:216:11
-         if (className.indexOf('tag-') === 0) {
+         if (className.indexOf('tag-') !== 0) {

[NoCoverage] StringLiteral
src/generator/main.js:216:29
-         if (className.indexOf('tag-') === 0) {
+         if (className.indexOf("") === 0) {

[NoCoverage] BlockStatement
src/generator/main.js:216:44
-         if (className.indexOf('tag-') === 0) {
-           link.addEventListener('click', function(event) {
-             event.preventDefault();
-             toggleHideLink(link, className);
-           });
-           return; // exit after first tag- match
-         }
+         if (className.indexOf('tag-') === 0) {}

[NoCoverage] StringLiteral
src/generator/main.js:217:31
-           link.addEventListener('click', function(event) {
+           link.addEventListener("", function(event) {

[NoCoverage] BlockStatement
src/generator/main.js:217:56
-           link.addEventListener('click', function(event) {
-             event.preventDefault();
-             toggleHideLink(link, className);
-           });
+           link.addEventListener('click', function(event) {});

[Survived] StringLiteral
src/generator/script.js:2:19
-   const scriptTag = `<script src="main.js" defer></script>`;
+   const scriptTag = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/styles.js:1:23
-   export const styles = `
-     body {
-       background-color: #121212;
-       color: #CCCCCC;
-       font-family: "Sono", Consolas, monospace;
-       font-size: 16px;
-       line-height: 1.5;
-       margin: 0;
-       padding: 0;
-     }
-     #container {
-       max-width: 85ch;
-       padding: 1lh;
-     }
-     .entry {
-       display: grid;
-       grid-template-columns: 5ch auto;
-       padding-bottom: 1em;
-       gap: 0em 1em;
-     }
-     .key {
-       font-weight: bold;
-       color: #33CCFF;
-       text-align: right;
-       padding: 0em 0em;
-     }
-     .value {
-       text-align: left;
-       color: #CCCCCC;
-     }
-     .article-title {
-       color: #121212;
-       background-color: #00FFFF;
-     }
-     .media {
-       color: #00FF00;
-     }
-     .footer {
-       font-style: italic;
-     }
-     .full-width {
-       white-space: nowrap;
-       font-family: monospace;
-       display: block;
-       width: 100%;
-       overflow: hidden;
-       text-overflow: clip;
-       line-height: 1;
-       color: #00FFFF;
-     }
-     h1, h2, h3 {
-       color: #FFFFFF;
-       font-size: 16px;
-       margin: 0;
-       text-transform: uppercase;
-     }
-     img {
-       max-width: min(20em, 60vw);
-       height: auto;
-       display: block;
-       filter: sepia(0.8) hue-rotate(151deg) saturate(2);
-     }
-     p {
-       margin: 0;
-     }
-     ul, .related-links {
-       margin: 0;
-       padding-left: 0;
-       list-style-type: none;
-     }
-     
-     ul li::before, .related-links li::before {
-       content: "- ";
-       color: #33CCFF;
-     }
-     a {
-       color: #00FFFF;
-       text-decoration: none;
-     }
-     a:hover {
-       color: #33FFFF;
-       text-decoration: underline;
-     }
-     h1 > a, h2 > a, h3 > a {
-       color: #FFFFFF;
-     }
-     .warning {
-       color: #FFA500;
-     }
-     .error {
-       color: #FF0000;
-     }
-     .success {
-       color: #00FF00;
-     }
-     .metadata {
-       color: #33CCFF;
-     }
-     code {
-       background-color: #1A1A1A;
-       color: #00FFFF;
-     }
-     pre {
-       background-color: #1A1A1A;
-       color: #CCCCCC;
-       padding: 10px;
-       overflow-x: auto;
-     }
-     #audio-controls {
-       background-color: #1A1A1A;
-       color: #00FFFF;
-       display: inline-block;
-     }
-     .audio-btn {
-       padding: 0em 1em;
-       border: none;
-       background: #00FF00;
-       color: #1A1A1A;
-       font-family: Consolas, monospace;
-       cursor: pointer;
-       height: 2em;
-       margin-right: 1em;
-     }
-     .audio-btn:hover {
-       text-decoration: underline;
-     }
-     blockquote {
-       font-style: italic;
-       padding: 1.5em 2ch;
-       margin: 0;
-       background-color: #1a1a1a;
-       position: relative; /* Add this to make absolute positioning of corners work */
-     }
-     .corner {
-       position: absolute;
-       display: block; /* Ensure the corners are displayed */
-       width: 2ch;
-       height: 1.5em;
-     }
-     .corner .h-line,
-     .corner .v-line {
-       position: absolute;
-       background: #CCCCCC;
-       display: block; /* Ensure the lines are displayed */
-     }
-     .h-line {
-       height: 2px;
-       width: 2ch;
-     }
-     .v-line {
-       width: 2px;
-       height: 1.5em;
-     }
-     .corner-tl {
-       top: 0;
-       left: 0;
-     }
-     .corner-tl .h-line {
-       top: 0;
-       left: 0;
-     }
-     .corner-tl .v-line {
-       top: 0;
-       left: 0;
-     }
-     .corner-tr {
-       top: 0;
-       right: 0;
-     }
-     .corner-tr .h-line {
-       top: 0;
-       right: 0;
-     }
-     .corner-tr .v-line {
-       top: 0;
-       right: 0;
-     }
-     .corner-bl {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-bl .h-line {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-bl .v-line {
-       bottom: 0;
-       left: 0;
-     }
-     .corner-br {
-       bottom: 0;
-       right: 0;
-     }
-     .corner-br .h-line {
-       bottom: 0;
-       right: 0;
-     }
-     .corner-br .v-line {
-       bottom: 0;
-       right: 0;
-     }
-   `;
+   export const styles = ``;
Ran all tests for this mutant.

[Survived] StringLiteral
src/generator/title.js:10:30
-   export const HEADER_BANNER = `<pre aria-label="Matt Heard" role="heading" aria-level="1">
-   ▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      
-   ▐▛▚▞▜▌▐▌ ▐▌ █    █        
-   ▐▌  ▐▌▐▛▀▜▌ █    █        
-   ▐▌  ▐▌▐▌ ▐▌ █    █        
-   ▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  
-   ▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ 
-   ▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ 
-   ▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀
-   </pre>`;
+   export const HEADER_BANNER = ``;
Ran all tests for this mutant.

[NoCoverage] StringLiteral
src/toys/2025-03-21/italics.js:91:29
-     if (!text?.trim()) return '';
+     if (!text?.trim()) return "Stryker was here!";

[NoCoverage] StringLiteral
src/toys/2025-03-21/italics.js:108:61
-     return afterText ? processTextPreservingBold(afterText) : '';
+     return afterText ? processTextPreservingBold(afterText) : "Stryker was here!";

[Survived] StringLiteral
src/toys/2025-03-21/italics.js:53:30
-     return new RegExp(pattern, 's');
+     return new RegExp(pattern, "");
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] OptionalChaining
src/toys/2025-03-21/italics.js:91:8
-     if (!text?.trim()) return '';
+     if (!text.trim()) return '';
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] ConditionalExpression
src/toys/2025-03-21/italics.js:91:7
-     if (!text?.trim()) return '';
+     if (false) return '';
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] MethodExpression
src/toys/2025-03-21/italics.js:91:8
-     if (!text?.trim()) return '';
+     if (!text) return '';
Tests ran:
    italics function leaves regular text unchanged
    italics function adds <em> tags around asterisk-style italics while preserving asterisks
    italics function adds <em> tags around underscore-style italics while preserving underscores
  and 4 more tests!


[Survived] MethodExpression
src/toys/2025-03-21/italics.js:96:10
-     return [
-       processItalicBefore(segment.beforeText),
-       segment.boldText,
-       processBoldAfter(segment.afterText)
-     ].filter(Boolean).join('');
+     return [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('');
Tests ran:
    italics function does not add <em> tags around bold double-asterisk markdown
    italics function does not add <em> tags around bold double-underscore markdown
    italics function handles complex mixed formatting correctly


Ran 4.36 tests per mutant on average.
---------------------|------------------|----------|-----------|------------|----------|----------|
                     | % Mutation score |          |           |            |          |          |
File                 |  total | covered | # killed | # timeout | # survived | # no cov | # errors |
---------------------|--------|---------|----------|-----------|------------|----------|----------|
All files            |  64.59 |   89.55 |      386 |         8 |         46 |      170 |        0 |
 generator           |  59.65 |   88.29 |      309 |         0 |         41 |      168 |        0 |
  full-width.js      | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
  generator.js       |  82.35 |   92.11 |      280 |         0 |         24 |       36 |        0 |
  head.js            |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
  html.js            |  63.64 |   68.29 |       28 |         0 |         13 |        3 |        0 |
  interactive.js     |   0.00 |    0.00 |        0 |         0 |          0 |        6 |        0 |
  main.js            |   0.00 |    0.00 |        0 |         0 |          0 |      123 |        0 |
  script.js          |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
  styles.js          |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
  title.js           |   0.00 |    0.00 |        0 |         0 |          1 |        0 |        0 |
 toys                |  92.39 |   94.44 |       77 |         8 |          5 |        2 |        0 |
  2024-10-02         | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
   hello.js          | 100.00 |  100.00 |        2 |         0 |          0 |        0 |        0 |
  2025-03-19         | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
   identity.js       | 100.00 |  100.00 |        1 |         0 |          0 |        0 |        0 |
  2025-03-21         |  92.13 |   94.25 |       74 |         8 |          5 |        2 |        0 |
   booleanCoercer.js | 100.00 |  100.00 |       21 |         0 |          0 |        0 |        0 |
   italics.js        |  89.71 |   92.42 |       53 |         8 |          5 |        2 |        0 |
---------------------|--------|---------|----------|-----------|------------|----------|----------|
[32m20:25:37 (22749) INFO MutationTestExecutor[39m Done in 1 minute 16 seconds.
