[{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-38n9tg/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-4ZXjyT/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-8Gsc20/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-CRLT27/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-Gf5hZQ/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-QOeigu/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-YsomuD/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-i6Th7z/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":85,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":87,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":107,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nlet correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":11,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\n// @ts-nocheck\n\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":91,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":112,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":138,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":176,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":183,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":185,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":212,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":53,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1624,1624],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":60,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":60,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":67,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":67,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2185,2185],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":81,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":89,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":83,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":83,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2571,2571],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":135,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":135,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5326,5326],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":148,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":155,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":150,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":150,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5726,5726],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":163,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":172,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6310,6310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":180,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6936,6936],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":197,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":197,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7325,7325],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":212,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":212,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7667,7667],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":226,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":226,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7967,7967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":240,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":240,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8306,8306],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":258,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":265,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8821,8821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":268,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":268,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9049,9049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":279,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":288,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":281,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":281,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9308,9308],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":297,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":297,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9868,9868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":310,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":310,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10140,10140],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":325,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":334,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":327,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":327,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10702,10702],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":342,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":342,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11157,11157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":355,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":363,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":357,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":357,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11496,11496],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":368,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":375,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":370,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":370,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11830,11830],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":380,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":389,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":382,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":382,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12286,12286],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":394,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":401,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":396,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":396,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12668,12668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":406,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":413,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":408,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":408,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12892,12892],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":418,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":425,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":420,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":420,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13143,13143],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":430,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":439,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":432,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":432,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13566,13566],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":446,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":446,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13951,13951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":458,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":458,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14157,14157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":468,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":475,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":470,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":470,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14347,14347],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":482,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":482,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14668,14668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":492,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":507,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":494,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":494,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14883,14883],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":499,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":499,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15123,15123],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":512,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":523,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":514,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":514,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15521,15521],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":528,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":535,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":530,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":530,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16377,16377],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":542,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":542,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16635,16635],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":555,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":562,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":557,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":557,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17065,17065],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":567,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":574,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":569,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":569,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17503,17503],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":581,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":581,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17861,17861],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":596,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":606,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":598,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":598,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18368,18368],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":614,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":641,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":616,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":616,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19371,19371],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":625,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":625,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19756,19756],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":633,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":633,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20307,20307],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":649,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":660,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":651,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":651,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20868,20868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":667,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":667,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21428,21428],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":681,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":681,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21770,21770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":694,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":703,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":696,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":696,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22165,22165],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":708,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":718,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":710,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":710,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22684,22684],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":723,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":740,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":725,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":725,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23133,23133],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":730,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":730,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23405,23405],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":747,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":773,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":749,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":749,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24094,24094],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":754,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":754,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24352,24352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":761,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":769,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":763,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":763,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24702,24702],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":778,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":785,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":780,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":780,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25321,25321],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":792,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":799,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":794,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":794,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25745,25745],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":806,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":813,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":808,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":808,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26796,26796],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":818,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":825,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":820,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":820,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27418,27418],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":830,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":837,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":832,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":832,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28012,28012],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":842,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":850,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":844,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":844,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28458,28458],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":858,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":865,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":860,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":860,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28921,28921],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":870,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":882,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":872,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":872,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29198,29198],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":889,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":889,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29970,29970],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":892,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":909,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":894,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":894,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30084,30084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":899,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":899,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30406,30406],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":916,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":927,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":918,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":918,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30885,30885],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":932,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":940,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":934,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":934,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31664,31664],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":945,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":953,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":947,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":947,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31983,31983],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":958,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":966,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":960,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":960,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32357,32357],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":971,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":981,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":973,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":973,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32704,32704],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":986,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":994,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":988,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":988,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33399,33399],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1009,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1017,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1011,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1011,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34495,34495],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1025,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1043,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1027,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1027,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35106,35106],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1031,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1039,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1033,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1033,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35630,35630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1044,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1057,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1046,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1046,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36022,36022],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1058,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1066,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1060,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1060,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37134,37134],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1067,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1075,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1069,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1069,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37475,37475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1078,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1078,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38731,38731],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1099,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1119,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1101,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1101,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39264,39264],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1106,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1106,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39538,39538],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1124,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1126,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1126,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40480,40480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40832,40832],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1151,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1161,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1153,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1153,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41431,41431],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1167,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1177,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1169,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1169,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41985,41985],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1183,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1193,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1185,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1185,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42482,42482],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1200,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1208,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1202,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1202,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43144,43144],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1215,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1230,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1217,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1217,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43709,43709],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1222,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1222,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43965,43965],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1237,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1252,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1239,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1239,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44473,44473],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1244,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1244,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44729,44729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1259,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1272,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1261,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1261,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45144,45144],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45837,45837],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1289,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46084,46084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1306,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1314,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46647,46647],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47100,47100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47543,47543],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1348,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1348,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47786,47786],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1368,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1385,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1370,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1370,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48484,48484],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1388,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1388,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48850,48850],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":93,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":100,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":95,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":95,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3243,3243],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":116,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":123,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":118,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":118,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4225,4225],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4711,4711],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":146,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5077,5077],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5459,5459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":177,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":179,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":179,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5978,5978],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":195,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":202,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":197,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":197,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6585,6585],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":212,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":212,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7051,7051],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":230,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":230,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7621,7621],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8087,8087],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":263,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":263,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8424,8424],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8793,8793],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":290,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":298,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":292,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":292,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9176,9176],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":55,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":62,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":57,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":57,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1868,1868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":70,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":77,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":72,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":72,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2455,2455],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":87,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":96,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":89,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":89,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3524,3524],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":49,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":133,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":51,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":51,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1456,1456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":55,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":131,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":57,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":57,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1710,1710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":63,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":63,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2076,2076],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":80,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":80,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3369,3369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":92,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":92,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3973,3973],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4573,4573],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":112,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":121,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":114,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":114,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4914,4914],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":141,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":226,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":143,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":143,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6507,6507],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":164,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":174,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":166,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":166,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7537,7537],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":180,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8206,8206],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":187,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":187,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8426,8426],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":207,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":221,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":209,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":209,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9157,9157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9507,9507],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":234,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":236,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":236,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10113,10113],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":244,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":244,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10354,10354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":247,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":283,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10490,10490],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":255,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":255,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10786,10786],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":261,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":261,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11053,11053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":269,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":276,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":271,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":271,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11471,11471],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":300,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":300,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12809,12809],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13156,13156],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":315,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":315,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13361,13361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":345,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13640,13640],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":331,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":331,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14115,14115],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":336,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":336,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14371,14371],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":346,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":393,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":348,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":348,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":354,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":354,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15187,15187],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":362,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":362,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15384,15384],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":377,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":377,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16302,16302],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":394,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":431,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":396,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":396,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16840,16840],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":401,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":401,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17057,17057],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":404,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":427,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17224,17224],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":411,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":411,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17612,17612],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":416,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":416,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17866,17866],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":11,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":22,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":20,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":20,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":30,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":39,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":40,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":40,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":45,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":53,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":54,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":54,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n// @ts-nocheck\n\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":52,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":59,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1516,1516],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1620,1620],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":10,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":19,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":19,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":29,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":38,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":39,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":39,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":44,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":52,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":53,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":53,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":56,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":76,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1845,1845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":67,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":67,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2424,2424],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":63,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":63,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2017,2017],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":76,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":96,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":78,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":78,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2397,2397],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":103,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":115,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":105,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":105,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3540,3540],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":123,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":125,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":125,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4315,4315],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":139,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":146,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":141,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":141,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4927,4927],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":171,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5669,5669],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":172,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":179,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":174,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":174,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6814,6814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":180,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7073,7073],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":213,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":230,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8068,8068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8601,8601],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":241,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":264,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9185,9185],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9490,9490],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":275,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":275,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10447,10447],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":281,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":281,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10645,10645],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":307,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":307,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11241,11241],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":329,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11742,11742],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":338,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":345,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12205,12205],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":354,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":362,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":356,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":356,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12916,12916],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-iMVkB5/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-peJ8j3/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":74,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":84,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":86,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":106,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":111,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":137,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":144,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":51,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":72,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":53,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":53,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1608,1608],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1813,1813],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2169,2169],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":79,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":87,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":81,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":81,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2555,2555],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5310,5310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":146,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5710,5710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6294,6294],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":178,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":185,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":180,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":180,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6920,6920],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":195,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":195,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7309,7309],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":210,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":210,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7651,7651],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":224,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":224,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7951,7951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":238,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":238,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8290,8290],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":256,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":258,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":258,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8805,8805],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":266,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":266,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9033,9033],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":277,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":286,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9292,9292],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":295,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":295,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9852,9852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10124,10124],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":332,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10686,10686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11141,11141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11480,11480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":373,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11814,11814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":378,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":387,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":380,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":380,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12270,12270],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":399,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":394,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":394,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12652,12652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":404,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":411,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12876,12876],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":416,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":423,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":418,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":418,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13127,13127],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":428,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":437,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":430,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":430,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13550,13550],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":444,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":444,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13935,13935],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":456,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":456,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14141,14141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":466,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":473,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":468,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":468,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14331,14331],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":480,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":480,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":490,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":505,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":492,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":492,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14867,14867],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":497,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":497,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15107,15107],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":510,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":521,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":512,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":512,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15505,15505],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":526,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":533,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":528,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":528,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16361,16361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":540,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":540,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16619,16619],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":553,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":560,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":555,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":555,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17049,17049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":565,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":572,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":567,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":567,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17487,17487],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":579,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":579,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17845,17845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":594,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":604,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":596,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":596,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18352,18352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":612,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":639,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":614,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":614,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19355,19355],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":623,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":623,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19740,19740],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":631,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":631,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20291,20291],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":647,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":658,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":649,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":649,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20852,20852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":665,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":665,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21412,21412],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":679,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":679,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21754,21754],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":692,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":701,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":694,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":694,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22149,22149],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":706,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":716,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":708,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":708,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22668,22668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":721,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":738,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":723,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":723,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23117,23117],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":728,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":728,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23389,23389],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":745,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":771,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":747,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":747,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24078,24078],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":752,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":752,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24336,24336],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":759,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":767,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":761,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":761,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24686,24686],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":776,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":783,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":778,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":778,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25305,25305],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":790,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":797,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":792,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":792,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25729,25729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":804,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":811,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":806,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":806,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26780,26780],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":816,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":823,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":818,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":818,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27402,27402],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":828,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":835,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":830,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":830,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27996,27996],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":840,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":848,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":842,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":842,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28442,28442],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":856,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":863,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":858,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":858,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28905,28905],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":868,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":880,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":870,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":870,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29182,29182],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":887,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":887,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29954,29954],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":890,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":907,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":892,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":892,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30068,30068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":897,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":897,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30390,30390],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":914,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":925,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":916,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":916,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30869,30869],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":930,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":938,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":932,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":932,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31648,31648],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":943,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":951,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":945,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":945,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31967,31967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":956,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":964,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":958,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":958,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32341,32341],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":969,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":979,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":971,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":971,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32688,32688],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":984,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":992,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":986,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":986,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33383,33383],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1007,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1015,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1009,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1009,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34479,34479],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1023,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1041,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1025,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1025,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35090,35090],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1029,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1037,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1031,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1031,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35614,35614],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1042,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1055,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1044,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1044,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36006,36006],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1056,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1064,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1058,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1058,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37118,37118],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1065,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1073,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1067,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1067,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37459,37459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1076,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1076,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38715,38715],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1097,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1117,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1099,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1099,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39248,39248],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1104,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1104,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39522,39522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1129,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40464,40464],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1136,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1143,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1138,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1138,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40816,40816],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1149,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1159,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1151,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1151,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41415,41415],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1165,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1175,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1167,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1167,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41969,41969],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1181,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1191,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1183,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1183,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42466,42466],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1198,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1206,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1200,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1200,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43128,43128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1213,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1228,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43693,43693],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43949,43949],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1235,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1250,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1237,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1237,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44457,44457],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1242,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1242,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44713,44713],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1257,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1270,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1259,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1259,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45128,45128],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45821,45821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1287,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1289,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1289,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46068,46068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1304,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1312,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46631,46631],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1321,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1321,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47084,47084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1337,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1337,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47527,47527],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1346,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1346,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47770,47770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1366,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1383,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1368,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1368,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48468,48468],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1386,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1386,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48834,48834],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":92,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":99,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":94,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":94,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3228,3228],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":115,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":122,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":117,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":117,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4210,4210],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":132,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":132,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4696,4696],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":145,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":152,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":147,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":147,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5062,5062],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":161,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":161,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5444,5444],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":178,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":178,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5963,5963],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":194,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":196,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":196,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6570,6570],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":211,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":211,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7036,7036],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":229,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":229,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7606,7606],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8072,8072],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":262,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":262,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8409,8409],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":276,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":276,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8778,8778],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":289,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9161,9161],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":53,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":60,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1852,1852],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":68,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":70,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":70,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2439,2439],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":85,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":94,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":87,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":87,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3508,3508],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":48,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":50,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":50,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1441,1441],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":54,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":130,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1695,1695],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2061,2061],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":79,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":79,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3354,3354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":91,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":91,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3958,3958],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":103,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":103,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4558,4558],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":111,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":120,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":113,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":113,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4899,4899],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":140,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":225,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":142,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":142,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6492,6492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":163,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":173,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7522,7522],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":179,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":200,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8191,8191],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":186,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":186,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8411,8411],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":206,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":220,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":208,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":208,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9142,9142],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":213,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":213,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9492,9492],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":233,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":294,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":235,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":235,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10098,10098],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10339,10339],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":246,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":282,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10475,10475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":254,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":254,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10771,10771],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11038,11038],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":268,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":275,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":270,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":270,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11456,11456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":299,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":299,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12794,12794],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":305,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":305,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13141,13141],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":314,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":314,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13346,13346],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13625,13625],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":330,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":330,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14100,14100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":335,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":335,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14356,14356],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":345,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":392,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":347,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":347,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14637,14637],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":353,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":353,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15172,15172],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":361,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":361,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15369,15369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":376,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":376,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16287,16287],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":393,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":430,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":395,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":395,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16825,16825],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":400,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":400,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17042,17042],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":403,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":426,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":405,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":405,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17209,17209],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":410,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":410,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17597,17597],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":415,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":415,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17851,17851],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":10,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":10,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":20,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":29,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":30,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":30,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":35,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":44,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":44,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":4,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":13,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":13,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":23,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":32,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":33,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":33,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":38,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":46,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":47,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":47,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":50,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":57,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":52,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":52,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1500,1500],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1604,1604],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":54,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":65,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":65,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2408,2408],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":62,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":62,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2002,2002],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":77,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":77,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2382,2382],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":102,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":114,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3525,3525],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":122,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":124,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":124,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4300,4300],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4912,4912],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":160,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":170,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5654,5654],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":171,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":178,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":173,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":173,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6799,6799],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":179,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":186,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":181,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":181,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7058,7058],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":212,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":229,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8053,8053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":219,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":219,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8586,8586],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":240,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":263,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":242,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":242,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9170,9170],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":248,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":248,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9475,9475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":274,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":274,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10432,10432],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":280,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":280,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10630,10630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11226,11226],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":321,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":328,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11727,11727],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":344,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12190,12190],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":353,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":361,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":355,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":355,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12901,12901],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-qN6O8w/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/2024-10-03/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findCardIndex' has a complexity of 5. Maximum allowed is 2.","line":75,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":85,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'checkGuess' has a complexity of 5. Maximum allowed is 2.","line":87,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":107,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nlet correctGuesses = 0;\nlet incorrectGuesses = 0;\nlet totalGuesses = 0;\n\nconst spades = [\n  '🂡',\n  '🂢',\n  '🂣',\n  '🂤',\n  '🂥',\n  '🂦',\n  '🂧',\n  '🂨',\n  '🂩',\n  '🂪',\n  '🂫',\n  '🂭',\n  '🂮',\n];\nconst hearts = [\n  '🂱',\n  '🂲',\n  '🂳',\n  '🂴',\n  '🂵',\n  '🂶',\n  '🂷',\n  '🂸',\n  '🂹',\n  '🂺',\n  '🂻',\n  '🂽',\n  '🂾',\n];\nconst diamonds = [\n  '🃁',\n  '🃂',\n  '🃃',\n  '🃄',\n  '🃅',\n  '🃆',\n  '🃇',\n  '🃈',\n  '🃉',\n  '🃊',\n  '🃋',\n  '🃍',\n  '🃎',\n];\nconst clubs = ['🃑', '🃒', '🃓', '🃔', '🃕', '🃖', '🃗', '🃘', '🃙', '🃚', '🃛', '🃝', '🃞'];\n\nconst allCards = [...spades, ...hearts, ...diamonds, ...clubs];\nlet currentCard = allCards[Math.floor(Math.random() * allCards.length)];\n\nconst correctElement = document.getElementById('correct');\nconst incorrectElement = document.getElementById('incorrect');\nconst totalElement = document.getElementById('total');\nconst currentCardElement = document.getElementById('current-card');\n\nconst higherBtn = document.getElementById('higher-btn');\nconst lowerBtn = document.getElementById('lower-btn');\n\nfunction getRandomCard() {\n  return allCards[Math.floor(Math.random() * allCards.length)];\n}\n\nfunction updateScoreboard() {\n  correctElement.textContent = correctGuesses;\n  incorrectElement.textContent = incorrectGuesses;\n  totalElement.textContent = totalGuesses;\n}\n\n// Function to find the index of a card in its respective suit array\nfunction findCardIndex(card) {\n  let index = spades.indexOf(card);\n  if (index !== -1) return index;\n  index = hearts.indexOf(card);\n  if (index !== -1) return index;\n  index = diamonds.indexOf(card);\n  if (index !== -1) return index;\n  index = clubs.indexOf(card);\n  if (index !== -1) return index;\n  return -1; // Default, in case something goes wrong\n}\n\nfunction checkGuess(isHigher) {\n  const newCard = getRandomCard();\n\n  // Find the index in the suit arrays\n  const currentIndex = findCardIndex(currentCard);\n  const newIndex = findCardIndex(newCard);\n\n  // Check the guess according to the rules\n  if (newIndex > currentIndex && isHigher) {\n    correctGuesses++;\n  } else if (newIndex < currentIndex && !isHigher) {\n    correctGuesses++;\n  } else {\n    incorrectGuesses++;\n  }\n\n  totalGuesses++;\n  currentCard = newCard;\n  currentCardElement.textContent = currentCard;\n  updateScoreboard();\n}\n\nhigherBtn.addEventListener('click', () => checkGuess(true));\nlowerBtn.addEventListener('click', () => checkGuess(false));\n\n// Initialize the display\ncurrentCardElement.textContent = currentCard;\nupdateScoreboard();\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/2025-03-20/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 5. Maximum allowed is 2.","line":11,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\n// @ts-nocheck\n\nexport function coerceToBoolean(input) {\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n  if (typeof input === 'string') {\n    const lower = input.toLowerCase();\n    if (lower === 'true') return '{ value: true }';\n    if (lower === 'false') return '{ value: false }';\n  }\n  return '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 6. Maximum allowed is 2.","line":91,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":112,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":138,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":145,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  // For recursive calls with empty segments, return early\n  if (!text || text.trim() === '') {\n    return '';\n  }\n  \n  // First, identify any bold patterns\n  const boldSegments = findBoldSegments(text);\n  \n  if (!boldSegments) {\n    // No bold pattern found, process italics only\n    return processAllItalicStyles(text);\n  }\n  \n  // Extract the segments and immediately process them for the return value\n  const { boldText, beforeText, afterText } = boldSegments;\n  \n  // Combine the processed sections with the unchanged bold text in a single return statement\n  return (beforeText ? processAllItalicStyles(beforeText) : '') + \n         boldText + \n         (afterText ? processTextPreservingBold(afterText) : '');\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/public/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":176,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":183,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":185,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":212,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/full-width.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const fullWidthElement = stryMutAct_9fa48(\"0\") ? `` : (stryCov_9fa48(\"0\"), `<div class=\"key full-width\">▄▄▄▄▄▄▄▄▄▄</div><div class=\"value full-width\">▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄</div>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":7,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":16,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":16,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":26,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":35,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":36,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":36,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":41,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":50,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":50,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'createParagraphs' has a complexity of 10. Maximum allowed is 2.","line":53,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":74,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":55,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":55,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1624,1624],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":60,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":60,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1829,1829],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":67,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":67,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2185,2185],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlockquote' has a complexity of 3. Maximum allowed is 2.","line":81,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":89,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":83,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":83,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2571,2571],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":135,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":135,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5326,5326],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'joinClasses' has a complexity of 3. Maximum allowed is 2.","line":148,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":155,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":150,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":150,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5726,5726],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createValueDiv' has a complexity of 6. Maximum allowed is 2.","line":163,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":172,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":165,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":165,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6310,6310],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createParts' has a complexity of 3. Maximum allowed is 2.","line":180,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6936,6936],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":197,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":197,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7325,7325],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":212,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":212,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7667,7667],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":226,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":226,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7967,7967],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":240,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":240,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8306,8306],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createEmptyKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":258,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":265,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":260,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":260,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8821,8821],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":268,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":268,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9049,9049],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContent' has a complexity of 4. Maximum allowed is 2.","line":279,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":288,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":281,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":281,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9308,9308],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":297,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":297,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9868,9868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":310,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":310,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10140,10140],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContent' has a complexity of 3. Maximum allowed is 2.","line":325,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":334,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":327,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":327,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10702,10702],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":342,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":342,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11157,11157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivOpen' has a complexity of 3. Maximum allowed is 2.","line":355,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":363,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":357,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":357,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11496,11496],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createHeaderContentArray' has a complexity of 5. Maximum allowed is 2.","line":368,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":375,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":370,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":370,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11830,11830],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageHeader' has a complexity of 3. Maximum allowed is 2.","line":380,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":389,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":382,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":382,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12286,12286],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContainerDivClose' has a complexity of 3. Maximum allowed is 2.","line":394,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":401,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":396,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":396,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12668,12668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBodyClose' has a complexity of 3. Maximum allowed is 2.","line":406,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":413,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":408,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":408,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12892,12892],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createFooterContentArray' has a complexity of 4. Maximum allowed is 2.","line":418,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":425,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":420,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":420,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13143,13143],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createPageFooter' has a complexity of 3. Maximum allowed is 2.","line":430,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":439,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":432,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":432,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13566,13566],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":446,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":446,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13951,13951],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":458,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":458,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14157,14157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processPostsToHTML' has a complexity of 3. Maximum allowed is 2.","line":468,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":475,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":470,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":470,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14347,14347],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":482,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":482,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14668,14668],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIdAttributeIfNeeded' has a complexity of 9. Maximum allowed is 2.","line":492,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":507,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":494,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":494,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14883,14883],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":499,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":499,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15123,15123],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 9. Maximum allowed is 2.","line":512,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":523,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":514,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":514,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15521,15521],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatArticleContent' has a complexity of 3. Maximum allowed is 2.","line":528,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":535,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":530,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":530,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16377,16377],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":542,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":542,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16635,16635],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getContentArray' has a complexity of 8. Maximum allowed is 2.","line":555,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":562,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":557,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":557,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17065,17065],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isFirstContentItem' has a complexity of 5. Maximum allowed is 2.","line":567,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":574,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":569,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":569,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17503,17503],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":581,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":581,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17861,17861],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 15. Maximum allowed is 2.","line":596,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":606,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":598,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":598,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[18368,18368],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 19. Maximum allowed is 2.","line":614,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":641,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":616,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":616,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19371,19371],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":625,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":625,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[19756,19756],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":633,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":633,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20307,20307],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createContentSectionItem' has a complexity of 5. Maximum allowed is 2.","line":649,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":660,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":651,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":651,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[20868,20868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":667,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":667,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21428,21428],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":681,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":681,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[21770,21770],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTitleValue' has a complexity of 5. Maximum allowed is 2.","line":694,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":703,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":696,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":696,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22165,22165],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTitleSection' has a complexity of 3. Maximum allowed is 2.","line":708,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":718,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":710,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":710,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[22684,22684],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateDateSection' has a complexity of 10. Maximum allowed is 2.","line":723,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":740,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":725,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":725,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23133,23133],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":730,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":730,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[23405,23405],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateTagsSection' has a complexity of 11. Maximum allowed is 2.","line":747,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":773,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":749,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":749,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24094,24094],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":754,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":754,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24352,24352],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":761,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":769,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":763,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":763,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[24702,24702],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasMediaType' has a complexity of 4. Maximum allowed is 2.","line":778,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":785,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":780,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":780,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25321,25321],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 17. Maximum allowed is 2.","line":792,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":799,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":794,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":794,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[25745,25745],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasTags' has a complexity of 10. Maximum allowed is 2.","line":806,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":813,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":808,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":808,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[26796,26796],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'isValidMediaType' has a complexity of 10. Maximum allowed is 2.","line":818,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":825,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":820,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":820,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[27418,27418],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'shouldDisplayMedia' has a complexity of 7. Maximum allowed is 2.","line":830,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":837,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":832,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":832,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28012,28012],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createMediaKeyDiv' has a complexity of 3. Maximum allowed is 2.","line":842,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":850,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":844,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":844,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28458,28458],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatSection' has a complexity of 3. Maximum allowed is 2.","line":858,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":865,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":860,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":860,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[28921,28921],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaContent' has a complexity of 9. Maximum allowed is 2.","line":870,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":882,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":872,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":872,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29198,29198],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":889,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":889,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[29970,29970],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 8. Maximum allowed is 2.","line":892,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":909,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":894,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":894,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30084,30084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":899,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":899,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30406,30406],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationImage' has a complexity of 9. Maximum allowed is 2.","line":916,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":927,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":918,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":918,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[30885,30885],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createIllustrationContent' has a complexity of 3. Maximum allowed is 2.","line":932,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":940,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":934,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":934,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31664,31664],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioSource' has a complexity of 4. Maximum allowed is 2.","line":945,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":953,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":947,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":947,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[31983,31983],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createAudioContent' has a complexity of 3. Maximum allowed is 2.","line":958,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":966,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":960,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":960,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32357,32357],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeIframe' has a complexity of 3. Maximum allowed is 2.","line":971,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":981,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":973,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":973,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[32704,32704],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createYouTubeContent' has a complexity of 3. Maximum allowed is 2.","line":986,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":994,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":988,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":988,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[33399,33399],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateMediaSections' has a complexity of 3. Maximum allowed is 2.","line":1009,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1017,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1011,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1011,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[34495,34495],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'escapeRelatedLinkFields' has a complexity of 9. Maximum allowed is 2.","line":1025,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1043,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1027,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1027,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35106,35106],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":1031,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":1039,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1033,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1033,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[35630,35630],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatTitleByType' has a complexity of 13. Maximum allowed is 2.","line":1044,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1057,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1046,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1046,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[36022,36022],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'formatBaseLink' has a complexity of 3. Maximum allowed is 2.","line":1058,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1066,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1060,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1060,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37134,37134],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 25. Maximum allowed is 2.","line":1067,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1075,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1069,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1069,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[37475,37475],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1078,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1078,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[38731,38731],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateRelatedLinksSection' has a complexity of 12. Maximum allowed is 2.","line":1099,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1119,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1101,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1101,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39264,39264],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1106,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1106,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[39538,39538],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'combineHTMLSections' has a complexity of 3. Maximum allowed is 2.","line":1124,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1131,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1126,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1126,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40480,40480],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 15. Maximum allowed is 2.","line":1138,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1145,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1140,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1140,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[40832,40832],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyInputSection' has a complexity of 4. Maximum allowed is 2.","line":1151,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1161,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1153,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1153,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41431,41431],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyButtonSection' has a complexity of 3. Maximum allowed is 2.","line":1167,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1177,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1169,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1169,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[41985,41985],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyOutputSection' has a complexity of 5. Maximum allowed is 2.","line":1183,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1193,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1185,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1185,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[42482,42482],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScript' has a complexity of 4. Maximum allowed is 2.","line":1200,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1208,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1202,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1202,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43144,43144],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyUISection' has a complexity of 8. Maximum allowed is 2.","line":1215,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1230,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1217,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1217,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43709,43709],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1222,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1222,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[43965,43965],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateToyScriptSection' has a complexity of 8. Maximum allowed is 2.","line":1237,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1252,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1239,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1239,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44473,44473],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1244,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1244,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[44729,44729],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getArticleSections' has a complexity of 3. Maximum allowed is 2.","line":1259,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1272,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1261,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1261,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45144,45144],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1279,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1279,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[45837,45837],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBlogContentArray' has a complexity of 3. Maximum allowed is 2.","line":1289,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1297,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1291,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1291,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46084,46084],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogHtmlContent' has a complexity of 3. Maximum allowed is 2.","line":1306,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1314,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1308,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1308,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[46647,46647],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1323,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1323,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47100,47100],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1339,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1339,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47543,47543],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1348,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1348,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[47786,47786],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getBlogGenerationArgs' has a complexity of 3. Maximum allowed is 2.","line":1368,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":1385,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1370,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1370,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48484,48484],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":1388,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":1388,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[48850,48850],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":100,"fatalErrorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nfunction createParagraphs(content) {\n  if (stryMutAct_9fa48(\"1\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"1\");\n    if (stryMutAct_9fa48(\"3\") ? false : stryMutAct_9fa48(\"2\") ? true : (stryCov_9fa48(\"2\", \"3\"), Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"4\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"4\");\n        return content.map(stryMutAct_9fa48(\"5\") ? () => undefined : (stryCov_9fa48(\"5\"), para => stryMutAct_9fa48(\"6\") ? `` : (stryCov_9fa48(\"6\"), `<p>${para}</p>`))).join(stryMutAct_9fa48(\"7\") ? \"Stryker was here!\" : (stryCov_9fa48(\"7\"), ''));\n      }\n    } else {\n      if (stryMutAct_9fa48(\"8\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"8\");\n        return stryMutAct_9fa48(\"9\") ? `` : (stryCov_9fa48(\"9\"), `<p>${content}</p>`);\n      }\n    }\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  if (stryMutAct_9fa48(\"10\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"10\");\n    const paragraphs = createParagraphs(content);\n    return stryMutAct_9fa48(\"11\") ? `` : (stryCov_9fa48(\"11\"), `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`);\n  }\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport { createTag, createAttrPair, escapeHtml, wrapHtml, join, ATTR_NAME } from './html.js';\n\n// CSS class names\nconst CLASS = stryMutAct_9fa48(\"12\") ? {} : (stryCov_9fa48(\"12\"), {\n  KEY: stryMutAct_9fa48(\"13\") ? \"\" : (stryCov_9fa48(\"13\"), 'key'),\n  VALUE: stryMutAct_9fa48(\"14\") ? \"\" : (stryCov_9fa48(\"14\"), 'value'),\n  ENTRY: stryMutAct_9fa48(\"15\") ? \"\" : (stryCov_9fa48(\"15\"), 'entry'),\n  ARTICLE_TITLE: stryMutAct_9fa48(\"16\") ? \"\" : (stryCov_9fa48(\"16\"), 'article-title'),\n  METADATA: stryMutAct_9fa48(\"17\") ? \"\" : (stryCov_9fa48(\"17\"), 'metadata'),\n  FOOTER: stryMutAct_9fa48(\"18\") ? \"\" : (stryCov_9fa48(\"18\"), 'footer'),\n  WARNING: stryMutAct_9fa48(\"19\") ? \"\" : (stryCov_9fa48(\"19\"), 'warning'),\n  MEDIA: stryMutAct_9fa48(\"20\") ? \"\" : (stryCov_9fa48(\"20\"), 'media'),\n  FULL_WIDTH: stryMutAct_9fa48(\"21\") ? \"\" : (stryCov_9fa48(\"21\"), 'full-width')\n});\nconst BLOCKQUOTE_CORNERS = stryMutAct_9fa48(\"22\") ? `` : (stryCov_9fa48(\"22\"), `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`);\n\n// HTML tag names\nconst DIV_TAG_NAME = stryMutAct_9fa48(\"23\") ? \"\" : (stryCov_9fa48(\"23\"), 'div');\nconst ARTICLE_TAG_NAME = stryMutAct_9fa48(\"24\") ? \"\" : (stryCov_9fa48(\"24\"), 'article');\n\n// Date formatting constants\nconst DATE_LOCALE = stryMutAct_9fa48(\"25\") ? \"\" : (stryCov_9fa48(\"25\"), 'en-GB');\nconst DATE_FORMAT_OPTIONS = stryMutAct_9fa48(\"26\") ? {} : (stryCov_9fa48(\"26\"), {\n  day: stryMutAct_9fa48(\"27\") ? \"\" : (stryCov_9fa48(\"27\"), 'numeric'),\n  month: stryMutAct_9fa48(\"28\") ? \"\" : (stryCov_9fa48(\"28\"), 'short'),\n  year: stryMutAct_9fa48(\"29\") ? \"\" : (stryCov_9fa48(\"29\"), 'numeric')\n});\n\n// Container ID\nconst CONTAINER_ID = stryMutAct_9fa48(\"30\") ? \"\" : (stryCov_9fa48(\"30\"), 'container');\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  if (stryMutAct_9fa48(\"31\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"31\");\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n    return createTag(DIV_TAG_NAME, classAttr, content);\n  }\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  if (stryMutAct_9fa48(\"32\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"32\");\n    return classes.join(stryMutAct_9fa48(\"33\") ? \"\" : (stryCov_9fa48(\"33\"), ' '));\n  }\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = stryMutAct_9fa48(\"34\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"34\"), [])) {\n  if (stryMutAct_9fa48(\"35\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"35\");\n    const classes = stryMutAct_9fa48(\"36\") ? [CLASS.VALUE, ...additionalClasses] : (stryCov_9fa48(\"36\"), (stryMutAct_9fa48(\"37\") ? [] : (stryCov_9fa48(\"37\"), [CLASS.VALUE, ...additionalClasses])).filter(Boolean));\n    const joinedClasses = joinClasses(classes);\n    return createDiv(joinedClasses, content);\n  }\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  if (stryMutAct_9fa48(\"38\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"38\");\n    return stryMutAct_9fa48(\"39\") ? [] : (stryCov_9fa48(\"39\"), [first, second]);\n  }\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  if (stryMutAct_9fa48(\"40\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"40\");\n    const parts = createParts(first, second);\n    return join(parts);\n  }\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  if (stryMutAct_9fa48(\"41\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"41\");\n    return new Date(dateString);\n  }\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  if (stryMutAct_9fa48(\"42\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"42\");\n    return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n  }\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  if (stryMutAct_9fa48(\"43\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"43\");\n    const date = createDateFromString(dateString);\n    return formatDateWithOptions(date);\n  }\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = stryMutAct_9fa48(\"44\") ? `` : (stryCov_9fa48(\"44\"), `Software developer and philosopher in Berlin`);\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  if (stryMutAct_9fa48(\"45\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"45\");\n    return createDiv(CLASS.KEY, stryMutAct_9fa48(\"46\") ? \"Stryker was here!\" : (stryCov_9fa48(\"46\"), ''));\n  }\n}\nfunction prefixWithEmptyKey(valueDiv) {\n  if (stryMutAct_9fa48(\"47\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"47\");\n    const emptyKeyDiv = createEmptyKeyDiv();\n    return createPair(emptyKeyDiv, valueDiv);\n  }\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  if (stryMutAct_9fa48(\"48\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"48\");\n    const valueDivs = stryMutAct_9fa48(\"49\") ? [] : (stryCov_9fa48(\"49\"), [createValueDiv(HEADER_BANNER), createValueDiv(METADATA_TEXT, stryMutAct_9fa48(\"50\") ? [] : (stryCov_9fa48(\"50\"), [CLASS.METADATA]))]);\n    const parts = valueDivs.map(prefixWithEmptyKey);\n    return join(parts);\n  }\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  if (stryMutAct_9fa48(\"51\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"51\");\n    return createDiv(CLASS.ENTRY, content);\n  }\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  if (stryMutAct_9fa48(\"52\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"52\");\n    const headerContent = createHeaderContent();\n    return createSection(headerContent);\n  }\n}\n\n// Footer components\nconst WARNING_MESSAGE = stryMutAct_9fa48(\"53\") ? \"\" : (stryCov_9fa48(\"53\"), 'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.');\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  if (stryMutAct_9fa48(\"54\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"54\");\n    const classes = joinClasses(stryMutAct_9fa48(\"55\") ? [] : (stryCov_9fa48(\"55\"), [CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]));\n    const footerDiv = createDiv(classes, WARNING_MESSAGE);\n    return prefixWithEmptyKey(footerDiv);\n  }\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  if (stryMutAct_9fa48(\"56\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"56\");\n    const footerContent = createFooterContent();\n    return createSection(footerContent);\n  }\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  if (stryMutAct_9fa48(\"57\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"57\");\n    const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n    return stryMutAct_9fa48(\"58\") ? `` : (stryCov_9fa48(\"58\"), `<${DIV_TAG_NAME} ${idAttr}>`);\n  }\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  if (stryMutAct_9fa48(\"59\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"59\");\n    return stryMutAct_9fa48(\"60\") ? [] : (stryCov_9fa48(\"60\"), [headElement, stryMutAct_9fa48(\"61\") ? \"\" : (stryCov_9fa48(\"61\"), '<body>'), createContainerDivOpen(), stryMutAct_9fa48(\"62\") ? \"\" : (stryCov_9fa48(\"62\"), '<!-- Header -->'), headerElement]);\n  }\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  if (stryMutAct_9fa48(\"63\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"63\");\n    const headerElement = createHeaderSection();\n    const contentArray = createHeaderContentArray(headerElement);\n    return contentArray.join(stryMutAct_9fa48(\"64\") ? \"Stryker was here!\" : (stryCov_9fa48(\"64\"), ''));\n  }\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  if (stryMutAct_9fa48(\"65\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"65\");\n    return stryMutAct_9fa48(\"66\") ? \"\" : (stryCov_9fa48(\"66\"), '</div>');\n  }\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  if (stryMutAct_9fa48(\"67\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"67\");\n    return stryMutAct_9fa48(\"68\") ? \"\" : (stryCov_9fa48(\"68\"), '</body>');\n  }\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  if (stryMutAct_9fa48(\"69\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"69\");\n    return stryMutAct_9fa48(\"70\") ? [] : (stryCov_9fa48(\"70\"), [stryMutAct_9fa48(\"71\") ? \"Stryker was here!\" : (stryCov_9fa48(\"71\"), ''), footerElement, createContainerDivClose(), scriptTag, createBodyClose()]);\n  }\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  if (stryMutAct_9fa48(\"72\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"72\");\n    const footerElement = createFooterSection();\n    const contentArray = createFooterContentArray(footerElement);\n    return contentArray.join(stryMutAct_9fa48(\"73\") ? \"Stryker was here!\" : (stryCov_9fa48(\"73\"), ''));\n  }\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  if (stryMutAct_9fa48(\"74\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"74\");\n    return generateArticle(post);\n  }\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  if (stryMutAct_9fa48(\"75\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"75\");\n    return articleHTML;\n  }\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  if (stryMutAct_9fa48(\"76\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"76\");\n    return posts.map(convertPostToArticleHTML).map(formatArticleHTML).join(stryMutAct_9fa48(\"77\") ? \"Stryker was here!\" : (stryCov_9fa48(\"77\"), ''));\n  }\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  if (stryMutAct_9fa48(\"78\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"78\");\n    return processPostsToHTML(posts);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (stryMutAct_9fa48(\"79\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"79\");\n    if (stryMutAct_9fa48(\"82\") ? false : stryMutAct_9fa48(\"81\") ? true : stryMutAct_9fa48(\"80\") ? post.key : (stryCov_9fa48(\"80\", \"81\", \"82\"), !post.key)) {\n      if (stryMutAct_9fa48(\"83\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"83\");\n        return stryMutAct_9fa48(\"84\") ? \"Stryker was here!\" : (stryCov_9fa48(\"84\"), '');\n      }\n    }\n    return (stryMutAct_9fa48(\"85\") ? \"\" : (stryCov_9fa48(\"85\"), ' ')) + createAttrPair(ATTR_NAME.ID, post.key);\n  }\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  if (stryMutAct_9fa48(\"86\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"86\");\n    const tagClasses = hasTags(post) ? post.tags.map(stryMutAct_9fa48(\"87\") ? () => undefined : (stryCov_9fa48(\"87\"), tag => stryMutAct_9fa48(\"88\") ? `` : (stryCov_9fa48(\"88\"), `tag-${tag}`))).join(stryMutAct_9fa48(\"89\") ? \"\" : (stryCov_9fa48(\"89\"), ' ')) : stryMutAct_9fa48(\"90\") ? \"Stryker was here!\" : (stryCov_9fa48(\"90\"), '');\n    const classValue = tagClasses ? stryMutAct_9fa48(\"91\") ? `` : (stryCov_9fa48(\"91\"), `${CLASS.ENTRY} ${tagClasses}`) : CLASS.ENTRY;\n    const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n    const idAttr = createIdAttributeIfNeeded(post);\n    return stryMutAct_9fa48(\"92\") ? `` : (stryCov_9fa48(\"92\"), `${classAttr}${idAttr}`);\n  }\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  if (stryMutAct_9fa48(\"93\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"93\");\n    return stryMutAct_9fa48(\"94\") ? `` : (stryCov_9fa48(\"94\"), `${fullWidthElement}${content}`);\n  }\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  if (stryMutAct_9fa48(\"95\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"95\");\n    const content = generateArticleContent(post);\n    const formattedContent = formatArticleContent(content);\n    const attributes = createArticleAttributes(post);\n    return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n  }\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  if (stryMutAct_9fa48(\"96\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"96\");\n    return stryMutAct_9fa48(\"99\") ? post.content && [] : stryMutAct_9fa48(\"98\") ? false : stryMutAct_9fa48(\"97\") ? true : (stryCov_9fa48(\"97\", \"98\", \"99\"), post.content || (stryMutAct_9fa48(\"100\") ? [\"Stryker was here\"] : (stryCov_9fa48(\"100\"), [])));\n  }\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  if (stryMutAct_9fa48(\"101\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"101\");\n    return stryMutAct_9fa48(\"104\") ? index !== 0 : stryMutAct_9fa48(\"103\") ? false : stryMutAct_9fa48(\"102\") ? true : (stryCov_9fa48(\"102\", \"103\", \"104\"), index === 0);\n  }\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  if (stryMutAct_9fa48(\"105\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"105\");\n    const isFirst = isFirstContentItem(index);\n    return createContentSectionItem(text, isFirst);\n  }\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  if (stryMutAct_9fa48(\"106\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"106\");\n    return (stryMutAct_9fa48(\"109\") ? typeof content === 'object' || content !== null : stryMutAct_9fa48(\"108\") ? false : stryMutAct_9fa48(\"107\") ? true : (stryCov_9fa48(\"107\", \"108\", \"109\"), (stryMutAct_9fa48(\"111\") ? typeof content !== 'object' : stryMutAct_9fa48(\"110\") ? true : (stryCov_9fa48(\"110\", \"111\"), typeof content === (stryMutAct_9fa48(\"112\") ? \"\" : (stryCov_9fa48(\"112\"), 'object')))) && (stryMutAct_9fa48(\"114\") ? content === null : stryMutAct_9fa48(\"113\") ? true : (stryCov_9fa48(\"113\", \"114\"), content !== null)))) ? content : stryMutAct_9fa48(\"115\") ? {} : (stryCov_9fa48(\"115\"), {\n      type: stryMutAct_9fa48(\"116\") ? \"\" : (stryCov_9fa48(\"116\"), 'text'),\n      content\n    });\n  }\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = stryMutAct_9fa48(\"117\") ? {} : (stryCov_9fa48(\"117\"), {\n  quote: createBlockquote\n});\nfunction renderValueDiv(normalizedContent) {\n  if (stryMutAct_9fa48(\"118\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"118\");\n    const {\n      type,\n      content\n    } = normalizedContent;\n    if (stryMutAct_9fa48(\"121\") ? type !== 'quote' : stryMutAct_9fa48(\"120\") ? false : stryMutAct_9fa48(\"119\") ? true : (stryCov_9fa48(\"119\", \"120\", \"121\"), type === (stryMutAct_9fa48(\"122\") ? \"\" : (stryCov_9fa48(\"122\"), 'quote')))) {\n      if (stryMutAct_9fa48(\"123\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"123\");\n        return CONTENT_RENDERERS.quote(content);\n      }\n    }\n    if (stryMutAct_9fa48(\"126\") ? type === 'text' || Array.isArray(content) : stryMutAct_9fa48(\"125\") ? false : stryMutAct_9fa48(\"124\") ? true : (stryCov_9fa48(\"124\", \"125\", \"126\"), (stryMutAct_9fa48(\"128\") ? type !== 'text' : stryMutAct_9fa48(\"127\") ? true : (stryCov_9fa48(\"127\", \"128\"), type === (stryMutAct_9fa48(\"129\") ? \"\" : (stryCov_9fa48(\"129\"), 'text')))) && Array.isArray(content))) {\n      if (stryMutAct_9fa48(\"130\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"130\");\n        return createBlockquote(content);\n      }\n    }\n    return stryMutAct_9fa48(\"131\") ? `` : (stryCov_9fa48(\"131\"), `<p class=\"${CLASS.VALUE}\">${content}</p>`);\n  }\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  if (stryMutAct_9fa48(\"132\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"132\");\n    const normalizedContent = normalizeContentItem(content);\n    const key = isFirst ? stryMutAct_9fa48(\"133\") ? \"\" : (stryCov_9fa48(\"133\"), 'text') : stryMutAct_9fa48(\"134\") ? \"Stryker was here!\" : (stryCov_9fa48(\"134\"), '');\n    const keyDiv = createDiv(CLASS.KEY, key);\n    const valueDiv = renderValueDiv(normalizedContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  if (stryMutAct_9fa48(\"135\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"135\");\n    const contentArray = getContentArray(post);\n    const contentItems = contentArray.map(createContentItemWithIndex);\n    return combineHTMLSections(...contentItems);\n  }\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  if (stryMutAct_9fa48(\"136\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"136\");\n    const titleSection = generateTitleSection(post);\n    const dateSection = generateDateSection(post);\n    const tagsSection = generateTagsSection(post);\n    return combineHTMLSections(titleSection, dateSection, tagsSection);\n  }\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  if (stryMutAct_9fa48(\"137\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"137\");\n    const titleLink = stryMutAct_9fa48(\"138\") ? `` : (stryCov_9fa48(\"138\"), `<a href=\"#${post.key}\">${post.title}</a>`);\n    const titleHeader = stryMutAct_9fa48(\"139\") ? `` : (stryCov_9fa48(\"139\"), `<h2>${titleLink}</h2>`);\n    return stryMutAct_9fa48(\"140\") ? `` : (stryCov_9fa48(\"140\"), `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`);\n  }\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  if (stryMutAct_9fa48(\"141\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"141\");\n    const titleClasses = joinClasses(stryMutAct_9fa48(\"142\") ? [] : (stryCov_9fa48(\"142\"), [CLASS.KEY, CLASS.ARTICLE_TITLE]));\n    const titleKey = createDiv(titleClasses, post.key);\n    const titleValue = createTitleValue(post);\n    return createPair(titleKey, titleValue);\n  }\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (stryMutAct_9fa48(\"143\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"143\");\n    if (stryMutAct_9fa48(\"146\") ? false : stryMutAct_9fa48(\"145\") ? true : stryMutAct_9fa48(\"144\") ? post.publicationDate : (stryCov_9fa48(\"144\", \"145\", \"146\"), !post.publicationDate)) {\n      if (stryMutAct_9fa48(\"147\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"147\");\n        return stryMutAct_9fa48(\"148\") ? \"Stryker was here!\" : (stryCov_9fa48(\"148\"), '');\n      }\n    }\n    const dateKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"149\") ? \"\" : (stryCov_9fa48(\"149\"), 'pubAt'));\n    const dateValue = stryMutAct_9fa48(\"150\") ? `` : (stryCov_9fa48(\"150\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`);\n    return createPair(dateKey, dateValue);\n  }\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (stryMutAct_9fa48(\"151\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"151\");\n    if (stryMutAct_9fa48(\"154\") ? false : stryMutAct_9fa48(\"153\") ? true : stryMutAct_9fa48(\"152\") ? hasTags(post) : (stryCov_9fa48(\"152\", \"153\", \"154\"), !hasTags(post))) {\n      if (stryMutAct_9fa48(\"155\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"155\");\n        return stryMutAct_9fa48(\"156\") ? \"Stryker was here!\" : (stryCov_9fa48(\"156\"), '');\n      }\n    }\n    const tagsKey = createDiv(CLASS.KEY, stryMutAct_9fa48(\"157\") ? \"\" : (stryCov_9fa48(\"157\"), 'tags'));\n    const tagsContent = post.tags.map(tag => {\n      if (stryMutAct_9fa48(\"158\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"158\");\n        const escapedTag = escapeHtml(tag);\n        return stryMutAct_9fa48(\"159\") ? `` : (stryCov_9fa48(\"159\"), `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`);\n      }\n    }).join(stryMutAct_9fa48(\"160\") ? \"\" : (stryCov_9fa48(\"160\"), ', '));\n    const tagsValue = stryMutAct_9fa48(\"161\") ? `` : (stryCov_9fa48(\"161\"), `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`);\n    return createPair(tagsKey, tagsValue);\n  }\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"162\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"162\");\n    return stryMutAct_9fa48(\"163\") ? !post[mediaType] : (stryCov_9fa48(\"163\"), !(stryMutAct_9fa48(\"164\") ? post[mediaType] : (stryCov_9fa48(\"164\"), !post[mediaType])));\n  }\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  if (stryMutAct_9fa48(\"165\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"165\");\n    return stryMutAct_9fa48(\"168\") ? post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) || post.relatedLinks.length > 0 : stryMutAct_9fa48(\"167\") ? false : stryMutAct_9fa48(\"166\") ? true : (stryCov_9fa48(\"166\", \"167\", \"168\"), (stryMutAct_9fa48(\"170\") ? post.relatedLinks !== undefined || Array.isArray(post.relatedLinks) : stryMutAct_9fa48(\"169\") ? true : (stryCov_9fa48(\"169\", \"170\"), (stryMutAct_9fa48(\"172\") ? post.relatedLinks === undefined : stryMutAct_9fa48(\"171\") ? true : (stryCov_9fa48(\"171\", \"172\"), post.relatedLinks !== undefined)) && Array.isArray(post.relatedLinks))) && (stryMutAct_9fa48(\"175\") ? post.relatedLinks.length <= 0 : stryMutAct_9fa48(\"174\") ? post.relatedLinks.length >= 0 : stryMutAct_9fa48(\"173\") ? true : (stryCov_9fa48(\"173\", \"174\", \"175\"), post.relatedLinks.length > 0)));\n  }\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  if (stryMutAct_9fa48(\"176\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"176\");\n    return stryMutAct_9fa48(\"179\") ? Array.isArray(post.tags) || post.tags.length > 0 : stryMutAct_9fa48(\"178\") ? false : stryMutAct_9fa48(\"177\") ? true : (stryCov_9fa48(\"177\", \"178\", \"179\"), Array.isArray(post.tags) && (stryMutAct_9fa48(\"182\") ? post.tags.length <= 0 : stryMutAct_9fa48(\"181\") ? post.tags.length >= 0 : stryMutAct_9fa48(\"180\") ? true : (stryCov_9fa48(\"180\", \"181\", \"182\"), post.tags.length > 0)));\n  }\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  if (stryMutAct_9fa48(\"183\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"183\");\n    return stryMutAct_9fa48(\"186\") ? mediaType === 'youtube' && post.publicationDate : stryMutAct_9fa48(\"185\") ? false : stryMutAct_9fa48(\"184\") ? true : (stryCov_9fa48(\"184\", \"185\", \"186\"), (stryMutAct_9fa48(\"188\") ? mediaType !== 'youtube' : stryMutAct_9fa48(\"187\") ? false : (stryCov_9fa48(\"187\", \"188\"), mediaType === (stryMutAct_9fa48(\"189\") ? \"\" : (stryCov_9fa48(\"189\"), 'youtube')))) || post.publicationDate);\n  }\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  if (stryMutAct_9fa48(\"190\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"190\");\n    return stryMutAct_9fa48(\"193\") ? hasMediaType(post, mediaType) || isValidMediaType(post, mediaType) : stryMutAct_9fa48(\"192\") ? false : stryMutAct_9fa48(\"191\") ? true : (stryCov_9fa48(\"191\", \"192\", \"193\"), hasMediaType(post, mediaType) && isValidMediaType(post, mediaType));\n  }\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  if (stryMutAct_9fa48(\"194\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"194\");\n    const classes = stryMutAct_9fa48(\"195\") ? `` : (stryCov_9fa48(\"195\"), `${CLASS.KEY} ${CLASS.MEDIA}`);\n    return createDiv(classes, label);\n  }\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  if (stryMutAct_9fa48(\"196\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"196\");\n    return stryMutAct_9fa48(\"197\") ? `` : (stryCov_9fa48(\"197\"), `${keyDiv}${valueDiv}`);\n  }\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  if (stryMutAct_9fa48(\"198\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"198\");\n    const generators = stryMutAct_9fa48(\"199\") ? {} : (stryCov_9fa48(\"199\"), {\n      illustration: createIllustrationContent,\n      audio: createAudioContent,\n      youtube: createYouTubeContent\n    });\n    return (stryMutAct_9fa48(\"202\") ? generators[mediaType] && (() => '') : stryMutAct_9fa48(\"201\") ? false : stryMutAct_9fa48(\"200\") ? true : (stryCov_9fa48(\"200\", \"201\", \"202\"), generators[mediaType] || (stryMutAct_9fa48(\"203\") ? () => undefined : (stryCov_9fa48(\"203\"), () => stryMutAct_9fa48(\"204\") ? \"Stryker was here!\" : (stryCov_9fa48(\"204\"), '')))))(post);\n  }\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  if (stryMutAct_9fa48(\"205\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"205\");\n    return function (post) {\n      if (stryMutAct_9fa48(\"206\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"206\");\n        if (stryMutAct_9fa48(\"209\") ? false : stryMutAct_9fa48(\"208\") ? true : stryMutAct_9fa48(\"207\") ? shouldDisplayMedia(post, mediaType) : (stryCov_9fa48(\"207\", \"208\", \"209\"), !shouldDisplayMedia(post, mediaType))) {\n          if (stryMutAct_9fa48(\"210\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"210\");\n            return stryMutAct_9fa48(\"211\") ? \"Stryker was here!\" : (stryCov_9fa48(\"211\"), '');\n          }\n        }\n        const keyDiv = createMediaKeyDiv(label);\n        const valueDiv = generateMediaContent(post, mediaType);\n        return formatSection(keyDiv, valueDiv);\n      }\n    };\n  }\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  if (stryMutAct_9fa48(\"212\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"212\");\n    // Use fileName if provided, otherwise fall back to publicationDate\n    const fileName = stryMutAct_9fa48(\"215\") ? post.illustration.fileName && post.publicationDate : stryMutAct_9fa48(\"214\") ? false : stryMutAct_9fa48(\"213\") ? true : (stryCov_9fa48(\"213\", \"214\", \"215\"), post.illustration.fileName || post.publicationDate);\n    const src = stryMutAct_9fa48(\"216\") ? `` : (stryCov_9fa48(\"216\"), `${fileName}.${post.illustration.fileType}`);\n    const altText = post.illustration.altText;\n    return stryMutAct_9fa48(\"217\") ? `` : (stryCov_9fa48(\"217\"), `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`);\n  }\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  if (stryMutAct_9fa48(\"218\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"218\");\n    const image = createIllustrationImage(post);\n    return stryMutAct_9fa48(\"219\") ? `` : (stryCov_9fa48(\"219\"), `<div class=\"${CLASS.VALUE}\">${image}</div>`);\n  }\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  if (stryMutAct_9fa48(\"220\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"220\");\n    const audioSrc = stryMutAct_9fa48(\"221\") ? `` : (stryCov_9fa48(\"221\"), `${post.publicationDate}.${post.audio.fileType}`);\n    return stryMutAct_9fa48(\"222\") ? `` : (stryCov_9fa48(\"222\"), `<source src=\"${audioSrc}\">`);\n  }\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  if (stryMutAct_9fa48(\"223\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"223\");\n    const source = createAudioSource(post);\n    return stryMutAct_9fa48(\"224\") ? `` : (stryCov_9fa48(\"224\"), `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`);\n  }\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  if (stryMutAct_9fa48(\"225\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"225\");\n    const youtubeId = post.youtube.id;\n    const timestamp = post.youtube.timestamp;\n    const title = escapeHtml(post.youtube.title);\n    return stryMutAct_9fa48(\"226\") ? `` : (stryCov_9fa48(\"226\"), `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`);\n  }\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  if (stryMutAct_9fa48(\"227\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"227\");\n    const iframe = createYouTubeIframe(post);\n    return stryMutAct_9fa48(\"228\") ? `` : (stryCov_9fa48(\"228\"), `<p class=\"${CLASS.VALUE}\">${iframe}</p>`);\n  }\n}\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = stryMutAct_9fa48(\"229\") ? {} : (stryCov_9fa48(\"229\"), {\n  illustration: createMediaSectionGenerator(stryMutAct_9fa48(\"230\") ? \"\" : (stryCov_9fa48(\"230\"), 'illustration'), stryMutAct_9fa48(\"231\") ? \"\" : (stryCov_9fa48(\"231\"), 'illus')),\n  audio: createMediaSectionGenerator(stryMutAct_9fa48(\"232\") ? \"\" : (stryCov_9fa48(\"232\"), 'audio'), stryMutAct_9fa48(\"233\") ? \"\" : (stryCov_9fa48(\"233\"), 'audio')),\n  youtube: createMediaSectionGenerator(stryMutAct_9fa48(\"234\") ? \"\" : (stryCov_9fa48(\"234\"), 'youtube'), stryMutAct_9fa48(\"235\") ? \"\" : (stryCov_9fa48(\"235\"), 'video'))\n});\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  if (stryMutAct_9fa48(\"236\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"236\");\n    const sections = Object.values(MEDIA_SECTIONS).map(stryMutAct_9fa48(\"237\") ? () => undefined : (stryCov_9fa48(\"237\"), generator => generator(post)));\n    return combineHTMLSections(...sections);\n  }\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = stryMutAct_9fa48(\"238\") ? \"\" : (stryCov_9fa48(\"238\"), 'target=\"_blank\" rel=\"noopener\"');\nfunction escapeRelatedLinkFields(link) {\n  if (stryMutAct_9fa48(\"239\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"239\");\n    const fields = stryMutAct_9fa48(\"240\") ? [] : (stryCov_9fa48(\"240\"), [stryMutAct_9fa48(\"241\") ? \"\" : (stryCov_9fa48(\"241\"), 'url'), stryMutAct_9fa48(\"242\") ? \"\" : (stryCov_9fa48(\"242\"), 'title'), stryMutAct_9fa48(\"243\") ? \"\" : (stryCov_9fa48(\"243\"), 'author'), stryMutAct_9fa48(\"244\") ? \"\" : (stryCov_9fa48(\"244\"), 'source'), stryMutAct_9fa48(\"245\") ? \"\" : (stryCov_9fa48(\"245\"), 'quote')]);\n    return fields.reduce((acc, field) => {\n      if (stryMutAct_9fa48(\"246\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"246\");\n        acc[field] = link[field] ? escapeHtml(link[field]) : stryMutAct_9fa48(\"247\") ? \"Stryker was here!\" : (stryCov_9fa48(\"247\"), '');\n        return acc;\n      }\n    }, stryMutAct_9fa48(\"248\") ? {} : (stryCov_9fa48(\"248\"), {\n      type: link.type\n    }));\n  }\n}\nfunction formatTitleByType(type, title) {\n  if (stryMutAct_9fa48(\"249\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"249\");\n    const formatters = stryMutAct_9fa48(\"250\") ? {} : (stryCov_9fa48(\"250\"), {\n      book: stryMutAct_9fa48(\"251\") ? () => undefined : (stryCov_9fa48(\"251\"), t => stryMutAct_9fa48(\"252\") ? `` : (stryCov_9fa48(\"252\"), `<em>_${t}_</em>`)),\n      microblog: stryMutAct_9fa48(\"253\") ? () => undefined : (stryCov_9fa48(\"253\"), t => stryMutAct_9fa48(\"254\") ? `` : (stryCov_9fa48(\"254\"), `\"${t}\"`)),\n      article: stryMutAct_9fa48(\"255\") ? () => undefined : (stryCov_9fa48(\"255\"), t => stryMutAct_9fa48(\"256\") ? `` : (stryCov_9fa48(\"256\"), `\"${t}\"`)),\n      report: stryMutAct_9fa48(\"257\") ? () => undefined : (stryCov_9fa48(\"257\"), t => stryMutAct_9fa48(\"258\") ? `` : (stryCov_9fa48(\"258\"), `\"${t}\"`))\n    });\n    return (stryMutAct_9fa48(\"261\") ? formatters[type] && (t => t) : stryMutAct_9fa48(\"260\") ? false : stryMutAct_9fa48(\"259\") ? true : (stryCov_9fa48(\"259\", \"260\", \"261\"), formatters[type] || (stryMutAct_9fa48(\"262\") ? () => undefined : (stryCov_9fa48(\"262\"), t => t))))(title);\n  }\n}\nfunction formatBaseLink(type, url, title) {\n  if (stryMutAct_9fa48(\"263\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"263\");\n    const formattedTitle = formatTitleByType(type, title);\n    return stryMutAct_9fa48(\"264\") ? `` : (stryCov_9fa48(\"264\"), `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`);\n  }\n}\nfunction composeLinkParts(baseLink, author, source, quote) {\n  if (stryMutAct_9fa48(\"265\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"265\");\n    const optionalParts = stryMutAct_9fa48(\"266\") ? [] : (stryCov_9fa48(\"266\"), [stryMutAct_9fa48(\"269\") ? author || ` by ${author}` : stryMutAct_9fa48(\"268\") ? false : stryMutAct_9fa48(\"267\") ? true : (stryCov_9fa48(\"267\", \"268\", \"269\"), author && (stryMutAct_9fa48(\"270\") ? `` : (stryCov_9fa48(\"270\"), ` by ${author}`))), stryMutAct_9fa48(\"273\") ? source || `, ${source}` : stryMutAct_9fa48(\"272\") ? false : stryMutAct_9fa48(\"271\") ? true : (stryCov_9fa48(\"271\", \"272\", \"273\"), source && (stryMutAct_9fa48(\"274\") ? `` : (stryCov_9fa48(\"274\"), `, ${source}`))), stryMutAct_9fa48(\"277\") ? quote || ` (\"${quote}\")` : stryMutAct_9fa48(\"276\") ? false : stryMutAct_9fa48(\"275\") ? true : (stryCov_9fa48(\"275\", \"276\", \"277\"), quote && (stryMutAct_9fa48(\"278\") ? `` : (stryCov_9fa48(\"278\"), ` (\"${quote}\")`)))]);\n    return stryMutAct_9fa48(\"279\") ? `` : (stryCov_9fa48(\"279\"), `<li>${(stryMutAct_9fa48(\"280\") ? [] : (stryCov_9fa48(\"280\"), [baseLink, ...(stryMutAct_9fa48(\"281\") ? optionalParts : (stryCov_9fa48(\"281\"), optionalParts.filter(Boolean)))])).join(stryMutAct_9fa48(\"282\") ? \"Stryker was here!\" : (stryCov_9fa48(\"282\"), ''))}</li>`);\n  }\n}\nfunction formatRelatedLink(link) {\n  if (stryMutAct_9fa48(\"283\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"283\");\n    const {\n      url,\n      title,\n      author,\n      source,\n      quote,\n      type\n    } = escapeRelatedLinkFields(link);\n    const baseLink = formatBaseLink(type, url, title);\n    return composeLinkParts(baseLink, author, source, quote);\n  }\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (stryMutAct_9fa48(\"284\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"284\");\n    if (stryMutAct_9fa48(\"287\") ? false : stryMutAct_9fa48(\"286\") ? true : stryMutAct_9fa48(\"285\") ? hasRelatedLinks(post) : (stryCov_9fa48(\"285\", \"286\", \"287\"), !hasRelatedLinks(post))) {\n      if (stryMutAct_9fa48(\"288\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"288\");\n        return stryMutAct_9fa48(\"289\") ? \"Stryker was here!\" : (stryCov_9fa48(\"289\"), '');\n      }\n    }\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"290\") ? \"\" : (stryCov_9fa48(\"290\"), 'links'));\n    // Join with an empty string to avoid spacing issues in the HTML output\n    const linksList = post.relatedLinks.map(stryMutAct_9fa48(\"291\") ? () => undefined : (stryCov_9fa48(\"291\"), link => formatRelatedLink(link))).join(stryMutAct_9fa48(\"292\") ? \"Stryker was here!\" : (stryCov_9fa48(\"292\"), ''));\n    const valueContent = stryMutAct_9fa48(\"293\") ? `` : (stryCov_9fa48(\"293\"), `<ul class=\"related-links\">${linksList}</ul>`);\n    const valueDiv = createDiv(CLASS.VALUE, valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  if (stryMutAct_9fa48(\"294\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"294\");\n    return sections.join(stryMutAct_9fa48(\"295\") ? \"Stryker was here!\" : (stryCov_9fa48(\"295\"), ''));\n  }\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  if (stryMutAct_9fa48(\"296\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"296\");\n    return stryMutAct_9fa48(\"299\") ? post?.toy?.modulePath || post.toy.functionName : stryMutAct_9fa48(\"298\") ? false : stryMutAct_9fa48(\"297\") ? true : (stryCov_9fa48(\"297\", \"298\", \"299\"), (stryMutAct_9fa48(\"301\") ? post.toy?.modulePath : stryMutAct_9fa48(\"300\") ? post?.toy.modulePath : (stryCov_9fa48(\"300\", \"301\"), post?.toy?.modulePath)) && post.toy.functionName);\n  }\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  if (stryMutAct_9fa48(\"302\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"302\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"303\") ? \"\" : (stryCov_9fa48(\"303\"), 'in'));\n    const valueContent = stryMutAct_9fa48(\"304\") ? \"\" : (stryCov_9fa48(\"304\"), '<form><input type=\"text\" disabled></form>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  if (stryMutAct_9fa48(\"305\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"305\");\n    const keyDiv = createEmptyKeyDiv();\n    const valueContent = stryMutAct_9fa48(\"306\") ? \"\" : (stryCov_9fa48(\"306\"), '<button type=\"submit\" disabled>Submit</button>');\n    const valueDiv = createValueDiv(valueContent);\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  if (stryMutAct_9fa48(\"307\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"307\");\n    const keyDiv = createDiv(CLASS.KEY, stryMutAct_9fa48(\"308\") ? \"\" : (stryCov_9fa48(\"308\"), 'out'));\n    const valueContent = stryMutAct_9fa48(\"309\") ? \"\" : (stryCov_9fa48(\"309\"), '<p class=\"output\">This toy requires Javascript to run.</p>');\n    const valueDiv = createValueDiv(valueContent, stryMutAct_9fa48(\"310\") ? [] : (stryCov_9fa48(\"310\"), [CLASS.WARNING]));\n    return formatSection(keyDiv, valueDiv);\n  }\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  if (stryMutAct_9fa48(\"311\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"311\");\n    const scriptContent = stryMutAct_9fa48(\"312\") ? `` : (stryCov_9fa48(\"312\"), `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`);\n    return stryMutAct_9fa48(\"313\") ? `` : (stryCov_9fa48(\"313\"), `<script type=\"module\">${scriptContent}</script>`);\n  }\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (stryMutAct_9fa48(\"314\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"314\");\n    if (stryMutAct_9fa48(\"317\") ? false : stryMutAct_9fa48(\"316\") ? true : stryMutAct_9fa48(\"315\") ? hasToy(post) : (stryCov_9fa48(\"315\", \"316\", \"317\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"318\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"318\");\n        return stryMutAct_9fa48(\"319\") ? \"Stryker was here!\" : (stryCov_9fa48(\"319\"), '');\n      }\n    }\n    return combineHTMLSections(generateToyInputSection(), generateToyButtonSection(), generateToyOutputSection());\n  }\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (stryMutAct_9fa48(\"320\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"320\");\n    if (stryMutAct_9fa48(\"323\") ? false : stryMutAct_9fa48(\"322\") ? true : stryMutAct_9fa48(\"321\") ? hasToy(post) : (stryCov_9fa48(\"321\", \"322\", \"323\"), !hasToy(post))) {\n      if (stryMutAct_9fa48(\"324\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"324\");\n        return stryMutAct_9fa48(\"325\") ? \"Stryker was here!\" : (stryCov_9fa48(\"325\"), '');\n      }\n    }\n    return generateToyScript(post);\n  }\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  if (stryMutAct_9fa48(\"326\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"326\");\n    const headerSection = generateHeaderSection(post);\n    const mediaSection = generateMediaSections(post);\n    const contentSection = generateContentSections(post);\n    const toyUISection = generateToyUISection(post);\n    const relatedLinksSection = generateRelatedLinksSection(post);\n    const toyScriptSection = generateToyScriptSection(post);\n    return stryMutAct_9fa48(\"327\") ? [] : (stryCov_9fa48(\"327\"), [headerSection, mediaSection, contentSection, toyUISection, relatedLinksSection, toyScriptSection]);\n  }\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  if (stryMutAct_9fa48(\"328\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"328\");\n    return combineHTMLSections(...getArticleSections(post));\n  }\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  if (stryMutAct_9fa48(\"329\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"329\");\n    // Remove the newline character between elements\n    return stryMutAct_9fa48(\"330\") ? [] : (stryCov_9fa48(\"330\"), [header, articles, footer]);\n  }\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  if (stryMutAct_9fa48(\"331\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"331\");\n    const contentArray = createBlogContentArray(header, articles, footer);\n    return contentArray.join(stryMutAct_9fa48(\"332\") ? \"Stryker was here!\" : (stryCov_9fa48(\"332\"), ''));\n  }\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  if (stryMutAct_9fa48(\"333\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"333\");\n    return generateArticles(blog.posts);\n  }\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  if (stryMutAct_9fa48(\"334\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"334\");\n    const articles = getArticles(blog);\n    return getBlogHtmlContent(header, articles, footer);\n  }\n}\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  if (stryMutAct_9fa48(\"335\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"335\");\n    const htmlContents = assembleBlogHTML(header, blog, footer);\n    return wrapHtml(htmlContents);\n  }\n}\nconst createBlogComponents = stryMutAct_9fa48(\"336\") ? () => undefined : (stryCov_9fa48(\"336\"), (() => {\n  const createBlogComponents = () => stryMutAct_9fa48(\"337\") ? {} : (stryCov_9fa48(\"337\"), {\n    header: createPageHeader(),\n    footer: createPageFooter(),\n    wrapFunc: wrapHtml\n  });\n  return createBlogComponents;\n})());\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  if (stryMutAct_9fa48(\"338\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"338\");\n    const components = createBlogComponents();\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = components;\n    return stryMutAct_9fa48(\"339\") ? {} : (stryCov_9fa48(\"339\"), {\n      header,\n      footer,\n      wrapFunc\n    });\n  }\n}\nexport const generateBlogOuter = blog => {\n  if (stryMutAct_9fa48(\"340\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"340\");\n    const {\n      header,\n      footer,\n      wrapFunc\n    } = getBlogGenerationArgs();\n    return generateBlog(blog, header, footer, wrapFunc);\n  }\n};","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/head.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nimport { styles } from './styles.js';\nexport const headElement = stryMutAct_9fa48(\"341\") ? `` : (stryCov_9fa48(\"341\"), `<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Matt Heard</title>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Share+Tech+Mono&family=Sono:wght@200..800&display=swap\" rel=\"stylesheet\">\n  <style>\n    ${styles}\n  </style>\n  \n  <!-- Define the component management system in the head -->\n  <script type=\"module\">\n    // Define array of interactive components to initialize\n    window.interactiveComponents = [];\n    \n    /**\n     * Create a function that can add a component to the interactiveComponents list\n     * This is defined in the head so it's available as soon as possible\n     */\n    const createComponentAdder = () => {\n      /**\n       * Add a component to the interactive components list\n       * @param {string} id - The ID of the article element\n       * @param {string} modulePath - Path to the module containing the processing function\n       * @param {string} functionName - Name of the function to import from the module\n       * @returns {Object} The component configuration that was added\n       */\n      return function addComponent(id, modulePath, functionName) {\n        // Create the component configuration\n        const component = {\n          id,\n          modulePath,\n          functionName\n        };\n        \n        // Add to the global list\n        window.interactiveComponents.push(component);\n        \n        return component;\n      };\n    };\n    \n    // Create the component adder function and expose it globally\n    window.addComponent = createComponentAdder();\n  </script>\n</head>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/html.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":5,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":14,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":14,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":24,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":34,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":34,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":39,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":47,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":48,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":48,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'join' has a complexity of 3. Maximum allowed is 2.","line":93,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":100,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":95,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":95,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3243,3243],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getOpeningTagParts' has a complexity of 3. Maximum allowed is 2.","line":116,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":123,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":118,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":118,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4225,4225],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":133,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":133,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4711,4711],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getClosingTagParts' has a complexity of 3. Maximum allowed is 2.","line":146,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":153,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":148,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":148,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5077,5077],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":162,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":162,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5459,5459],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createTag' has a complexity of 3. Maximum allowed is 2.","line":177,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":179,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":179,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5978,5978],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getAttrPairParts' has a complexity of 3. Maximum allowed is 2.","line":195,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":202,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":197,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":197,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6585,6585],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":212,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":212,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7051,7051],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":230,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":230,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7621,7621],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8087,8087],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":263,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":263,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8424,8424],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":277,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":277,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8793,8793],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapHtml' has a complexity of 3. Maximum allowed is 2.","line":290,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":298,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":292,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":292,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9176,9176],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":16,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// html.js - Core HTML utilities layer\n\n// Constants for HTML structure\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const DOCTYPE = stryMutAct_9fa48(\"342\") ? \"\" : (stryCov_9fa48(\"342\"), '<!DOCTYPE html>');\n\n// Language settings\nexport const LANGUAGE = stryMutAct_9fa48(\"343\") ? {} : (stryCov_9fa48(\"343\"), {\n  EN: stryMutAct_9fa48(\"344\") ? \"\" : (stryCov_9fa48(\"344\"), 'en')\n});\n\n// HTML tag names\nexport const HTML_TAG_NAME = stryMutAct_9fa48(\"345\") ? \"\" : (stryCov_9fa48(\"345\"), 'html');\n\n// HTML attribute names\nexport const ATTR_NAME = stryMutAct_9fa48(\"346\") ? {} : (stryCov_9fa48(\"346\"), {\n  LANG: stryMutAct_9fa48(\"347\") ? \"\" : (stryCov_9fa48(\"347\"), 'lang'),\n  CLASS: stryMutAct_9fa48(\"348\") ? \"\" : (stryCov_9fa48(\"348\"), 'class'),\n  ID: stryMutAct_9fa48(\"349\") ? \"\" : (stryCov_9fa48(\"349\"), 'id')\n});\n\n// HTML escape replacements\nexport const HTML_ESCAPE_REPLACEMENTS = stryMutAct_9fa48(\"350\") ? [] : (stryCov_9fa48(\"350\"), [stryMutAct_9fa48(\"351\") ? {} : (stryCov_9fa48(\"351\"), {\n  from: /&/g,\n  to: stryMutAct_9fa48(\"352\") ? \"\" : (stryCov_9fa48(\"352\"), '&amp;')\n}), stryMutAct_9fa48(\"353\") ? {} : (stryCov_9fa48(\"353\"), {\n  from: /</g,\n  to: stryMutAct_9fa48(\"354\") ? \"\" : (stryCov_9fa48(\"354\"), '&lt;')\n}), stryMutAct_9fa48(\"355\") ? {} : (stryCov_9fa48(\"355\"), {\n  from: />/g,\n  to: stryMutAct_9fa48(\"356\") ? \"\" : (stryCov_9fa48(\"356\"), '&gt;')\n}), stryMutAct_9fa48(\"357\") ? {} : (stryCov_9fa48(\"357\"), {\n  from: /\"/g,\n  to: stryMutAct_9fa48(\"358\") ? \"\" : (stryCov_9fa48(\"358\"), '&quot;')\n}), stryMutAct_9fa48(\"359\") ? {} : (stryCov_9fa48(\"359\"), {\n  from: /'/g,\n  to: stryMutAct_9fa48(\"360\") ? \"\" : (stryCov_9fa48(\"360\"), '&#039;')\n})]);\n\n// HTML utilities\n\n/**\n * Join an array of strings with an empty string separator\n * @param {Array<string>} parts - The array of strings to join\n * @returns {string} - The joined string\n */\nexport function join(parts) {\n  if (stryMutAct_9fa48(\"361\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"361\");\n    return parts.join(stryMutAct_9fa48(\"362\") ? \"Stryker was here!\" : (stryCov_9fa48(\"362\"), ''));\n  }\n}\n\n// HTML tag and attribute symbols\nexport const TAG_OPEN = stryMutAct_9fa48(\"363\") ? \"\" : (stryCov_9fa48(\"363\"), '<');\nexport const TAG_CLOSE = stryMutAct_9fa48(\"364\") ? \"\" : (stryCov_9fa48(\"364\"), '>');\nexport const SPACE = stryMutAct_9fa48(\"365\") ? \"\" : (stryCov_9fa48(\"365\"), ' ');\nexport const SLASH = stryMutAct_9fa48(\"366\") ? \"\" : (stryCov_9fa48(\"366\"), '/');\nexport const EQUALS = stryMutAct_9fa48(\"367\") ? \"\" : (stryCov_9fa48(\"367\"), '=');\nexport const QUOTE = stryMutAct_9fa48(\"368\") ? \"\" : (stryCov_9fa48(\"368\"), '\"');\n\n/**\n * Get the parts that make up an opening HTML tag\n * @param {string} name - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getOpeningTagParts(name, attributes) {\n  if (stryMutAct_9fa48(\"369\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"369\");\n    return stryMutAct_9fa48(\"370\") ? [] : (stryCov_9fa48(\"370\"), [TAG_OPEN, name, SPACE, attributes, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create an opening HTML tag with the specified name and attributes\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @returns {string} - The opening HTML tag\n */\nexport function createOpeningTag(tagName, attributes) {\n  if (stryMutAct_9fa48(\"371\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"371\");\n    const tagParts = getOpeningTagParts(tagName, attributes);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts that make up a closing HTML tag\n * @param {string} name - The HTML tag name\n * @returns {Array<string>} - Array of tag parts\n */\nexport function getClosingTagParts(name) {\n  if (stryMutAct_9fa48(\"372\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"372\");\n    return stryMutAct_9fa48(\"373\") ? [] : (stryCov_9fa48(\"373\"), [TAG_OPEN, SLASH, name, TAG_CLOSE]);\n  }\n}\n\n/**\n * Create a closing HTML tag with the specified name\n * @param {string} tagName - The HTML tag name\n * @returns {string} - The closing HTML tag\n */\nexport function createClosingTag(tagName) {\n  if (stryMutAct_9fa48(\"374\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"374\");\n    const tagParts = getClosingTagParts(tagName);\n    return join(tagParts);\n  }\n}\n\n/**\n * Create an HTML tag with the specified name, attributes, and content\n * @param {string} tagName - The HTML tag name\n * @param {string} attributes - The HTML attributes as a string\n * @param {string} content - The content to place inside the tag\n * @returns {string} - The complete HTML tag\n */\nexport function createTag(tagName, attributes, content) {\n  if (stryMutAct_9fa48(\"375\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"375\");\n    const openingTag = createOpeningTag(tagName, attributes);\n    const closingTag = createClosingTag(tagName);\n    const tagParts = stryMutAct_9fa48(\"376\") ? [] : (stryCov_9fa48(\"376\"), [openingTag, content, closingTag]);\n    return join(tagParts);\n  }\n}\n\n/**\n * Get the parts of an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {Array<string>} - Array of attribute parts\n */\nexport function getAttrPairParts(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"377\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"377\");\n    return stryMutAct_9fa48(\"378\") ? [] : (stryCov_9fa48(\"378\"), [attrName, EQUALS, QUOTE, attrValue, QUOTE]);\n  }\n}\n\n/**\n * Create an HTML attribute name-value pair\n * @param {string} attrName - The attribute name\n * @param {string} attrValue - The attribute value\n * @returns {string} - Formatted attribute string (name=\"value\")\n */\nexport function createAttrPair(attrName, attrValue) {\n  if (stryMutAct_9fa48(\"379\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"379\");\n    const attrParts = getAttrPairParts(attrName, attrValue);\n    return join(attrParts);\n  }\n}\n\n/**\n * Apply a single HTML escape replacement\n * @param {string} text - The text to process\n * @param {Object} replacement - The replacement definition\n * @param {RegExp} replacement.from - The pattern to replace\n * @param {string} replacement.to - The replacement string\n * @returns {string} - Text with the replacement applied\n */\nexport function applyHtmlEscapeReplacement(text, replacement) {\n  if (stryMutAct_9fa48(\"380\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"380\");\n    const {\n      from,\n      to\n    } = replacement;\n    return text.replace(from, to);\n  }\n}\n\n/**\n * Apply all HTML escape replacements\n * @param {string} text - The text to process\n * @param {Array<Object>} replacements - Array of replacement definitions\n * @returns {string} - Text with all replacements applied\n */\nexport function applyAllHtmlEscapeReplacements(text, replacements) {\n  if (stryMutAct_9fa48(\"381\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"381\");\n    return replacements.reduce(applyHtmlEscapeReplacement, text);\n  }\n}\n\n/**\n * Escapes HTML special characters to prevent XSS attacks\n * @param {string} text - The text to escape\n * @returns {string} - HTML-escaped text\n */\nexport function escapeHtml(text) {\n  if (stryMutAct_9fa48(\"382\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"382\");\n    return applyAllHtmlEscapeReplacements(text, HTML_ESCAPE_REPLACEMENTS);\n  }\n}\n\n/**\n * Create the HTML tag with language attribute\n * @param {string} content - The content to wrap in the HTML tag\n * @returns {string} - The HTML tag with content\n */\nexport function createHtmlTag(content) {\n  if (stryMutAct_9fa48(\"383\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"383\");\n    const langAttr = createAttrPair(ATTR_NAME.LANG, LANGUAGE.EN);\n    return createTag(HTML_TAG_NAME, langAttr, content);\n  }\n}\n\n/**\n * Wrap content in HTML structure\n * @param {string} content - The content to wrap\n * @returns {string} - The complete HTML document\n */\nexport function wrapHtml(content) {\n  if (stryMutAct_9fa48(\"384\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"384\");\n    const htmlTag = createHtmlTag(content);\n    return join(stryMutAct_9fa48(\"385\") ? [] : (stryCov_9fa48(\"385\"), [DOCTYPE, htmlTag]));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/interactive.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":9,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":20,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":18,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":18,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":28,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":37,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":38,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":38,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":43,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":51,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":52,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":52,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentScript' has a complexity of 3. Maximum allowed is 2.","line":55,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":62,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":57,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":57,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1868,1868],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateInteractiveComponentHTML' has a complexity of 3. Maximum allowed is 2.","line":70,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":77,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":72,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":72,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2455,2455],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'generateCompleteInteractiveComponent' has a complexity of 3. Maximum allowed is 2.","line":87,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":96,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":89,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":89,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3524,3524],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Generates the script to register an interactive component within an article\n * @param {string} id - The ID of the article element\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - HTML script tag that registers the component\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function generateInteractiveComponentScript(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"386\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"386\");\n    return stryMutAct_9fa48(\"387\") ? `` : (stryCov_9fa48(\"387\"), `<script type=\"module\">window.addComponent('${id}', '${modulePath}', '${functionName}');</script>`);\n  }\n}\n\n/**\n * Generates the basic HTML structure for an interactive component\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @returns {string} - HTML for the component's structure (without the registration script)\n */\nexport function generateInteractiveComponentHTML(id, title) {\n  if (stryMutAct_9fa48(\"388\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"388\");\n    return stryMutAct_9fa48(\"389\") ? `` : (stryCov_9fa48(\"389\"), `<div class=\"key article-title\">${id}</div><div class=\"value\"><h2><a href=\"#${id}\">${title}</a></h2></div><div class=\"key\">in</div><div class=\"value\"><form><input type=\"text\" disabled></form></div><div class=\"key\"></div><div class=\"value\"><button type=\"submit\" disabled>Submit</button></div><div class=\"key\">out</div><div class=\"value warning\"><p>This toy requires Javascript to run.</p></div>`);\n  }\n}\n\n/**\n * Generates a complete interactive article with structure and registration script\n * @param {string} id - The ID for the article\n * @param {string} title - The display title for the article\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n * @returns {string} - Complete HTML for the interactive article\n */\nexport function generateCompleteInteractiveComponent(id, title, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"390\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"390\");\n    const structure = generateInteractiveComponentHTML(id, title);\n    const script = generateInteractiveComponentScript(id, modulePath, functionName);\n    return stryMutAct_9fa48(\"391\") ? structure - script : (stryCov_9fa48(\"391\"), structure + script);\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":49,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":133,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":51,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":51,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1456,1456],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 31. Maximum allowed is 2.","line":55,"column":27,"nodeType":"FunctionExpression","messageId":"complex","endLine":131,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":57,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":57,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1710,1710],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":63,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":63,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2076,2076],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":80,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":80,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3369,3369],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":92,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":92,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3973,3973],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":104,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":104,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4573,4573],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 6. Maximum allowed is 2.","line":112,"column":101,"nodeType":"FunctionExpression","messageId":"complex","endLine":121,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":114,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":114,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4914,4914],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeInteractiveComponent' has a complexity of 10. Maximum allowed is 2.","line":141,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":226,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":143,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":143,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6507,6507],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableControls' has a complexity of 6. Maximum allowed is 2.","line":164,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":174,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":166,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":166,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7537,7537],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'handleSubmit' has a complexity of 6. Maximum allowed is 2.","line":180,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":201,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8206,8206],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":187,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":187,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8426,8426],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":207,"column":102,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":221,"endColumn":6},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":209,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":209,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9157,9157],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":214,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":214,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9507,9507],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'initializeWhenVisible' has a complexity of 3. Maximum allowed is 2.","line":234,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":295,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":236,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":236,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10113,10113],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":244,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":244,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10354,10354],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 2.","line":247,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":283,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10490,10490],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":255,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":255,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10786,10786],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":261,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":261,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11053,11053],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":269,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":276,"endColumn":18},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":271,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":271,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11471,11471],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":300,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":300,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12809,12809],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":306,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":306,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13156,13156],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":315,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":315,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13361,13361],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 14. Maximum allowed is 2.","line":323,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":345,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":325,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":325,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[13640,13640],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":331,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":331,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14115,14115],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":336,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":336,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14371,14371],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 18. Maximum allowed is 2.","line":346,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":393,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":348,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":348,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[14652,14652],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":354,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":354,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15187,15187],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":362,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":362,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[15384,15384],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":377,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":377,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16302,16302],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":394,"column":2,"nodeType":"FunctionExpression","messageId":"complex","endLine":431,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":396,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":396,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[16840,16840],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":401,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":401,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17057,17057],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 9. Maximum allowed is 2.","line":404,"column":44,"nodeType":"FunctionExpression","messageId":"complex","endLine":427,"endColumn":10},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":406,"column":13,"nodeType":"BlockStatement","messageId":"unexpected","endLine":406,"endColumn":15,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17224,17224],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":411,"column":17,"nodeType":"BlockStatement","messageId":"unexpected","endLine":411,"endColumn":19,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17612,17612],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":416,"column":21,"nodeType":"BlockStatement","messageId":"unexpected","endLine":416,"endColumn":23,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[17866,17866],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":37,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Audio controls functionality\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\n(function () {\n  if (stryMutAct_9fa48(\"392\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"392\");\n    const audioElements = document.querySelectorAll(stryMutAct_9fa48(\"393\") ? \"\" : (stryCov_9fa48(\"393\"), \"audio\"));\n    audioElements.forEach(function (audio, index) {\n      if (stryMutAct_9fa48(\"394\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"394\");\n        audio.removeAttribute(stryMutAct_9fa48(\"395\") ? \"\" : (stryCov_9fa48(\"395\"), \"controls\"));\n        if (stryMutAct_9fa48(\"398\") ? false : stryMutAct_9fa48(\"397\") ? true : stryMutAct_9fa48(\"396\") ? audio.id : (stryCov_9fa48(\"396\", \"397\", \"398\"), !audio.id)) {\n          if (stryMutAct_9fa48(\"399\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"399\");\n            audio.id = (stryMutAct_9fa48(\"400\") ? \"\" : (stryCov_9fa48(\"400\"), \"audio-\")) + index;\n          }\n        }\n        const controlsContainer = document.createElement(stryMutAct_9fa48(\"401\") ? \"\" : (stryCov_9fa48(\"401\"), \"div\"));\n        controlsContainer.className = stryMutAct_9fa48(\"402\") ? \"\" : (stryCov_9fa48(\"402\"), \"audio-controls\");\n        controlsContainer.id = (stryMutAct_9fa48(\"403\") ? \"\" : (stryCov_9fa48(\"403\"), \"controls-\")) + audio.id;\n        const timeDisplay = document.createElement(stryMutAct_9fa48(\"404\") ? \"\" : (stryCov_9fa48(\"404\"), \"span\"));\n        timeDisplay.className = stryMutAct_9fa48(\"405\") ? \"\" : (stryCov_9fa48(\"405\"), \"audio-time\");\n        timeDisplay.textContent = stryMutAct_9fa48(\"406\") ? \"\" : (stryCov_9fa48(\"406\"), \"0:00\");\n        const playButton = document.createElement(stryMutAct_9fa48(\"407\") ? \"\" : (stryCov_9fa48(\"407\"), \"a\"));\n        playButton.href = stryMutAct_9fa48(\"408\") ? \"\" : (stryCov_9fa48(\"408\"), \"#\");\n        playButton.textContent = stryMutAct_9fa48(\"409\") ? \"\" : (stryCov_9fa48(\"409\"), \"PLAY\");\n        playButton.addEventListener(stryMutAct_9fa48(\"410\") ? \"\" : (stryCov_9fa48(\"410\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"411\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"411\");\n            e.preventDefault();\n            audio.play();\n          }\n        });\n        const pauseButton = document.createElement(stryMutAct_9fa48(\"412\") ? \"\" : (stryCov_9fa48(\"412\"), \"a\"));\n        pauseButton.href = stryMutAct_9fa48(\"413\") ? \"\" : (stryCov_9fa48(\"413\"), \"#\");\n        pauseButton.textContent = stryMutAct_9fa48(\"414\") ? \"\" : (stryCov_9fa48(\"414\"), \"PAUSE\");\n        pauseButton.addEventListener(stryMutAct_9fa48(\"415\") ? \"\" : (stryCov_9fa48(\"415\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"416\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"416\");\n            e.preventDefault();\n            audio.pause();\n          }\n        });\n        const stopButton = document.createElement(stryMutAct_9fa48(\"417\") ? \"\" : (stryCov_9fa48(\"417\"), \"a\"));\n        stopButton.href = stryMutAct_9fa48(\"418\") ? \"\" : (stryCov_9fa48(\"418\"), \"#\");\n        stopButton.textContent = stryMutAct_9fa48(\"419\") ? \"\" : (stryCov_9fa48(\"419\"), \"STOP\");\n        stopButton.addEventListener(stryMutAct_9fa48(\"420\") ? \"\" : (stryCov_9fa48(\"420\"), \"click\"), function (e) {\n          if (stryMutAct_9fa48(\"421\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"421\");\n            e.preventDefault();\n            audio.pause();\n            audio.currentTime = 0;\n          }\n        });\n        audio.addEventListener(stryMutAct_9fa48(\"422\") ? \"\" : (stryCov_9fa48(\"422\"), \"timeupdate\"), function () {\n          if (stryMutAct_9fa48(\"423\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"423\");\n            const minutes = Math.floor(stryMutAct_9fa48(\"424\") ? audio.currentTime * 60 : (stryCov_9fa48(\"424\"), audio.currentTime / 60));\n            const seconds = Math.floor(stryMutAct_9fa48(\"425\") ? audio.currentTime * 60 : (stryCov_9fa48(\"425\"), audio.currentTime % 60)).toString().padStart(2, stryMutAct_9fa48(\"426\") ? \"\" : (stryCov_9fa48(\"426\"), \"0\"));\n            timeDisplay.textContent = minutes + (stryMutAct_9fa48(\"427\") ? \"\" : (stryCov_9fa48(\"427\"), \":\")) + seconds;\n          }\n        });\n        controlsContainer.appendChild(playButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"428\") ? \"\" : (stryCov_9fa48(\"428\"), \" \")));\n        controlsContainer.appendChild(pauseButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"429\") ? \"\" : (stryCov_9fa48(\"429\"), \" \")));\n        controlsContainer.appendChild(stopButton);\n        controlsContainer.appendChild(document.createTextNode(stryMutAct_9fa48(\"430\") ? \"\" : (stryCov_9fa48(\"430\"), \" \")));\n        controlsContainer.appendChild(timeDisplay);\n        audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n      }\n    });\n  }\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  if (stryMutAct_9fa48(\"431\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"431\");\n    // Get the article element\n    const article = document.getElementById(id);\n\n    // Get the elements within the article\n    const inputElement = article.querySelector(stryMutAct_9fa48(\"432\") ? \"\" : (stryCov_9fa48(\"432\"), 'input'));\n    const submitButton = article.querySelector(stryMutAct_9fa48(\"433\") ? \"\" : (stryCov_9fa48(\"433\"), 'button'));\n    const outputElement = article.querySelector(stryMutAct_9fa48(\"434\") ? \"\" : (stryCov_9fa48(\"434\"), 'p.output'));\n\n    // Disable controls during initialization\n    inputElement.disabled = stryMutAct_9fa48(\"435\") ? false : (stryCov_9fa48(\"435\"), true);\n    submitButton.disabled = stryMutAct_9fa48(\"436\") ? false : (stryCov_9fa48(\"436\"), true);\n\n    // Update message to show JS is running\n    outputElement.textContent = stryMutAct_9fa48(\"437\") ? \"\" : (stryCov_9fa48(\"437\"), 'Initialising...');\n\n    /**\n     * Enable controls and update status message\n     */\n    function enableControls() {\n      if (stryMutAct_9fa48(\"438\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"438\");\n        inputElement.disabled = stryMutAct_9fa48(\"439\") ? true : (stryCov_9fa48(\"439\"), false);\n        submitButton.disabled = stryMutAct_9fa48(\"440\") ? true : (stryCov_9fa48(\"440\"), false);\n        outputElement.textContent = stryMutAct_9fa48(\"441\") ? \"\" : (stryCov_9fa48(\"441\"), 'Ready for input');\n        outputElement.parentElement.classList.remove(stryMutAct_9fa48(\"442\") ? \"\" : (stryCov_9fa48(\"442\"), 'warning'));\n      }\n    }\n\n    /**\n     * Handle form submission events\n     * @param {Event} event - The submission event\n     */\n    function handleSubmit(event) {\n      if (stryMutAct_9fa48(\"443\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"443\");\n        if (stryMutAct_9fa48(\"445\") ? false : stryMutAct_9fa48(\"444\") ? true : (stryCov_9fa48(\"444\", \"445\"), event)) {\n          if (stryMutAct_9fa48(\"446\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"446\");\n            event.preventDefault();\n          }\n        }\n        const inputValue = inputElement.value;\n\n        // Use the provided processing function\n        const result = processingFunction(inputValue);\n\n        // Update the output\n        outputElement.textContent = result;\n      }\n    }\n\n    // Add event listener to the submit button\n    submitButton.addEventListener(stryMutAct_9fa48(\"447\") ? \"\" : (stryCov_9fa48(\"447\"), 'click'), handleSubmit);\n\n    // Add event listener for Enter key in the input field\n    inputElement.addEventListener(stryMutAct_9fa48(\"448\") ? \"\" : (stryCov_9fa48(\"448\"), 'keypress'), event => {\n      if (stryMutAct_9fa48(\"449\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"449\");\n        if (stryMutAct_9fa48(\"452\") ? event.key !== 'Enter' : stryMutAct_9fa48(\"451\") ? false : stryMutAct_9fa48(\"450\") ? true : (stryCov_9fa48(\"450\", \"451\", \"452\"), event.key === (stryMutAct_9fa48(\"453\") ? \"\" : (stryCov_9fa48(\"453\"), 'Enter')))) {\n          if (stryMutAct_9fa48(\"454\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"454\");\n            handleSubmit(event);\n          }\n        }\n      }\n    });\n\n    // Enable controls when initialization is complete\n    enableControls();\n  }\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  if (stryMutAct_9fa48(\"455\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"455\");\n    const article = document.getElementById(id);\n\n    // Create an observer instance\n    const observer = new IntersectionObserver((entries, observer) => {\n      if (stryMutAct_9fa48(\"456\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"456\");\n        entries.forEach(entry => {\n          if (stryMutAct_9fa48(\"457\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"457\");\n            // If the article is visible\n            if (stryMutAct_9fa48(\"459\") ? false : stryMutAct_9fa48(\"458\") ? true : (stryCov_9fa48(\"458\", \"459\"), entry.isIntersecting)) {\n              if (stryMutAct_9fa48(\"460\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"460\");\n                // Dynamically import the module only when the article is visible\n                import(modulePath).then(module => {\n                  if (stryMutAct_9fa48(\"461\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"461\");\n                    const processingFunction = module[functionName];\n\n                    // Initialize the component with the imported function\n                    initializeInteractiveComponent(id, processingFunction);\n                  }\n                }).catch(error => {\n                  if (stryMutAct_9fa48(\"462\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"462\");\n                    console.error((stryMutAct_9fa48(\"463\") ? \"\" : (stryCov_9fa48(\"463\"), 'Error loading module ')) + modulePath + (stryMutAct_9fa48(\"464\") ? \"\" : (stryCov_9fa48(\"464\"), ':')), error);\n                  }\n                });\n\n                // Stop observing once initialized\n                observer.disconnect();\n              }\n            }\n          }\n        });\n      }\n    }, stryMutAct_9fa48(\"465\") ? {} : (stryCov_9fa48(\"465\"), {\n      // Options for the observer\n      root: null,\n      // viewport\n      threshold: 0.1 // 10% visibility is enough to trigger\n    }));\n\n    // Start observing the article\n    observer.observe(article);\n  }\n}\n\n// Initialize all registered components when they become visible\nif (stryMutAct_9fa48(\"468\") ? window.interactiveComponents || window.interactiveComponents.length > 0 : stryMutAct_9fa48(\"467\") ? false : stryMutAct_9fa48(\"466\") ? true : (stryCov_9fa48(\"466\", \"467\", \"468\"), window.interactiveComponents && (stryMutAct_9fa48(\"471\") ? window.interactiveComponents.length <= 0 : stryMutAct_9fa48(\"470\") ? window.interactiveComponents.length >= 0 : stryMutAct_9fa48(\"469\") ? true : (stryCov_9fa48(\"469\", \"470\", \"471\"), window.interactiveComponents.length > 0)))) {\n  if (stryMutAct_9fa48(\"472\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"472\");\n    console.log(stryMutAct_9fa48(\"473\") ? \"\" : (stryCov_9fa48(\"473\"), 'Initializing'), window.interactiveComponents.length, stryMutAct_9fa48(\"474\") ? \"\" : (stryCov_9fa48(\"474\"), 'interactive components'));\n    window.interactiveComponents.forEach(component => {\n      if (stryMutAct_9fa48(\"475\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"475\");\n        initializeWhenVisible(component.id, component.modulePath, component.functionName);\n      }\n    });\n  }\n} else {\n  if (stryMutAct_9fa48(\"476\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"476\");\n    console.warn(stryMutAct_9fa48(\"477\") ? \"\" : (stryCov_9fa48(\"477\"), 'No interactive components found to initialize'));\n  }\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  if (stryMutAct_9fa48(\"478\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"478\");\n    var articles = document.getElementsByTagName(stryMutAct_9fa48(\"479\") ? \"\" : (stryCov_9fa48(\"479\"), 'article'));\n    for (var i = 0; stryMutAct_9fa48(\"482\") ? i >= articles.length : stryMutAct_9fa48(\"481\") ? i <= articles.length : stryMutAct_9fa48(\"480\") ? false : (stryCov_9fa48(\"480\", \"481\", \"482\"), i < articles.length); stryMutAct_9fa48(\"483\") ? i-- : (stryCov_9fa48(\"483\"), i++)) {\n      if (stryMutAct_9fa48(\"484\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"484\");\n        if (stryMutAct_9fa48(\"486\") ? false : stryMutAct_9fa48(\"485\") ? true : (stryCov_9fa48(\"485\", \"486\"), articles[i].classList.contains(className))) {\n          if (stryMutAct_9fa48(\"487\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"487\");\n            articles[i].style.display = stryMutAct_9fa48(\"488\") ? \"\" : (stryCov_9fa48(\"488\"), 'none');\n          }\n        }\n      }\n    }\n  }\n}\nfunction toggleHideLink(link, className) {\n  if (stryMutAct_9fa48(\"489\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"489\");\n    // Check if a span with the hide link already exists immediately after the link.\n    if (stryMutAct_9fa48(\"492\") ? link.nextElementSibling || link.nextElementSibling.classList.contains('hide-span') : stryMutAct_9fa48(\"491\") ? false : stryMutAct_9fa48(\"490\") ? true : (stryCov_9fa48(\"490\", \"491\", \"492\"), link.nextElementSibling && link.nextElementSibling.classList.contains(stryMutAct_9fa48(\"493\") ? \"\" : (stryCov_9fa48(\"493\"), 'hide-span')))) {\n      if (stryMutAct_9fa48(\"494\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"494\");\n        // Remove the span if it exists.\n        link.nextElementSibling.remove();\n      }\n    } else {\n      if (stryMutAct_9fa48(\"495\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"495\");\n        // Create a new span element.\n        var span = document.createElement(stryMutAct_9fa48(\"496\") ? \"\" : (stryCov_9fa48(\"496\"), 'span'));\n        span.classList.add(stryMutAct_9fa48(\"497\") ? \"\" : (stryCov_9fa48(\"497\"), 'hide-span'));\n        // Append the opening text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"498\") ? \"\" : (stryCov_9fa48(\"498\"), \" (\")));\n\n        // Create the hide anchor element.\n        var hideLink = document.createElement(stryMutAct_9fa48(\"499\") ? \"\" : (stryCov_9fa48(\"499\"), 'a'));\n        hideLink.textContent = stryMutAct_9fa48(\"500\") ? \"\" : (stryCov_9fa48(\"500\"), \"hide\");\n        // Add click listener to trigger hideArticlesByClass.\n        hideLink.addEventListener(stryMutAct_9fa48(\"501\") ? \"\" : (stryCov_9fa48(\"501\"), 'click'), function (event) {\n          if (stryMutAct_9fa48(\"502\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"502\");\n            event.preventDefault();\n            hideArticlesByClass(className);\n          }\n        });\n        span.appendChild(hideLink);\n        // Append the closing text node.\n        span.appendChild(document.createTextNode(stryMutAct_9fa48(\"503\") ? \"\" : (stryCov_9fa48(\"503\"), \")\")));\n\n        // Insert the span immediately after the link.\n        link.parentNode.insertBefore(span, link.nextSibling);\n      }\n    }\n  }\n}\n(function () {\n  if (stryMutAct_9fa48(\"504\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"504\");\n    Array.from(document.getElementsByTagName(stryMutAct_9fa48(\"505\") ? \"\" : (stryCov_9fa48(\"505\"), 'a'))).forEach(function (link) {\n      if (stryMutAct_9fa48(\"506\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"506\");\n        Array.from(link.classList).forEach(function (className) {\n          if (stryMutAct_9fa48(\"507\")) {\n            {}\n          } else {\n            stryCov_9fa48(\"507\");\n            if (stryMutAct_9fa48(\"510\") ? className.indexOf('tag-') !== 0 : stryMutAct_9fa48(\"509\") ? false : stryMutAct_9fa48(\"508\") ? true : (stryCov_9fa48(\"508\", \"509\", \"510\"), className.indexOf(stryMutAct_9fa48(\"511\") ? \"\" : (stryCov_9fa48(\"511\"), 'tag-')) === 0)) {\n              if (stryMutAct_9fa48(\"512\")) {\n                {}\n              } else {\n                stryCov_9fa48(\"512\");\n                link.addEventListener(stryMutAct_9fa48(\"513\") ? \"\" : (stryCov_9fa48(\"513\"), 'click'), function (event) {\n                  if (stryMutAct_9fa48(\"514\")) {\n                    {}\n                  } else {\n                    stryCov_9fa48(\"514\");\n                    event.preventDefault();\n                    toggleHideLink(link, className);\n                  }\n                });\n                return; // exit after first tag- match\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/script.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Script tag that references the external main.js file\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst scriptTag = stryMutAct_9fa48(\"515\") ? `` : (stryCov_9fa48(\"515\"), `<script src=\"main.js\" defer></script>`);\n\n// Export the script tag as the default export\nexport default scriptTag;","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/styles.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":2,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":11,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":11,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":21,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":31,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":31,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":36,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":44,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":45,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const styles = stryMutAct_9fa48(\"516\") ? `` : (stryCov_9fa48(\"516\"), `\n  body {\n    background-color: #121212;\n    color: #CCCCCC;\n    font-family: \"Sono\", Consolas, monospace;\n    font-size: 16px;\n    line-height: 1.5;\n    margin: 0;\n    padding: 0;\n  }\n  #container {\n    max-width: 85ch;\n    padding: 1lh;\n  }\n  .entry {\n    display: grid;\n    grid-template-columns: 5ch auto;\n    padding-bottom: 1em;\n    gap: 0em 1em;\n  }\n  .key {\n    font-weight: bold;\n    color: #33CCFF;\n    text-align: right;\n    padding: 0em 0em;\n  }\n  .value {\n    text-align: left;\n    color: #CCCCCC;\n  }\n  .article-title {\n    color: #121212;\n    background-color: #00FFFF;\n  }\n  .media {\n    color: #00FF00;\n  }\n  .footer {\n    font-style: italic;\n  }\n  .full-width {\n    white-space: nowrap;\n    font-family: monospace;\n    display: block;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: clip;\n    line-height: 1;\n    color: #00FFFF;\n  }\n\n  h1, h2, h3 {\n    color: #FFFFFF;\n    font-size: 16px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  img {\n    max-width: min(20em, 60vw);\n    height: auto;\n    display: block;\n    filter: sepia(0.8) hue-rotate(151deg) saturate(2);\n  }\n  p {\n    margin: 0;\n  }\n  ul, .related-links {\n    margin: 0;\n    padding-left: 0;\n    list-style-type: none;\n  }\n  \n  ul li::before, .related-links li::before {\n    content: \"- \";\n    color: #33CCFF;\n  }\n  a {\n    color: #00FFFF;\n    text-decoration: none;\n  }\n  a:hover {\n    color: #33FFFF;\n    text-decoration: underline;\n  }\n  h1 > a, h2 > a, h3 > a {\n    color: #FFFFFF;\n  }\n\n  .warning {\n    color: #FFA500;\n  }\n  .error {\n    color: #FF0000;\n  }\n  .success {\n    color: #00FF00;\n  }\n  .metadata {\n    color: #33CCFF;\n  }\n\n  code {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n  }\n  pre {\n    background-color: #1A1A1A;\n    color: #CCCCCC;\n    padding: 10px;\n    overflow-x: auto;\n  }\n  #audio-controls {\n    background-color: #1A1A1A;\n    color: #00FFFF;\n    display: inline-block;\n  }\n  .audio-btn {\n    padding: 0em 1em;\n    border: none;\n    background: #00FF00;\n    color: #1A1A1A;\n    font-family: Consolas, monospace;\n    cursor: pointer;\n    height: 2em;\n    margin-right: 1em;\n  }\n  .audio-btn:hover {\n    text-decoration: underline;\n  }\n\n  blockquote {\n    font-style: italic;\n    padding: 1.5em 2ch;\n    margin: 0;\n    background-color: #1a1a1a;\n    position: relative; /* Add this to make absolute positioning of corners work */\n  }\n\n  .corner {\n    position: absolute;\n    display: block; /* Ensure the corners are displayed */\n    width: 2ch;\n    height: 1.5em;\n  }\n\n  .corner .h-line,\n  .corner .v-line {\n    position: absolute;\n    background: #CCCCCC;\n    display: block; /* Ensure the lines are displayed */\n  }\n\n  .h-line {\n    height: 2px;\n    width: 2ch;\n  }\n\n  .v-line {\n    width: 2px;\n    height: 1.5em;\n  }\n\n  .corner-tl {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .h-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tl .v-line {\n    top: 0;\n    left: 0;\n  }\n\n  .corner-tr {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .h-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-tr .v-line {\n    top: 0;\n    right: 0;\n  }\n\n  .corner-bl {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .h-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-bl .v-line {\n    bottom: 0;\n    left: 0;\n  }\n\n  .corner-br {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .h-line {\n    bottom: 0;\n    right: 0;\n  }\n\n  .corner-br .v-line {\n    bottom: 0;\n    right: 0;\n  }\n`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/generator/title.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":11,"column":4,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":22,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":20,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":20,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":30,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":39,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":40,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":40,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":45,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":53,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":54,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":54,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Contains the ASCII art banner for the blog header\n * @module title\n */\n// @ts-nocheck\n\n\n/**\n * ASCII art banner for the blog header\n * @type {string}\n */function stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport const HEADER_BANNER = stryMutAct_9fa48(\"517\") ? `` : (stryCov_9fa48(\"517\"), `<pre aria-label=\"Matt Heard\" role=\"heading\" aria-level=\"1\">\n▗▖  ▗▖ ▗▄▖▗▄▄▄▖▗▄▄▄▖      \n▐▛▚▞▜▌▐▌ ▐▌ █    █        \n▐▌  ▐▌▐▛▀▜▌ █    █        \n▐▌  ▐▌▐▌ ▐▌ █    █        \n▗▖ ▗▖▗▄▄▄▖ ▗▄▖ ▗▄▄▖ ▗▄▄▄  \n▐▌ ▐▌▐▌   ▐▌ ▐▌▐▌ ▐▌▐▌  █ \n▐▛▀▜▌▐▛▀▀▘▐▛▀▜▌▐▛▀▚▖▐▌  █ \n▐▌ ▐▌▐▙▄▄▖▐▌ ▐▌▐▌ ▐▌▐▙▄▄▀\n</pre>`);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/toys/2024-10-02/hello.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":6,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":15,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":15,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":25,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":35,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":35,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":40,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":48,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":49,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":49,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'hello' has a complexity of 3. Maximum allowed is 2.","line":52,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":59,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":54,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":54,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1516,1516],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * A simple hello world function\n * @returns {string} A greeting message\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function hello() {\n  if (stryMutAct_9fa48(\"518\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"518\");\n    return stryMutAct_9fa48(\"519\") ? \"\" : (stryCov_9fa48(\"519\"), \"Hello world\");\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/toys/2025-03-19/identity.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":8,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":17,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":17,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":27,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":37,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":37,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":42,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":51,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":51,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":56,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":56,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1620,1620],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Simple identity function that returns the input value unchanged.\n * \n * @param {*} value - Any value to be returned\n * @returns {*} The same value that was passed in\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function identity(value) {\n  if (stryMutAct_9fa48(\"520\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"520\");\n    return value;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":10,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":19,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":19,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":29,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":38,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":39,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":39,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":44,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":52,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":53,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":53,"endColumn":19},{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 25. Maximum allowed is 2.","line":56,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":76,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":58,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":58,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[1845,1845],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":67,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":67,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2424,2424],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\n// @ts-nocheck\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nexport function coerceToBoolean(input) {\n  if (stryMutAct_9fa48(\"521\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"521\");\n    const booleanMap = stryMutAct_9fa48(\"522\") ? {} : (stryCov_9fa48(\"522\"), {\n      true: stryMutAct_9fa48(\"523\") ? false : (stryCov_9fa48(\"523\"), true),\n      false: stryMutAct_9fa48(\"524\") ? true : (stryCov_9fa48(\"524\"), false)\n    });\n    if (stryMutAct_9fa48(\"527\") ? typeof input !== 'boolean' : stryMutAct_9fa48(\"526\") ? false : stryMutAct_9fa48(\"525\") ? true : (stryCov_9fa48(\"525\", \"526\", \"527\"), typeof input === (stryMutAct_9fa48(\"528\") ? \"\" : (stryCov_9fa48(\"528\"), 'boolean')))) {\n      if (stryMutAct_9fa48(\"529\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"529\");\n        return stryMutAct_9fa48(\"530\") ? `` : (stryCov_9fa48(\"530\"), `{ value: ${input} }`);\n      }\n    }\n    const normalized = (stryMutAct_9fa48(\"533\") ? typeof input !== 'string' : stryMutAct_9fa48(\"532\") ? false : stryMutAct_9fa48(\"531\") ? true : (stryCov_9fa48(\"531\", \"532\", \"533\"), typeof input === (stryMutAct_9fa48(\"534\") ? \"\" : (stryCov_9fa48(\"534\"), 'string')))) ? booleanMap[stryMutAct_9fa48(\"535\") ? input.toUpperCase() : (stryCov_9fa48(\"535\"), input.toLowerCase())] : undefined;\n    return (stryMutAct_9fa48(\"538\") ? typeof normalized !== 'boolean' : stryMutAct_9fa48(\"537\") ? false : stryMutAct_9fa48(\"536\") ? true : (stryCov_9fa48(\"536\", \"537\", \"538\"), typeof normalized === (stryMutAct_9fa48(\"539\") ? \"\" : (stryCov_9fa48(\"539\"), 'boolean')))) ? stryMutAct_9fa48(\"540\") ? `` : (stryCov_9fa48(\"540\"), `{ value: ${normalized} }`) : stryMutAct_9fa48(\"541\") ? \"\" : (stryCov_9fa48(\"541\"), '{}');\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'stryNS_9fa48' has a complexity of 10. Maximum allowed is 2.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":14,"endColumn":2},{"ruleId":"no-func-assign","severity":2,"message":"'stryNS_9fa48' is a function.","line":12,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":12,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Function 'cover' has a complexity of 5. Maximum allowed is 2.","line":22,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryCov_9fa48' is a function.","line":32,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":32,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Function 'isActive' has a complexity of 4. Maximum allowed is 2.","line":37,"column":3,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":45,"endColumn":4},{"ruleId":"no-func-assign","severity":2,"message":"'stryMutAct_9fa48' is a function.","line":46,"column":3,"nodeType":"Identifier","messageId":"isAFunction","endLine":46,"endColumn":19},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":63,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":63,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2017,2017],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPatternPart' has a complexity of 9. Maximum allowed is 2.","line":76,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":96,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":78,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":78,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[2397,2397],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createBoldPattern' has a complexity of 5. Maximum allowed is 2.","line":103,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":115,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":105,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":105,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[3540,3540],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicsPattern' has a complexity of 6. Maximum allowed is 2.","line":123,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":132,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":125,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":125,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4315,4315],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'getItalicMarkers' has a complexity of 3. Maximum allowed is 2.","line":139,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":146,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":141,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":141,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[4927,4927],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 18. Maximum allowed is 2.","line":161,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":171,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":163,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":163,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[5669,5669],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processItalicBefore' has a complexity of 4. Maximum allowed is 2.","line":172,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":179,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":174,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":174,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[6814,6814],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'processBoldAfter' has a complexity of 4. Maximum allowed is 2.","line":180,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":187,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":182,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":182,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[7073,7073],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 13. Maximum allowed is 2.","line":213,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":230,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":215,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":215,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8068,8068],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":220,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":220,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[8601,8601],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'findBoldSegments' has a complexity of 11. Maximum allowed is 2.","line":241,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":264,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":243,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":243,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9185,9185],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":249,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":249,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[9490,9490],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":275,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":275,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10447,10447],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":281,"column":9,"nodeType":"BlockStatement","messageId":"unexpected","endLine":281,"endColumn":11,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[10645,10645],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":307,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":307,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11241,11241],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithMarker' has a complexity of 3. Maximum allowed is 2.","line":322,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":329,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":324,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":324,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[11742,11742],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'wrapWithHtmlTag' has a complexity of 6. Maximum allowed is 2.","line":338,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":345,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":340,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":340,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12205,12205],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]},{"ruleId":"complexity","severity":1,"message":"Function 'createItalicReplacementString' has a complexity of 3. Maximum allowed is 2.","line":354,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":362,"endColumn":2},{"ruleId":"no-empty","severity":2,"message":"Empty block statement.","line":356,"column":5,"nodeType":"BlockStatement","messageId":"unexpected","endLine":356,"endColumn":7,"suggestions":[{"messageId":"suggestComment","data":{"type":"block"},"fix":{"range":[12916,12916],"text":" /* empty */ "},"desc":"Add comment inside empty block statement."}]}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// @ts-nocheck\n// Markdown marker characters\nfunction stryNS_9fa48() {\n  var g = typeof globalThis === 'object' && globalThis && globalThis.Math === Math && globalThis || new Function(\"return this\")();\n  var ns = g.__stryker__ || (g.__stryker__ = {});\n  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {\n    ns.activeMutant = g.process.env.__STRYKER_ACTIVE_MUTANT__;\n  }\n  function retrieveNS() {\n    return ns;\n  }\n  stryNS_9fa48 = retrieveNS;\n  return retrieveNS();\n}\nstryNS_9fa48();\nfunction stryCov_9fa48() {\n  var ns = stryNS_9fa48();\n  var cov = ns.mutantCoverage || (ns.mutantCoverage = {\n    static: {},\n    perTest: {}\n  });\n  function cover() {\n    var c = cov.static;\n    if (ns.currentTestId) {\n      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};\n    }\n    var a = arguments;\n    for (var i = 0; i < a.length; i++) {\n      c[a[i]] = (c[a[i]] || 0) + 1;\n    }\n  }\n  stryCov_9fa48 = cover;\n  cover.apply(null, arguments);\n}\nfunction stryMutAct_9fa48(id) {\n  var ns = stryNS_9fa48();\n  function isActive(id) {\n    if (ns.activeMutant === id) {\n      if (ns.hitCount !== void 0 && ++ns.hitCount > ns.hitLimit) {\n        throw new Error('Stryker: Hit count limit reached (' + ns.hitCount + ')');\n      }\n      return true;\n    }\n    return false;\n  }\n  stryMutAct_9fa48 = isActive;\n  return isActive(id);\n}\nconst ASTERISK_MARKER = stryMutAct_9fa48(\"542\") ? \"\" : (stryCov_9fa48(\"542\"), '*');\nconst UNDERSCORE_MARKER = stryMutAct_9fa48(\"543\") ? \"\" : (stryCov_9fa48(\"543\"), '_');\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = stryMutAct_9fa48(\"544\") ? /[^.*+?^${}()|[\\]\\\\]/ : (stryCov_9fa48(\"544\"), /[.*+?^${}()|[\\]\\\\]/);\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  if (stryMutAct_9fa48(\"545\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"545\");\n    return marker.repeat(2);\n  }\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  if (stryMutAct_9fa48(\"546\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"546\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"547\") ? `` : (stryCov_9fa48(\"547\"), `\\\\${marker}`) : marker;\n    const doubledMarker = createDoubledMarker(escapedMarker);\n\n    // Break the pattern into its constituent parts\n    const patternParts = stryMutAct_9fa48(\"548\") ? [] : (stryCov_9fa48(\"548\"), [stryMutAct_9fa48(\"549\") ? \"\" : (stryCov_9fa48(\"549\"), '(?:'),\n    // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    stryMutAct_9fa48(\"550\") ? \"\" : (stryCov_9fa48(\"550\"), '.*?'),\n    // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    stryMutAct_9fa48(\"551\") ? \"\" : (stryCov_9fa48(\"551\"), ')') // Closing group\n    ]);\n    return patternParts.join(stryMutAct_9fa48(\"552\") ? \"Stryker was here!\" : (stryCov_9fa48(\"552\"), ''));\n  }\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  if (stryMutAct_9fa48(\"553\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"553\");\n    const boldMarkers = stryMutAct_9fa48(\"554\") ? [] : (stryCov_9fa48(\"554\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n    const patternParts = boldMarkers.map(createBoldPatternPart);\n\n    // Combine with OR operator for alternative matching\n    const pattern = patternParts.join(stryMutAct_9fa48(\"555\") ? \"\" : (stryCov_9fa48(\"555\"), '|'));\n    return new RegExp(pattern, stryMutAct_9fa48(\"556\") ? \"\" : (stryCov_9fa48(\"556\"), 's'));\n  }\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  if (stryMutAct_9fa48(\"557\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"557\");\n    // Escape marker if it's a special regex character\n    const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? stryMutAct_9fa48(\"558\") ? `` : (stryCov_9fa48(\"558\"), `\\\\${marker}`) : marker;\n    return new RegExp(stryMutAct_9fa48(\"559\") ? `` : (stryCov_9fa48(\"559\"), `${escapedMarker}(.*?)${escapedMarker}`), stryMutAct_9fa48(\"560\") ? \"\" : (stryCov_9fa48(\"560\"), 'g'));\n  }\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  if (stryMutAct_9fa48(\"561\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"561\");\n    return stryMutAct_9fa48(\"562\") ? [] : (stryCov_9fa48(\"562\"), [ASTERISK_MARKER, UNDERSCORE_MARKER]);\n  }\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (stryMutAct_9fa48(\"563\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"563\");\n    if (stryMutAct_9fa48(\"566\") ? false : stryMutAct_9fa48(\"565\") ? true : stryMutAct_9fa48(\"564\") ? text?.trim() : (stryCov_9fa48(\"564\", \"565\", \"566\"), !(stryMutAct_9fa48(\"568\") ? text.trim() : stryMutAct_9fa48(\"567\") ? text : (stryCov_9fa48(\"567\", \"568\"), text?.trim())))) return stryMutAct_9fa48(\"569\") ? \"Stryker was here!\" : (stryCov_9fa48(\"569\"), '');\n    const segment = findBoldSegments(text);\n    if (stryMutAct_9fa48(\"572\") ? false : stryMutAct_9fa48(\"571\") ? true : stryMutAct_9fa48(\"570\") ? segment : (stryCov_9fa48(\"570\", \"571\", \"572\"), !segment)) return processAllItalicStyles(text);\n    return stryMutAct_9fa48(\"573\") ? [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)].join('') : (stryCov_9fa48(\"573\"), (stryMutAct_9fa48(\"574\") ? [] : (stryCov_9fa48(\"574\"), [processItalicBefore(segment.beforeText), segment.boldText, processBoldAfter(segment.afterText)])).filter(Boolean).join(stryMutAct_9fa48(\"575\") ? \"Stryker was here!\" : (stryCov_9fa48(\"575\"), '')));\n  }\n}\nfunction processItalicBefore(beforeText) {\n  if (stryMutAct_9fa48(\"576\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"576\");\n    return beforeText ? processAllItalicStyles(beforeText) : stryMutAct_9fa48(\"577\") ? \"Stryker was here!\" : (stryCov_9fa48(\"577\"), '');\n  }\n}\nfunction processBoldAfter(afterText) {\n  if (stryMutAct_9fa48(\"578\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"578\");\n    return afterText ? processTextPreservingBold(afterText) : stryMutAct_9fa48(\"579\") ? \"Stryker was here!\" : (stryCov_9fa48(\"579\"), '');\n  }\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (stryMutAct_9fa48(\"580\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"580\");\n    if (stryMutAct_9fa48(\"583\") ? !text && typeof text !== 'string' : stryMutAct_9fa48(\"582\") ? false : stryMutAct_9fa48(\"581\") ? true : (stryCov_9fa48(\"581\", \"582\", \"583\"), (stryMutAct_9fa48(\"584\") ? text : (stryCov_9fa48(\"584\"), !text)) || (stryMutAct_9fa48(\"586\") ? typeof text === 'string' : stryMutAct_9fa48(\"585\") ? false : (stryCov_9fa48(\"585\", \"586\"), typeof text !== (stryMutAct_9fa48(\"587\") ? \"\" : (stryCov_9fa48(\"587\"), 'string')))))) {\n      if (stryMutAct_9fa48(\"588\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"588\");\n        return text;\n      }\n    }\n\n    // We'll use a recursive approach with special handling for bold segments\n    return processTextPreservingBold(text);\n  }\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  if (stryMutAct_9fa48(\"589\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"589\");\n    const boldMatch = text.match(createBoldPattern());\n    if (stryMutAct_9fa48(\"592\") ? false : stryMutAct_9fa48(\"591\") ? true : stryMutAct_9fa48(\"590\") ? boldMatch : (stryCov_9fa48(\"590\", \"591\", \"592\"), !boldMatch)) {\n      if (stryMutAct_9fa48(\"593\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"593\");\n        return null;\n      }\n    }\n    const boldText = boldMatch[0];\n    const boldStartIndex = boldMatch.index;\n    const boldEndIndex = stryMutAct_9fa48(\"594\") ? boldStartIndex - boldText.length : (stryCov_9fa48(\"594\"), boldStartIndex + boldText.length);\n    return stryMutAct_9fa48(\"595\") ? {} : (stryCov_9fa48(\"595\"), {\n      boldText,\n      beforeText: stryMutAct_9fa48(\"596\") ? text : (stryCov_9fa48(\"596\"), text.substring(0, boldStartIndex)),\n      afterText: stryMutAct_9fa48(\"597\") ? text : (stryCov_9fa48(\"597\"), text.substring(boldEndIndex))\n    });\n  }\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  if (stryMutAct_9fa48(\"598\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"598\");\n    const pattern = createItalicsPattern(marker);\n    return text.replace(pattern, (match, capturedContent) => {\n      if (stryMutAct_9fa48(\"599\")) {\n        {}\n      } else {\n        stryCov_9fa48(\"599\");\n        return createItalicReplacementString(capturedContent, marker);\n      }\n    });\n  }\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  if (stryMutAct_9fa48(\"600\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"600\");\n    // Process the text through all italic markers using reduce\n    return getItalicMarkers().reduce(applyItalicFormatting, text);\n  }\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  if (stryMutAct_9fa48(\"601\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"601\");\n    return stryMutAct_9fa48(\"602\") ? `` : (stryCov_9fa48(\"602\"), `${marker}${content}${marker}`);\n  }\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  if (stryMutAct_9fa48(\"603\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"603\");\n    return (stryMutAct_9fa48(\"604\") ? [] : (stryCov_9fa48(\"604\"), [stryMutAct_9fa48(\"605\") ? `` : (stryCov_9fa48(\"605\"), `<${tagName}>`), content, stryMutAct_9fa48(\"606\") ? `` : (stryCov_9fa48(\"606\"), `</${tagName}>`)])).join(stryMutAct_9fa48(\"607\") ? \"Stryker was here!\" : (stryCov_9fa48(\"607\"), ''));\n  }\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  if (stryMutAct_9fa48(\"608\")) {\n    {}\n  } else {\n    stryCov_9fa48(\"608\");\n    // First wrap content with markdown markers, then with HTML tag\n    return wrapWithHtmlTag(stryMutAct_9fa48(\"609\") ? \"\" : (stryCov_9fa48(\"609\"), 'em'), wrapWithMarker(content, marker));\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/.stryker-tmp/sandbox-zy6zIE/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/full-width.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/generator.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'createArticleAttributes' has a complexity of 3. Maximum allowed is 2.","line":337,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":343,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'normalizeContentItem' has a complexity of 3. Maximum allowed is 2.","line":392,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":396,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'renderValueDiv' has a complexity of 4. Maximum allowed is 2.","line":405,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":417,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'hasRelatedLinks' has a complexity of 3. Maximum allowed is 2.","line":522,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":524,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'composeLinkParts' has a complexity of 4. Maximum allowed is 2.","line":705,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":713,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'hasToy' has a complexity of 4. Maximum allowed is 2.","line":752,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":754,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Create paragraphs HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - HTML string composed of paragraph elements.\n */\nfunction createParagraphs(content) {\n  if (Array.isArray(content)) {\n    return content.map(para => `<p>${para}</p>`).join('');\n  } else {\n    return `<p>${content}</p>`;\n  }\n}\n\n/**\n * Create a blockquote HTML string.\n * @param {string|string[]} content - A string or an array of strings.\n * @returns {string} - The blockquote HTML.\n */\nfunction createBlockquote(content) {\n  const paragraphs = createParagraphs(content);\n  return `<blockquote class=\"${CLASS.VALUE}\">${BLOCKQUOTE_CORNERS}${paragraphs}</blockquote>`;\n}\nimport { headElement } from './head.js';\nimport { fullWidthElement } from './full-width.js';\nimport scriptTag from './script.js';\nimport { HEADER_BANNER } from './title.js';\nimport {\n  createTag,\n  createAttrPair,\n  escapeHtml,\n  wrapHtml,\n  join,\n  ATTR_NAME,\n} from './html.js';\n\n// CSS class names\nconst CLASS = {\n  KEY: 'key',\n  VALUE: 'value',\n  ENTRY: 'entry',\n  ARTICLE_TITLE: 'article-title',\n  METADATA: 'metadata',\n  FOOTER: 'footer',\n  WARNING: 'warning',\n  MEDIA: 'media',\n  FULL_WIDTH: 'full-width',\n};\n\nconst BLOCKQUOTE_CORNERS = `<div class=\"corner corner-tl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-tr\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-bl\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div><div class=\"corner corner-br\"><div class=\"h-line\"></div><div class=\"v-line\"></div></div>`;\n\n// HTML tag names\nconst DIV_TAG_NAME = 'div';\nconst ARTICLE_TAG_NAME = 'article';\n\n// Date formatting constants\nconst DATE_LOCALE = 'en-GB';\nconst DATE_FORMAT_OPTIONS = {\n  day: 'numeric',\n  month: 'short',\n  year: 'numeric',\n};\n\n// Container ID\nconst CONTAINER_ID = 'container';\n\n// HTML generation helpers\n\n/**\n * Create a div element with specified classes and content\n * @param {string} classes - CSS classes to apply to the div\n * @param {string} content - HTML content to place inside the div\n * @returns {string} - HTML div element\n */\nfunction createDiv(classes, content) {\n  const classAttr = createAttrPair(ATTR_NAME.CLASS, classes);\n  return createTag(DIV_TAG_NAME, classAttr, content);\n}\n\n/**\n * Join CSS classes into a space-separated string\n * @param {string[]} classes - Array of CSS class names\n * @returns {string} - Space-separated class string\n */\nfunction joinClasses(classes) {\n  return classes.join(' ');\n}\n\n/**\n * Create a div with the value class and optional additional classes\n * @param {string} content - Content for the value div\n * @param {string[]} additionalClasses - Additional CSS classes to apply\n * @returns {string} - HTML div element with value class and any additional classes\n */\nfunction createValueDiv(content, additionalClasses = []) {\n  const classes = [CLASS.VALUE, ...additionalClasses].filter(Boolean);\n  const joinedClasses = joinClasses(classes);\n  return createDiv(joinedClasses, content);\n}\n\n/**\n * Create an array with two parts for joining\n * @param {string} first - The first part\n * @param {string} second - The second part\n * @returns {Array<string>} - Array containing both parts\n */\nfunction createParts(first, second) {\n  return [first, second];\n}\n\n/**\n * Create a pair with two elements\n * @param {string} first - The first element\n * @param {string} second - The second element\n * @returns {string} - Combined HTML without newlines\n */\nfunction createPair(first, second) {\n  const parts = createParts(first, second);\n  return join(parts);\n}\n\n/**\n * Convert a date string to a Date object\n * @param {string} dateString - The date string to convert\n * @returns {Date} - The Date object\n */\nfunction createDateFromString(dateString) {\n  return new Date(dateString);\n}\n\n/**\n * Format a date using the locale and options\n * @param {Date} date - The date to format\n * @returns {string} - The formatted date string\n */\nfunction formatDateWithOptions(date) {\n  return date.toLocaleDateString(DATE_LOCALE, DATE_FORMAT_OPTIONS);\n}\n\n/**\n * Format date in \"4 May 2022\" format\n * @param {string} dateString - The date string to format\n * @returns {string} - The formatted date string\n */\nfunction formatDate(dateString) {\n  const date = createDateFromString(dateString);\n  return formatDateWithOptions(date);\n}\n\n// Header components\n\n// No longer using newlines and indentation\n\nconst METADATA_TEXT = `Software developer and philosopher in Berlin`;\n\n/**\n * Create an empty div with the key class\n * @returns {string} - HTML div element with key class and no content\n */\nfunction createEmptyKeyDiv() {\n  return createDiv(CLASS.KEY, '');\n}\n\nfunction prefixWithEmptyKey(valueDiv) {\n  const emptyKeyDiv = createEmptyKeyDiv();\n  return createPair(emptyKeyDiv, valueDiv);\n}\n\n/**\n * Create the content for the header section\n */\nfunction createHeaderContent() {\n  const valueDivs = [\n    createValueDiv(HEADER_BANNER),\n    createValueDiv(METADATA_TEXT, [CLASS.METADATA])\n  ];\n\n  const parts = valueDivs.map(prefixWithEmptyKey);\n  \n  return join(parts);\n}\n\n/**\n * Create a section with the given content\n * @param {string} content - The content to wrap in a section\n * @returns {string} - HTML for the section\n */\nfunction createSection(content) {\n  return createDiv(CLASS.ENTRY, content);\n}\n\n/**\n * Create the header section with banner and metadata\n * @returns {string} - HTML for the header section\n */\nfunction createHeaderSection() {\n  const headerContent = createHeaderContent();\n  return createSection(headerContent);\n}\n\n// Footer components\nconst WARNING_MESSAGE =\n  'All content is authored by Matt Heard and is <a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY-NC-SA 4.0</a>, unless otherwise noted.';\n\n/**\n * Create the content for the footer section\n * @returns {string} - HTML for the footer content\n */\nfunction createFooterContent() {\n  const classes = joinClasses([CLASS.FOOTER, CLASS.VALUE, CLASS.WARNING]);\n  const footerDiv = createDiv(classes, WARNING_MESSAGE);\n  return prefixWithEmptyKey(footerDiv);\n}\n\n/**\n * Create the footer section with warning message\n * @returns {string} - HTML for the footer section\n */\nfunction createFooterSection() {\n  const footerContent = createFooterContent();\n  return createSection(footerContent);\n}\n\n// Page structure\n/**\n * Create the opening tag for the container div\n * @returns {string} - Opening div tag with container ID\n */\nfunction createContainerDivOpen() {\n  const idAttr = createAttrPair(ATTR_NAME.ID, CONTAINER_ID);\n  return `<${DIV_TAG_NAME} ${idAttr}>`;\n}\n\n/**\n * Create the header content array\n */\nfunction createHeaderContentArray(headerElement) {\n  return [\n    headElement,\n    '<body>',\n    createContainerDivOpen(),\n    '<!-- Header -->',\n    headerElement,\n  ];\n}\n\n/**\n * Create the page header with head element, body opening tag and header section\n */\nfunction createPageHeader() {\n  const headerElement = createHeaderSection();\n  const contentArray = createHeaderContentArray(headerElement);\n\n  return contentArray.join('');\n}\n\n/**\n * Create the closing container div\n */\nfunction createContainerDivClose() {\n  return '</div>';\n}\n\n/**\n * Create the body closing tag\n */\nfunction createBodyClose() {\n  return '</body>';\n}\n\n/**\n * Create the footer content array\n */\nfunction createFooterContentArray(footerElement) {\n  return [\n    '',\n    footerElement,\n    createContainerDivClose(),\n    scriptTag,\n    createBodyClose(),\n  ];\n}\n\n/**\n * Create the page footer with footer section, container div closing, and body closing tag\n */\nfunction createPageFooter() {\n  const footerElement = createFooterSection();\n  const contentArray = createFooterContentArray(footerElement);\n\n  return contentArray.join('');\n}\n\n/**\n * Convert a post to article HTML\n */\nfunction convertPostToArticleHTML(post) {\n  return generateArticle(post);\n}\n\n/**\n * Format article HTML with indentation\n */\nfunction formatArticleHTML(articleHTML) {\n  return articleHTML;\n}\n\n/**\n * Process posts and join article HTML\n */\nfunction processPostsToHTML(posts) {\n  return posts.map(convertPostToArticleHTML)\n              .map(formatArticleHTML)\n              .join('');\n}\n\n/**\n * Generate HTML for all articles in the blog\n */\nfunction generateArticles(posts) {\n  return processPostsToHTML(posts);\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createIdAttributeIfNeeded(post) {\n  if (!post.key) {\n    return '';\n  }\n\n  return ' ' + createAttrPair(ATTR_NAME.ID, post.key);\n}\n\n/**\n * Create attributes for an article element\n */\nfunction createArticleAttributes(post) {\n  const tagClasses = hasTags(post) ? post.tags.map(tag => `tag-${tag}`).join(' ') : '';\n  const classValue = tagClasses ? `${CLASS.ENTRY} ${tagClasses}` : CLASS.ENTRY;\n  const classAttr = createAttrPair(ATTR_NAME.CLASS, classValue);\n  const idAttr = createIdAttributeIfNeeded(post);\n  return `${classAttr}${idAttr}`;\n}\n\n/**\n * Format article content with full width element\n */\nfunction formatArticleContent(content) {\n  return `${fullWidthElement}${content}`;\n}\n\n/**\n * Create an article from a blog post\n */\nfunction generateArticle(post) {\n  const content = generateArticleContent(post);\n  const formattedContent = formatArticleContent(content);\n  const attributes = createArticleAttributes(post);\n\n  return createTag(ARTICLE_TAG_NAME, attributes, formattedContent);\n}\n\n/**\n * Get content array from post, defaulting to empty array if not present\n */\nfunction getContentArray(post) {\n  return post.content || [];\n}\n\n/**\n * Determine if an item is the first in the content array\n */\nfunction isFirstContentItem(index) {\n  return index === 0;\n}\n\n/**\n * Create a content item with index awareness\n */\nfunction createContentItemWithIndex(text, index) {\n  const isFirst = isFirstContentItem(index);\n  return createContentSectionItem(text, isFirst);\n}\n\n/**\n * Normalize a content item.\n * If content is already an object, return it unchanged;\n * otherwise, wrap it in an object with type 'text' and content fields.\n * @param {Object|string} content - The content item to normalize.\n * @returns {Object} - Normalized content object.\n */\nfunction normalizeContentItem(content) {\n  return (typeof content === 'object' && content !== null)\n    ? content\n    : { type: 'text', content };\n}\n\n/**\n * Mapping of content types to their renderer functions.\n */\nconst CONTENT_RENDERERS = {\n  quote: createBlockquote,\n};\n\nfunction renderValueDiv(normalizedContent) {\n  const { type, content } = normalizedContent;\n \n  if (type === 'quote') {\n    return CONTENT_RENDERERS.quote(content);\n  }\n \n  if (type === 'text' && Array.isArray(content)) {\n    return createBlockquote(content);\n  }\n \n  return `<p class=\"${CLASS.VALUE}\">${content}</p>`;\n}\n\n/**\n * Create a content section item with exact formatting\n * @param {Object|string} content - The content object or text\n * @param {boolean} isFirst - Whether this is the first content item\n * @returns {string} - Formatted content section HTML\n */\nfunction createContentSectionItem(content, isFirst) {\n  const normalizedContent = normalizeContentItem(content);\n  const key = isFirst ? 'text' : '';\n  const keyDiv = createDiv(CLASS.KEY, key);\n  const valueDiv = renderValueDiv(normalizedContent);\n \n  return formatSection(keyDiv, valueDiv);\n}\n\n/**\n * Generate the text content sections for a blog post\n */\nfunction generateContentSections(post) {\n  const contentArray = getContentArray(post);\n\n  const contentItems = contentArray.map(createContentItemWithIndex);\n\n  return combineHTMLSections(...contentItems);\n}\n\n/**\n * Generate header section for a blog post\n */\nfunction generateHeaderSection(post) {\n  const titleSection = generateTitleSection(post);\n  const dateSection = generateDateSection(post);\n  const tagsSection = generateTagsSection(post);\n\n  return combineHTMLSections(titleSection, dateSection, tagsSection);\n}\n\n/**\n * Create the title value for a blog post\n */\nfunction createTitleValue(post) {\n  const titleLink = `<a href=\"#${post.key}\">${post.title}</a>`;\n  const titleHeader = `<h2>${titleLink}</h2>`;\n  return `<div class=\"${CLASS.VALUE}\">${titleHeader}</div>`;\n}\n\n/**\n * Generate the title section for a blog post\n */\nfunction generateTitleSection(post) {\n  const titleClasses = joinClasses([CLASS.KEY, CLASS.ARTICLE_TITLE]);\n  const titleKey = createDiv(titleClasses, post.key);\n  const titleValue = createTitleValue(post);\n\n  return createPair(titleKey, titleValue);\n}\n\n/**\n * Generate the date section for a blog post\n */\nfunction generateDateSection(post) {\n  if (!post.publicationDate) {\n    return '';\n  }\n\n  const dateKey = createDiv(CLASS.KEY, 'pubAt');\n  const dateValue = `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${formatDate(post.publicationDate)}</p>`;\n\n  return createPair(dateKey, dateValue);\n}\n\n/**\n * Generate the tags section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the tags section\n */\nfunction generateTagsSection(post) {\n  if (!hasTags(post)) {\n    return '';\n  }\n\n  const tagsKey = createDiv(CLASS.KEY, 'tags');\n  const tagsContent = post.tags.map(tag => {\n    const escapedTag = escapeHtml(tag);\n    return `<a class=\"tag-${escapedTag}\">${escapedTag}</a>`;\n  }).join(', ');\n  const tagsValue = `<p class=\"${CLASS.VALUE} ${CLASS.METADATA}\">${tagsContent}</p>`;\n\n  return createPair(tagsKey, tagsValue);\n}\n\n/**\n * Check if post has the specified media type\n */\nfunction hasMediaType(post, mediaType) {\n  return !!post[mediaType];\n}\n\n/**\n * Check if post has related links\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has related links\n */\nfunction hasRelatedLinks(post) {\n  return post.relatedLinks !== undefined && Array.isArray(post.relatedLinks) && post.relatedLinks.length > 0;\n}\n\n/**\n * Check if post has tags\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has tags\n */\nfunction hasTags(post) {\n  return Array.isArray(post.tags) && post.tags.length > 0;\n}\n\n/**\n * Check if post either is YouTube content or has a publication date\n */\nfunction isValidMediaType(post, mediaType) {\n  return mediaType === 'youtube' || post.publicationDate;\n}\n\n/**\n * Check if media should be displayed\n */\nfunction shouldDisplayMedia(post, mediaType) {\n  return hasMediaType(post, mediaType) && isValidMediaType(post, mediaType);\n}\n\n/**\n * Create a key div for media sections\n */\nfunction createMediaKeyDiv(label) {\n  const classes = `${CLASS.KEY} ${CLASS.MEDIA}`;\n  return createDiv(classes, label);\n}\n\n/**\n * Format a section with key and value divs\n * @param {string} keyDiv - The key div HTML\n * @param {string} valueDiv - The value div HTML\n * @returns {string} - Formatted section HTML\n */\nfunction formatSection(keyDiv, valueDiv) {\n  return `${keyDiv}${valueDiv}`;\n}\n\n/**\n * Generate media content based on media type\n */\nfunction generateMediaContent(post, mediaType) {\n  const generators = {\n    illustration: createIllustrationContent,\n    audio: createAudioContent,\n    youtube: createYouTubeContent\n  };\n\n  return (generators[mediaType] || (() => ''))(post);\n}\n\n/**\n * Higher-order function for generating media sections\n */\nfunction createMediaSectionGenerator(mediaType, label) {\n  return function (post) {\n    if (!shouldDisplayMedia(post, mediaType)) {\n      return '';\n    }\n\n    const keyDiv = createMediaKeyDiv(label);\n    const valueDiv = generateMediaContent(post, mediaType);\n\n    return formatSection(keyDiv, valueDiv);\n  };\n}\n\n/**\n * Create illustration image element\n */\nfunction createIllustrationImage(post) {\n  // Use fileName if provided, otherwise fall back to publicationDate\n  const fileName = post.illustration.fileName || post.publicationDate;\n  const src = `${fileName}.${post.illustration.fileType}`;\n  const altText = post.illustration.altText;\n\n  return `<img loading=\"lazy\" src=\"${src}\" alt=\"${altText}\"/>`;\n}\n\n/**\n * Create illustration content\n */\nfunction createIllustrationContent(post) {\n  const image = createIllustrationImage(post);\n\n  return `<div class=\"${CLASS.VALUE}\">${image}</div>`;\n}\n\n/**\n * Create audio source element\n */\nfunction createAudioSource(post) {\n  const audioSrc = `${post.publicationDate}.${post.audio.fileType}`;\n  return `<source src=\"${audioSrc}\">`;\n}\n\n/**\n * Create audio content\n */\nfunction createAudioContent(post) {\n  const source = createAudioSource(post);\n\n  return `<audio class=\"${CLASS.VALUE}\" controls>${source}</audio>`;\n}\n\n/**\n * Create YouTube iframe with proper attributes\n */\nfunction createYouTubeIframe(post) {\n  const youtubeId = post.youtube.id;\n  const timestamp = post.youtube.timestamp;\n  const title = escapeHtml(post.youtube.title);\n\n  return `<iframe height=\"300px\" width=\"100%\" src=\"https://www.youtube.com/embed/${youtubeId}?start=${timestamp}\" title=\"${title}\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" loading=\"lazy\" allowfullscreen></iframe>`;\n}\n\n/**\n * Create YouTube content\n */\nfunction createYouTubeContent(post) {\n  const iframe = createYouTubeIframe(post);\n\n  return `<p class=\"${CLASS.VALUE}\">${iframe}</p>`;\n}\n\n\n/**\n * Mapping for media sections.\n * Each key maps to a function that generates the corresponding media section.\n */\nconst MEDIA_SECTIONS = {\n  illustration: createMediaSectionGenerator('illustration', 'illus'),\n  audio: createMediaSectionGenerator('audio', 'audio'),\n  youtube: createMediaSectionGenerator('youtube', 'video'),\n};\n\n/**\n * Generate all media sections for a blog post by iterating over the MEDIA_SECTIONS mapping.\n */\nfunction generateMediaSections(post) {\n  const sections = Object.values(MEDIA_SECTIONS).map(generator => generator(post));\n  return combineHTMLSections(...sections);\n}\n\n/**\n * Format a related link to display in the list\n * @param {Object} link - The related link object\n * @returns {string} - Formatted HTML for a related link\n */\nconst DEFAULT_RELATED_LINK_ATTRS = 'target=\"_blank\" rel=\"noopener\"';\n\nfunction escapeRelatedLinkFields(link) {\n  const fields = ['url', 'title', 'author', 'source', 'quote'];\n  \n  return fields.reduce((acc, field) => {\n    acc[field] = link[field] ? escapeHtml(link[field]) : '';\n    return acc;\n  }, { type: link.type });\n}\n\nfunction formatTitleByType(type, title) {\n  const formatters = {\n    book: t => `<em>_${t}_</em>`,\n    microblog: t => `\"${t}\"`,\n    article: t => `\"${t}\"`,\n    report: t => `\"${t}\"`\n  };\n\n  return (formatters[type] || (t => t))(title);\n}\n\nfunction formatBaseLink(type, url, title) {\n  const formattedTitle = formatTitleByType(type, title);\n  return `<a href=\"${url}\" ${DEFAULT_RELATED_LINK_ATTRS}>${formattedTitle}</a>`;\n}\n\nfunction composeLinkParts(baseLink, author, source, quote) {\n  const optionalParts = [\n    author && ` by ${author}`,\n    source && `, ${source}`,\n    quote && ` (\"${quote}\")`\n  ];\n\n  return `<li>${[baseLink, ...optionalParts.filter(Boolean)].join('')}</li>`;\n}\n\nfunction formatRelatedLink(link) {\n  const { url, title, author, source, quote, type } = escapeRelatedLinkFields(link);\n  const baseLink = formatBaseLink(type, url, title);\n  return composeLinkParts(baseLink, author, source, quote);\n}\n\n/**\n * Generate the related links section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the related links section\n */\nfunction generateRelatedLinksSection(post) {\n  if (!hasRelatedLinks(post)) {\n    return '';\n  }\n\n  const keyDiv = createDiv(CLASS.KEY, 'links');\n  // Join with an empty string to avoid spacing issues in the HTML output\n  const linksList = post.relatedLinks.map(link => formatRelatedLink(link)).join('');\n  const valueContent = `<ul class=\"related-links\">${linksList}</ul>`;\n  const valueDiv = createDiv(CLASS.VALUE, valueContent);\n\n  return formatSection(keyDiv, valueDiv);\n}\n\n/**\n * Combine multiple HTML sections into a single string\n */\nfunction combineHTMLSections(...sections) {\n  return sections.join('');\n}\n\n/**\n * Check if post has a toy component\n * @param {Object} post - The blog post\n * @returns {boolean} - True if post has a toy component\n */\nfunction hasToy(post) {\n  return post?.toy?.modulePath && post.toy.functionName;\n}\n\n/**\n * Generate the input section for a toy component\n * @returns {string} - HTML for the input section\n */\nfunction generateToyInputSection() {\n  const keyDiv = createDiv(CLASS.KEY, 'in');\n  const valueContent = '<form><input type=\"text\" disabled></form>';\n  const valueDiv = createValueDiv(valueContent);\n  \n  return formatSection(keyDiv, valueDiv);\n}\n\n/**\n * Generate the button section for a toy component\n * @returns {string} - HTML for the button section\n */\nfunction generateToyButtonSection() {\n  const keyDiv = createEmptyKeyDiv();\n  const valueContent = '<button type=\"submit\" disabled>Submit</button>';\n  const valueDiv = createValueDiv(valueContent);\n  \n  return formatSection(keyDiv, valueDiv);\n}\n\n/**\n * Generate the output section for a toy component\n * @returns {string} - HTML for the output section\n */\nfunction generateToyOutputSection() {\n  const keyDiv = createDiv(CLASS.KEY, 'out');\n  const valueContent = '<p class=\"output\">This toy requires Javascript to run.</p>';\n  const valueDiv = createValueDiv(valueContent, [CLASS.WARNING]);\n  \n  return formatSection(keyDiv, valueDiv);\n}\n\n/**\n * Generate script tag to add the component\n * @param {Object} post - The blog post\n * @returns {string} - HTML script tag\n */\nfunction generateToyScript(post) {\n  const scriptContent = `window.addComponent('${post.key}', '${post.toy.modulePath}', '${post.toy.functionName}');`;\n  return `<script type=\"module\">${scriptContent}</script>`;\n}\n\n/**\n * Generate the toy UI components for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy UI components\n */\nfunction generateToyUISection(post) {\n  if (!hasToy(post)) {\n    return '';\n  }\n  \n  return combineHTMLSections(\n    generateToyInputSection(),\n    generateToyButtonSection(),\n    generateToyOutputSection()\n  );\n}\n\n/**\n * Generate the toy script section for a blog post\n * @param {Object} post - The blog post\n * @returns {string} - HTML for the toy script section\n */\nfunction generateToyScriptSection(post) {\n  if (!hasToy(post)) {\n    return '';\n  }\n  \n  return generateToyScript(post);\n}\n\n/**\n * Get all sections for a blog post article.\n * @param {Object} post - The blog post.\n * @returns {string[]} - An array of HTML sections.\n */\nfunction getArticleSections(post) {\n  const headerSection = generateHeaderSection(post);\n  const mediaSection = generateMediaSections(post);\n  const contentSection = generateContentSections(post);\n  const toyUISection = generateToyUISection(post);\n  const relatedLinksSection = generateRelatedLinksSection(post);\n  const toyScriptSection = generateToyScriptSection(post);\n \n  return [\n    headerSection,\n    mediaSection,\n    contentSection,\n    toyUISection,\n    relatedLinksSection,\n    toyScriptSection\n  ];\n}\n\n/**\n * Generate the content of a blog post article\n */\nfunction generateArticleContent(post) {\n  return combineHTMLSections(...getArticleSections(post));\n}\n\n/**\n * Create blog HTML content array\n */\nfunction createBlogContentArray(header, articles, footer) {\n  // Remove the newline character between elements\n  return [header, articles, footer];\n}\n\n/**\n * Build the complete HTML content for the blog from header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {string} articles - The articles HTML.\n * @param {string} footer - The footer HTML.\n * @returns {string} - Combined HTML content.\n */\nfunction getBlogHtmlContent(header, articles, footer) {\n  const contentArray = createBlogContentArray(header, articles, footer);\n  return contentArray.join('');\n}\n\n/**\n * Retrieve the HTML for all articles from the blog.\n * @param {Object} blog - The blog object.\n * @returns {string} - Combined HTML for all articles.\n */\nfunction getArticles(blog) {\n  return generateArticles(blog.posts);\n}\n\n/**\n * Assemble the blog HTML content by combining header, articles, and footer.\n * @param {string} header - The header HTML.\n * @param {Object} blog - The blog object.\n * @param {string} footer - The footer HTML.\n * @returns {string} - The combined HTML content.\n */\nfunction assembleBlogHTML(header, blog, footer) {\n  const articles = getArticles(blog);\n  return getBlogHtmlContent(header, articles, footer);\n}\n\nexport function generateBlog(blog, header, footer, wrapHtml) {\n  const htmlContents = assembleBlogHTML(header, blog, footer);\n  return wrapHtml(htmlContents);\n}\n\nconst createBlogComponents = () => ({\n  header: createPageHeader(),\n  footer: createPageFooter(),\n  wrapFunc: wrapHtml,\n});\n\n/**\n * Extracts the blog generation arguments from the blog components.\n * @returns {Object} - An object containing header, footer, and wrapFunc.\n */\nfunction getBlogGenerationArgs() {\n  const components = createBlogComponents();\n  const { header, footer, wrapFunc } = components;\n  return { header, footer, wrapFunc };\n}\n\nexport const generateBlogOuter = (blog) => {\n  const { header, footer, wrapFunc } = getBlogGenerationArgs();\n  return generateBlog(blog, header, footer, wrapFunc);\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/head.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/html.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/interactive.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/main.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":175,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'toggleHideLink' has a complexity of 3. Maximum allowed is 2.","line":184,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":211,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Audio controls functionality\n(function() {\n  const audioElements = document.querySelectorAll(\"audio\");\n  \n  audioElements.forEach(function(audio, index) {\n    audio.removeAttribute(\"controls\");\n    \n    if (!audio.id) {\n      audio.id = \"audio-\" + index;\n    }\n    \n    const controlsContainer = document.createElement(\"div\");\n    controlsContainer.className = \"audio-controls\";\n    controlsContainer.id = \"controls-\" + audio.id;\n    \n    const timeDisplay = document.createElement(\"span\");\n    timeDisplay.className = \"audio-time\";\n    timeDisplay.textContent = \"0:00\";\n    \n    const playButton = document.createElement(\"a\");\n    playButton.href = \"#\";\n    playButton.textContent = \"PLAY\";\n    playButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.play();\n    });\n    \n    const pauseButton = document.createElement(\"a\");\n    pauseButton.href = \"#\";\n    pauseButton.textContent = \"PAUSE\";\n    pauseButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n    });\n    \n    const stopButton = document.createElement(\"a\");\n    stopButton.href = \"#\";\n    stopButton.textContent = \"STOP\";\n    stopButton.addEventListener(\"click\", function(e) {\n      e.preventDefault();\n      audio.pause();\n      audio.currentTime = 0;\n    });\n    \n    audio.addEventListener(\"timeupdate\", function() {\n      const minutes = Math.floor(audio.currentTime / 60);\n      const seconds = Math.floor(audio.currentTime % 60).toString().padStart(2, \"0\");\n      timeDisplay.textContent = minutes + \":\" + seconds;\n    });\n    \n    controlsContainer.appendChild(playButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(pauseButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(stopButton);\n    controlsContainer.appendChild(document.createTextNode(\" \"));\n    controlsContainer.appendChild(timeDisplay);\n    \n    audio.parentNode.insertBefore(controlsContainer, audio.nextSibling);\n  });\n})();\n\n// Interactive components functionality\n/**\n * Initialize an interactive component with a processing function\n * @param {string} id - The ID of the article element\n * @param {Function} processingFunction - The function to process input values\n */\nfunction initializeInteractiveComponent(id, processingFunction) {\n  // Get the article element\n  const article = document.getElementById(id);\n  \n  // Get the elements within the article\n  const inputElement = article.querySelector('input');\n  const submitButton = article.querySelector('button');\n  const outputElement = article.querySelector('p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n  \n  /**\n   * Enable controls and update status message\n   */\n  function enableControls() {\n    inputElement.disabled = false;\n    submitButton.disabled = false;\n    outputElement.textContent = 'Ready for input';\n    outputElement.parentElement.classList.remove('warning');\n  }\n  \n  /**\n   * Handle form submission events\n   * @param {Event} event - The submission event\n   */\n  function handleSubmit(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    const inputValue = inputElement.value;\n    \n    // Use the provided processing function\n    const result = processingFunction(inputValue);\n    \n    // Update the output\n    outputElement.textContent = result;\n  }\n  \n  // Add event listener to the submit button\n  submitButton.addEventListener('click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  inputElement.addEventListener('keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n  });\n  \n  // Enable controls when initialization is complete\n  enableControls();\n}\n\n/**\n * Initialize a component when it enters the viewport\n * @param {string} id - The ID of the article element to observe\n * @param {string} modulePath - Path to the module containing the processing function\n * @param {string} functionName - Name of the function to import from the module\n */\nfunction initializeWhenVisible(id, modulePath, functionName) {\n  const article = document.getElementById(id);\n  \n  // Create an observer instance\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      // If the article is visible\n      if (entry.isIntersecting) {\n        // Dynamically import the module only when the article is visible\n        import(modulePath).then((module) => {\n          const processingFunction = module[functionName];\n          \n          // Initialize the component with the imported function\n          initializeInteractiveComponent(id, processingFunction);\n        }).catch(error => {\n          console.error('Error loading module ' + modulePath + ':', error);\n        });\n        \n        // Stop observing once initialized\n        observer.disconnect();\n      }\n    });\n  }, {\n    // Options for the observer\n    root: null, // viewport\n    threshold: 0.1 // 10% visibility is enough to trigger\n  });\n  \n  // Start observing the article\n  observer.observe(article);\n}\n\n// Initialize all registered components when they become visible\nif (window.interactiveComponents && window.interactiveComponents.length > 0) {\n  console.log('Initializing', window.interactiveComponents.length, 'interactive components');\n  window.interactiveComponents.forEach(component => {\n    initializeWhenVisible(component.id, component.modulePath, component.functionName);\n  });\n} else {\n  console.warn('No interactive components found to initialize');\n}\n\n// Tag filtering functionality\nfunction hideArticlesByClass(className) {\n  var articles = document.getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (articles[i].classList.contains(className)) {\n      articles[i].style.display = 'none';\n    }\n  }\n}\n\nfunction toggleHideLink(link, className) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (link.nextElementSibling && link.nextElementSibling.classList.contains('hide-span')) {\n    // Remove the span if it exists.\n    link.nextElementSibling.remove();\n  } else {\n    // Create a new span element.\n    var span = document.createElement('span');\n    span.classList.add('hide-span');\n    // Append the opening text node.\n    span.appendChild(document.createTextNode(\" (\"));\n\n    // Create the hide anchor element.\n    var hideLink = document.createElement('a');\n    hideLink.textContent = \"hide\";\n    // Add click listener to trigger hideArticlesByClass.\n    hideLink.addEventListener('click', function(event) {\n      event.preventDefault();\n      hideArticlesByClass(className);\n    });\n    span.appendChild(hideLink);\n    // Append the closing text node.\n    span.appendChild(document.createTextNode(\")\"));\n\n    // Insert the span immediately after the link.\n    link.parentNode.insertBefore(span, link.nextSibling);\n  }\n}\n\n(function() {\n  Array.from(document.getElementsByTagName('a')).forEach(function(link) {\n    Array.from(link.classList).forEach(function(className) {\n      if (className.indexOf('tag-') === 0) {\n        link.addEventListener('click', function(event) {\n          event.preventDefault();\n          toggleHideLink(link, className);\n        });\n        return; // exit after first tag- match\n      }\n    });\n  });\n})();","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/script.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/styles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/title.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-19/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-21/booleanCoercer.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'coerceToBoolean' has a complexity of 4. Maximum allowed is 2.","line":9,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":22,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Coerces input to a boolean value if possible.\n * Returns a string representation of an object with a 'value' property if coercion is successful,\n * or a string representation of an empty object if coercion fails.\n *\n * @param {any} input - The value to coerce to boolean\n * @returns {string} - String representation of object with 'value' property if coercion successful, '{}' if not\n */\nexport function coerceToBoolean(input) {\n  const booleanMap = {\n    true: true,\n    false: false\n  };\n\n  if (typeof input === 'boolean') {\n    return `{ value: ${input} }`;\n  }\n\n  const normalized = (typeof input === 'string') ? booleanMap[input.toLowerCase()] : undefined;\n\n  return typeof normalized === 'boolean' ? `{ value: ${normalized} }` : '{}';\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-21/italics.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'processTextPreservingBold' has a complexity of 4. Maximum allowed is 2.","line":90,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":101,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'italics' has a complexity of 3. Maximum allowed is 2.","line":135,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":142,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Markdown marker characters\nconst ASTERISK_MARKER = '*';\nconst UNDERSCORE_MARKER = '_';\n\n// Pattern to match special regex characters that need escaping\nconst REGEX_SPECIAL_CHARS = /[.*+?^${}()|[\\]\\\\]/;\n\n/**\n * Creates a doubled marker (e.g., ** or __) for bold text\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - The doubled marker\n * @private\n */\nfunction createDoubledMarker(marker) {\n  return marker.repeat(2);\n}\n\n/**\n * Creates a regex pattern part for bold text with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Regex pattern string for bold with the specified marker\n * @private\n */\nfunction createBoldPatternPart(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  const doubledMarker = createDoubledMarker(escapedMarker);\n  \n  // Break the pattern into its constituent parts\n  const patternParts = [\n    '(?:', // Opening non-capturing group\n    doubledMarker, // Opening doubled marker\n    '.*?', // Lazy match of content\n    doubledMarker, // Closing doubled marker\n    ')' // Closing group\n  ];\n  \n  return patternParts.join('');\n}\n\n/**\n * Returns a regex pattern that matches both asterisk and underscore bold markdown\n * @returns {RegExp} - The regex pattern for bold markdown\n * @private\n */\nfunction createBoldPattern() {\n  const boldMarkers = [ASTERISK_MARKER, UNDERSCORE_MARKER];\n  const patternParts = boldMarkers.map(createBoldPatternPart);\n  \n  // Combine with OR operator for alternative matching\n  const pattern = patternParts.join('|');\n  \n  return new RegExp(pattern, 's');\n}\n\n/**\n * Returns a regex pattern that matches text wrapped with a specific marker\n * @param {string} marker - The marker character (* or _)\n * @returns {RegExp} - The regex pattern for the specified marker\n * @private\n */\nfunction createItalicsPattern(marker) {\n  // Escape marker if it's a special regex character\n  const escapedMarker = REGEX_SPECIAL_CHARS.test(marker) ? `\\\\${marker}` : marker;\n  return new RegExp(`${escapedMarker}(.*?)${escapedMarker}`, 'g');\n}\n\n/**\n * Returns the array of markers used for italic styles\n * @returns {Array} - Array of marker characters\n * @private\n */\nfunction getItalicMarkers() {\n  return [ASTERISK_MARKER, UNDERSCORE_MARKER];\n}\n\n/**\n * Process text recursively to handle all formatting cases, preserving bold segments.\n * This function identifies bold markdown segments and leaves them unmodified,\n * while processing the text before and after for italic formatting.\n * \n * @example\n * // Returns: '**bold** <em>*italic*</em>'\n * processTextPreservingBold('**bold** *italic*');\n * \n * @param {string} text - The text to process\n * @returns {string} - Processed text with HTML tags added around italics while preserving bold\n * @private\n */\nfunction processTextPreservingBold(text) {\n  if (!text?.trim()) return '';\n\n  const segment = findBoldSegments(text);\n  if (!segment) return processAllItalicStyles(text);\n\n  return [\n    processItalicBefore(segment.beforeText),\n    segment.boldText,\n    processBoldAfter(segment.afterText)\n  ].filter(Boolean).join('');\n}\n\nfunction processItalicBefore(beforeText) {\n  return beforeText ? processAllItalicStyles(beforeText) : '';\n}\n\nfunction processBoldAfter(afterText) {\n  return afterText ? processTextPreservingBold(afterText) : '';\n}\n\n// Main exported function\n\n/**\n * Adds HTML <em> tags around text marked with Markdown italics while preserving\n * the original Markdown characters.\n * \n * Handles both *single asterisk* and _underscore_ style Markdown italics.\n * Does NOT add <em> tags around bold markdown syntax (** or __).\n * \n * @example\n * // Returns: '<em>*italic*</em> text'\n * italics('*italic* text');\n * \n * @example\n * // Returns: '<em>_italic_</em> text'\n * italics('_italic_ text');\n * \n * @example\n * // Returns: '**bold** and <em>*italic*</em>'\n * italics('**bold** and *italic*');\n * \n * @param {string} text - The input text that may contain Markdown italics syntax\n * @returns {string} Text with HTML <em> tags added around Markdown-formatted italics\n */\nexport function italics(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n  \n  // We'll use a recursive approach with special handling for bold segments\n  return processTextPreservingBold(text);\n}\n\n// Helper functions for processing text\n\n/**\n * Find bold segments in text and split into bold text and surrounding text\n * \n * @param {string} text - The text to process\n * @returns {Object|null} - Object with boldText, beforeText, and afterText properties, or null if no bold found\n * @private\n */\nfunction findBoldSegments(text) {\n  const boldMatch = text.match(createBoldPattern());\n  \n  if (!boldMatch) {\n    return null;\n  }\n  \n  const boldText = boldMatch[0];\n  const boldStartIndex = boldMatch.index;\n  const boldEndIndex = boldStartIndex + boldText.length;\n  \n  return {\n    boldText,\n    beforeText: text.substring(0, boldStartIndex),\n    afterText: text.substring(boldEndIndex)\n  };\n}\n\n/**\n * Apply italic formatting for a specific marker to the text\n * @param {string} text - The text to process\n * @param {string} marker - The marker character (* or _)\n * @returns {string} - Text with the particular italic style formatted\n * @private\n */\nfunction applyItalicFormatting(text, marker) {\n  const pattern = createItalicsPattern(marker);\n  return text.replace(pattern, (match, capturedContent) => {\n    return createItalicReplacementString(capturedContent, marker);\n  });\n}\n\n/**\n * Process text through all italic style types (asterisk and underscore)\n * \n * @example\n * // Returns: '<em>*text*</em>'\n * processAllItalicStyles('*text*');\n * \n * @example\n * // Returns: '<em>_text_</em>'\n * processAllItalicStyles('_text_');\n * \n * @param {string} text - The text to process \n * @returns {string} - Text with all italic styles formatted\n * @private\n */\nfunction processAllItalicStyles(text) {\n  // Process the text through all italic markers using reduce\n  return getItalicMarkers().reduce(applyItalicFormatting, text);\n}\n\n/**\n * Wrap content with a marker at the beginning and end\n * @param {string} content - The content to wrap\n * @param {string} marker - The marker to add at beginning and end\n * @returns {string} - Content wrapped with markers\n * @private\n */\nfunction wrapWithMarker(content, marker) {\n  return `${marker}${content}${marker}`;\n}\n\n/**\n * Create an HTML tag wrapper for content\n * @param {string} tagName - The HTML tag name (without brackets)\n * @param {string} content - The content to wrap\n * @returns {string} - The content wrapped in the HTML tag\n * @private\n */\nfunction wrapWithHtmlTag(tagName, content) {\n  return [`<${tagName}>`, content, `</${tagName}>`].join('');\n}\n\n/**\n * Create a replacement string for italic markdown content\n * @param {string} content - The inner content of the markdown\n * @param {string} marker - The markdown marker character (* or _)\n * @returns {string} - HTML formatted replacement string\n * @private\n */\nfunction createItalicReplacementString(content, marker) {\n  // First wrap content with markdown markers, then with HTML tag\n  return wrapWithHtmlTag('em', wrapWithMarker(content, marker));\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]