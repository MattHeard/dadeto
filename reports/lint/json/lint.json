[{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/generate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/jest.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/reports/coverage/lcov-report/block-navigation.js","messages":[],"suppressedMessages":[{"ruleId":"complexity","severity":1,"message":"Function 'goToPrevious' has a complexity of 4. Maximum allowed is 2.","line":41,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'goToNext' has a complexity of 3. Maximum allowed is 2.","line":52,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":63,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'jump' has a complexity of 8. Maximum allowed is 2.","line":65,"column":12,"nodeType":"FunctionExpression","messageId":"complex","endLine":85,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/reports/coverage/lcov-report/prettify.js","messages":[],"suppressedMessages":[{"ruleId":"complexity","severity":1,"message":"Function 'k' has a complexity of 8. Maximum allowed is 2.","line":2,"column":2525,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":5372,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'ab' has a complexity of 7. Maximum allowed is 2.","line":2,"column":2791,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":3056,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'T' has a complexity of 7. Maximum allowed is 2.","line":2,"column":3056,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":3220,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'X' has a complexity of 18. Maximum allowed is 2.","line":2,"column":3220,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":4215,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'W' has a complexity of 23. Maximum allowed is 2.","line":2,"column":4215,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":5198,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'a' has a complexity of 4. Maximum allowed is 2.","line":2,"column":5372,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":6109,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'aa' has a complexity of 10. Maximum allowed is 2.","line":2,"column":5652,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":6047,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'o' has a complexity of 7. Maximum allowed is 2.","line":2,"column":6220,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":6388,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 5. Maximum allowed is 2.","line":2,"column":6420,"nodeType":"FunctionExpression","messageId":"complex","endLine":2,"endColumn":6697,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 15. Maximum allowed is 2.","line":2,"column":6722,"nodeType":"FunctionExpression","messageId":"complex","endLine":2,"endColumn":7511,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'i' has a complexity of 11. Maximum allowed is 2.","line":2,"column":7521,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":9272,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'Q' has a complexity of 10. Maximum allowed is 2.","line":2,"column":9373,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":10970,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'ae' has a complexity of 12. Maximum allowed is 2.","line":2,"column":9747,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":10260,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'ad' has a complexity of 5. Maximum allowed is 2.","line":2,"column":10260,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":10635,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'ai' has a complexity of 4. Maximum allowed is 2.","line":2,"column":10332,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":10541,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'D' has a complexity of 15. Maximum allowed is 2.","line":2,"column":10970,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":11894,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ae' is assigned a value but never used.","line":2,"column":11414,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11416,"suggestions":[{"messageId":"removeVar","data":{"varName":"ae"},"fix":{"range":[11430,11442],"text":""},"desc":"Remove unused variable 'ae'."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":1,"message":"'af' is assigned a value but never used.","line":2,"column":11438,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11440,"suggestions":[{"messageId":"removeVar","data":{"varName":"af"},"fix":{"range":[11454,11468],"text":""},"desc":"Remove unused variable 'af'."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ag' is assigned a value but never used.","line":2,"column":11471,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11473,"suggestions":[{"messageId":"removeVar","data":{"varName":"ag"},"fix":{"range":[11487,11499],"text":""},"desc":"Remove unused variable 'ag'."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'c' has a complexity of 4. Maximum allowed is 2.","line":2,"column":11903,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":12071,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'q' has a complexity of 4. Maximum allowed is 2.","line":2,"column":12071,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":12179,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'd' has a complexity of 5. Maximum allowed is 2.","line":2,"column":14061,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":14269,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'b' has a complexity of 4. Maximum allowed is 2.","line":2,"column":14425,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":15491,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-unused-vars","severity":1,"message":"'ae' is assigned a value but never used.","line":2,"column":14757,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14759,"suggestions":[{"messageId":"removeVar","data":{"varName":"ae"},"fix":{"range":[14773,14798],"text":""},"desc":"Remove unused variable 'ae'."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'U' has a complexity of 22. Maximum allowed is 2.","line":2,"column":14778,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":2,"endColumn":15487,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/reports/coverage/lcov-report/sorter.js","messages":[],"suppressedMessages":[{"ruleId":"complexity","severity":1,"message":"Function 'onFilterInput' has a complexity of 3. Maximum allowed is 2.","line":27,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":42,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'loadColumns' has a complexity of 4. Maximum allowed is 2.","line":53,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":75,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'loadRowData' has a complexity of 3. Maximum allowed is 2.","line":78,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":95,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'sortByIndex' has a complexity of 4. Maximum allowed is 2.","line":106,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":135,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function has a complexity of 3. Maximum allowed is 2.","line":108,"column":22,"nodeType":"FunctionExpression","messageId":"complex","endLine":112,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"complexity","severity":1,"message":"Function 'enableUI' has a complexity of 4. Maximum allowed is 2.","line":151,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":182,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/audio-controls.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/data.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'shouldUseExistingFetch' has a complexity of 3. Maximum allowed is 2.","line":1,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":7,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":64,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":82,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 5. Maximum allowed is 2.","line":91,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":122,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function shouldUseExistingFetch(state, logFn) {\n  if (state.blogStatus === 'loading' && state.blogFetchPromise) {\n    logFn('Blog data fetch already in progress.');\n    return true;\n  }\n  return false;\n}\n\n/**\n * Fetches blog data and updates the global state.\n * Ensures only one fetch happens at a time.\n * @param {object} state - The global state object.\n * @param {function} fetchFn - The fetch function to use.\n * @param {function} logFn - The logging function to use.\n * @param {function} errorFn - The error logging function to use.\n */\nexport function fetchAndCacheBlogData(state, fetchFn, logFn, errorFn) {\n  // Prevent multiple simultaneous fetches\n  if (shouldUseExistingFetch(state, logFn)) {\n    return state.blogFetchPromise; \n  }\n  \n  logFn('Starting to fetch blog data...');\n  state.blogStatus = 'loading';\n  state.blogError = null;\n  \n  state.blogFetchPromise = fetchFn('./blog.json') \n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      state.blog = data; // Update the blog property\n      state.blogStatus = 'loaded';\n      logFn('Blog data loaded successfully:', data);\n    })\n    .catch(err => {\n      state.blogStatus = 'error';\n      state.blogError = err;\n      errorFn('Error fetching blog data:', err);\n    })\n    .finally(() => {\n      state.blogFetchPromise = null; // Clear the promise tracking\n    });\n  \n  return state.blogFetchPromise; // Return the promise for potential chaining\n}\n\n// Helper function needed by getData\nexport const getDeepStateCopy = (state) => JSON.parse(JSON.stringify(state));\n\n/**\n * Gets a deep copy of the current global state, suitable for passing to toys.\n * It also handles initiating the blog data fetch if needed.\n * @param {object} globalState - The main application state.\n * @param {function} fetchFn - The fetch function.\n * @param {function} logFn - The logging function.\n * @param {function} errorFn - The error logging function.\n * @param {function} warnFn - The warning logging function.\n * @returns {object} A deep copy of the relevant state for the toy.\n */\nexport const getData = (globalState, fetchFn, logFn, errorFn, warnFn) => {\n  // Return a deep copy of the current global state\n  const stateCopy = getDeepStateCopy(globalState);\n  \n  // Check blog status and trigger fetch if needed, but don't block\n  if (stateCopy.blogStatus === 'idle') {\n    // Use the exported fetchAndCacheBlogData function from this module\n    fetchAndCacheBlogData(globalState, fetchFn, logFn, errorFn); // Trigger fetch (no await)\n  } else if (stateCopy.blogStatus === 'error') {\n    warnFn(\"Blog data previously failed to load:\", stateCopy.blogError);\n  }\n  \n  // Remove fetch-related properties from the copy returned to the toy\n  delete stateCopy.blogStatus;\n  delete stateCopy.blogError;\n  delete stateCopy.blogFetchPromise;\n  \n  return stateCopy;\n};\n\n/**\n * Updates the global state, preserving internal fetch/blog properties.\n * @param {object} newData - The new state object (must have 'temporary').\n * @param {object} globalState - The current global state to modify.\n * @param {function} logFn - The logging function.\n * @param {function} errorFn - The error logging function.\n */\nexport const setData = (newData, globalState, logFn, errorFn) => {\n  // Replace the entire global state, but validate basic structure\n  if (typeof newData === 'object' && newData !== null && newData.hasOwnProperty('temporary')) {\n    // Preserve the internal blog loading state properties when updating\n    const currentBlogStatus = globalState.blogStatus;\n    const currentBlogError = globalState.blogError;\n    const currentBlogFetchPromise = globalState.blogFetchPromise;\n    const currentBlogData = globalState.blog; // Preserve actual blog data too\n    \n    // Overwrite the globalState reference with newData\n    // WARNING: This might not modify the original object in the caller's scope \n    // if globalState was passed by value (which objects usually aren't, but be mindful).\n    // A safer pattern might be to mutate properties directly: globalState.temporary = newData.temporary, etc.\n    // Or return the new state and let the caller assign it.\n    // For now, assuming this reassignment works as intended in the current structure.\n    Object.assign(globalState, newData); // More robust way to merge/update\n    \n    // Restore internal properties that shouldn't be overwritten by toys\n    globalState.blogStatus = currentBlogStatus;\n    globalState.blogError = currentBlogError;\n    globalState.blogFetchPromise = currentBlogFetchPromise;\n    // Ensure the blog data wasn't wiped out if it wasn't included in newData\n    if (!newData.hasOwnProperty('blog')) {\n      globalState.blog = currentBlogData;\n    }\n    \n    logFn('Global state updated:', globalState);\n  } else {\n    errorFn('setData received invalid data structure:', newData);\n    throw new Error('setData requires an object with at least a \\'temporary\\' property.');\n  }\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/document.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/main.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'querySelectorAll' is defined but never used.","line":17,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":17,"endColumn":19,"suggestions":[{"messageId":"removeVar","data":{"varName":"querySelectorAll"},"fix":{"range":[663,683],"text":""},"desc":"Remove unused variable 'querySelectorAll'."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"let globalState = {\n  blog: null, // Holds the fetched blog data\n  blogStatus: 'idle', // 'idle', 'loading', 'loaded', 'error'\n  blogError: null, // Stores any error during fetch\n  blogFetchPromise: null, // Tracks the ongoing fetch promise\n  temporary: {} // Holds data managed by toys like setTemporary\n};\n\nimport { setupAudio } from './audio-controls.js';\nimport { initializeVisibleComponents, handleModuleError, initialiseModule, importModule } from './toys.js';\nimport { hideArticlesByClass, toggleHideLink } from './tags.js';\nimport { fetchAndCacheBlogData, getData, setData } from './data.js';\nimport {\n  getElementById,\n  getAudioElements,\n  querySelector,\n  querySelectorAll,\n  removeControlsAttribute,\n  createElement,\n  createTextNode,\n  stopDefault,\n  playAudio,\n  pauseAudio,\n  addEventListener,\n  appendChild,\n  insertBefore,\n  log,\n  warn,\n  error,\n  addWarning,\n  getRandomNumber,\n  getCurrentTime,\n  hasNextSiblingClass\n} from './document.js';\n\nfunction createEnv() {\n  return new Map([\n    [\"getRandomNumber\", getRandomNumber],\n    [\"getCurrentTime\", getCurrentTime],\n    [\"getData\", () => getData(globalState, fetch, log, error, warn)],\n    [\"setData\", (newData) => setData(newData, globalState, log, error)]\n  ]);\n}\n\nfunction createIntersectionObserver(article, modulePath, functionName) {\n  return new IntersectionObserver((entries, observer) =>\n    handleIntersectionEntries(entries, observer, modulePath, article, functionName, importModule), {\n    root: null,\n    threshold: 0.1\n  });\n}\n\nfunction handleIntersection(entry, observer, modulePath, article, functionName, importModule) {\n  if (entry.isIntersecting) {\n    importModule(\n      modulePath,\n      initialiseModule(article, functionName, querySelector, globalState, stopDefault, () => createEnv(), error, addWarning, addEventListener, fetch),\n      handleModuleError(modulePath, error)\n    );\n    observer.disconnect();\n  }\n}\n\nfunction handleIntersectionEntries(entries, observer, modulePath, article, functionName) {\n  entries.forEach(entry => handleIntersection(entry, observer, modulePath, article, functionName, importModule));\n}\n\n// Interactive components functionality\ninitializeVisibleComponents(\n  window, \n  document, \n  log, \n  warn, \n  getElementById, \n  createIntersectionObserver // Pass the function defined in main.js\n);\n\n// Tag filtering functionality\n\nconst handleTagLinks = () => {\n  const handleLink = link => {\n    const handleClassName = className => {\n      if (className.indexOf('tag-') === 0) {\n        const removeNextSibling = link =>\n          link.nextElementSibling && link.nextElementSibling.remove();\n\n        const handleClick = event => {\n          stopDefault(event);\n          toggleHideLink(\n            link,\n            className,\n            hasNextSiblingClass,\n            removeNextSibling,\n            (link, className) => {\n              var span = createElement(document, 'span');\n              span.classList.add('hide-span');\n              appendChild(span, document.createTextNode(\" (\"));\n\n              var hideLink = createElement(document, 'a');\n              hideLink.textContent = \"hide\";\n              addEventListener(hideLink, 'click', function(event) {\n                stopDefault(event);\n                hideArticlesByClass(\n                  className,\n                  tagName => document.getElementsByTagName(tagName),\n                  (element, cls) => element.classList.contains(cls),\n                  element => element.style.display = 'none'\n                );\n              });\n\n              appendChild(span, hideLink);\n              appendChild(span, document.createTextNode(\")\"));\n              insertBefore(link.parentNode, span, link.nextSibling);\n            }\n          );\n        };\n\n        addEventListener(link, 'click', handleClick);\n        return; // exit after first tag- match\n      }\n    };\n\n    Array.from(link.classList).forEach(handleClassName);\n  };\n\n  Array.from(document.getElementsByTagName('a')).forEach(handleLink);\n};\n\nhandleTagLinks();\n\n// Initial fetch of blog data when the script loads\nfetchAndCacheBlogData(globalState, fetch, log, error);\n\nsetupAudio(\n  document,\n  getAudioElements,\n  removeControlsAttribute,\n  createElement,\n  createTextNode,\n  stopDefault,\n  playAudio,\n  pauseAudio,\n  addEventListener,\n  appendChild,\n  insertBefore\n);","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/tags.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'hideArticlesByClass' has a complexity of 3. Maximum allowed is 2.","line":12,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Functions for handling tags and filtering articles\n */\n\n/**\n * Hides articles that contain a specific CSS class\n * @param {string} className - The CSS class to filter by\n * @param {Function} getElementsByTagName - Function to get elements by tag name\n * @param {Function} hasClassFn - Function to check if an element has a class\n * @param {Function} hideElementFn - Function to hide an element\n */\nexport function hideArticlesByClass(className, getElementsByTagName, hasClassFn, hideElementFn) {\n  var articles = getElementsByTagName('article');\n  for (var i = 0; i < articles.length; i++) {\n    if (hasClassFn(articles[i], className)) {\n      hideElementFn(articles[i]);\n    }\n  }\n}\n\n/**\n * Toggles the hide link for a given tag link\n * @param {HTMLElement} link - The tag link element\n * @param {string} className - The CSS class to filter by\n * @param {Function} hasNextSiblingClass - Function to check if the next sibling has a class\n * @param {Function} removeNextSibling - Function to remove the next sibling\n * @param {Function} createHideSpan - Function to create the hide span element\n */\nexport function toggleHideLink(link, className, hasNextSiblingClass, removeNextSibling, createHideSpan) {\n  // Check if a span with the hide link already exists immediately after the link.\n  if (hasNextSiblingClass(link, 'hide-span')) {\n    // Remove the span if it exists.\n    removeNextSibling(link);\n  } else {\n    createHideSpan(link, className);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/browser/toys.js","messages":[{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 8. Maximum allowed is 2.","line":81,"column":157,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":120,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'initializeVisibleComponents' has a complexity of 3. Maximum allowed is 2.","line":176,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":191,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Imports a module dynamically with success and error handling\n * @param {string} modulePath - Path to the module to import\n * @param {Function} onSuccess - Function to call when import succeeds\n * @param {Function} onError - Function to call when import fails\n */\nexport function importModule(modulePath, onSuccess, onError) {\n  import(modulePath).then(onSuccess).catch(onError);\n}\n\n/**\n * Creates an error handler for module loading errors\n * @param {string} modulePath - Path to the module that failed to load\n * @param {Function} errorFn - Error logging function\n * @returns {Function} Error handler function\n */\nexport function handleModuleError(modulePath, errorFn) {\n  return (e) => {\n    errorFn('Error loading module ' + modulePath + ':', e);\n  };\n}\n\n/**\n * Creates a module initializer function that will be called when a dynamic import completes\n * @param {HTMLElement} article - The article element containing the toy\n * @param {string} functionName - The name of the exported function to use from the module\n * @param {Function} querySelector - Function to find elements within the article\n * @param {object} globalState - The shared application state\n * @param {Function} stopDefault - Function to prevent default event action\n * @param {Function} createEnv - Function to create the environment map for the toy\n * @param {Function} error - Function for logging errors\n * @param {Function} addWarning - Function to add a warning style to the output\n * @param {Function} addEventListener - Function to add event listeners\n * @param {Function} fetch - Function for making HTTP requests\n * @returns {Function} A function that takes a module and initializes the interactive component\n */\nexport function initialiseModule(article, functionName, querySelector, globalState, stopDefault, createEnv, error, addWarning, addEventListener, fetch) {\n  return (module) => {\n    const processingFunction = module[functionName];\n    initializeInteractiveComponent(\n      article,\n      processingFunction,\n      querySelector,\n      globalState,\n      stopDefault,\n      createEnv,\n      error,\n      addWarning,\n      addEventListener,\n      fetch\n    );\n  };\n}\n\n/**\n * Enable controls and update status message for an interactive component\n * @param {HTMLInputElement} inputElement\n * @param {HTMLButtonElement} submitButton\n * @param {HTMLElement} outputElement\n */\nexport function enableInteractiveControls(inputElement, submitButton, outputElement) {\n  inputElement.disabled = false;\n  submitButton.disabled = false;\n  outputElement.textContent = 'Ready for input';\n  outputElement.parentElement.classList.remove('warning');\n}\n\n/**\n * Creates a submit handler function for an interactive toy.\n * @param {HTMLInputElement} inputElement - The input field.\n * @param {HTMLElement} outputElement - The element to display output/errors.\n * @param {object} globalState - The shared application state.\n * @param {Function} processingFunction - The toy's core logic function.\n * @param {Function} stopDefault - Function to prevent default event action.\n * @param {Function} createEnv - Function to create the environment map for the toy.\n * @param {Function} errorFn - Function for logging errors.\n * @param {Function} addWarningFn - Function to add a warning style to the output.\n * @param {Function} fetchFn - Function to fetch data from a URL.\n * @returns {Function} An event handler function.\n */\nexport const createHandleSubmit = (inputElement, outputElement, globalState, processingFunction, stopDefault, createEnv, errorFn, addWarningFn, fetchFn) => (event) => {\n  if (event) {\n    stopDefault(event);\n  }\n  const inputValue = inputElement.value;\n  \n  try {\n    const env = createEnv(globalState);\n\n    // Call the processing function with the input value\n    const result = processingFunction(inputValue, env);\n\n    let parsed;\n    try {\n      parsed = JSON.parse(result);\n    } catch {\n      parsed = null;\n    }\n\n    if (parsed && typeof parsed === 'object' && parsed.request && typeof parsed.request.url === 'string') {\n      fetchFn(parsed.request.url)\n        .then(response => response.text())\n        .then(body => {\n          outputElement.textContent = body;\n        })\n        .catch(fetchError => {\n          errorFn('Error fetching request URL:', fetchError);\n          outputElement.textContent = 'Error fetching URL: ' + fetchError.message;\n          addWarningFn(outputElement);\n        });\n    } else {\n      // Default behavior\n      outputElement.textContent = result;\n    }\n  } catch (e) {\n    errorFn('Error processing input:', e);\n    outputElement.textContent = 'Error: ' + e.message;\n    addWarningFn(outputElement);\n  }\n};\n\n/**\n * Initializes the interactive elements (input, button, output) within a toy's article element.\n * Sets up event listeners and initial state.\n * @param {HTMLElement} article - The article element containing the toy.\n * @param {Function} processingFunction - The toy's core logic function.\n * @param {Function} querySelectorFn - Function to find elements within the article.\n * @param {object} globalState - The shared application state.\n * @param {Function} stopDefaultFn - Function to prevent default event action.\n * @param {Function} createEnvFn - Function to create the environment map for the toy.\n * @param {Function} errorFn - Function for logging errors.\n * @param {Function} addWarningFn - Function to add a warning style to the output.\n * @param {Function} addEventListenerFn - Function to add event listeners.\n */\nexport function initializeInteractiveComponent(article, processingFunction, querySelectorFn, globalState, stopDefaultFn, createEnvFn, errorFn, addWarningFn, addEventListenerFn, fetchFn) {\n  // Get the elements within the article\n  const inputElement = querySelectorFn(article, 'input');\n  const submitButton = querySelectorFn(article, 'button');\n  const outputElement = querySelectorFn(article, 'p.output');\n  \n  // Disable controls during initialization\n  inputElement.disabled = true;\n  submitButton.disabled = true;\n  \n  // Update message to show JS is running\n  outputElement.textContent = 'Initialising...';\n\n  // Create the submit handler using the function from this module\n  const handleSubmit = createHandleSubmit(inputElement, outputElement, globalState, processingFunction, stopDefaultFn, createEnvFn, errorFn, addWarningFn, fetchFn);\n\n  // Add event listener to the submit button\n  addEventListenerFn(submitButton, 'click', handleSubmit);\n  \n  // Add event listener for Enter key in the input field\n  addEventListenerFn(inputElement, 'keypress', (event) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event); // Use the created handleSubmit\n    }\n  });\n\n  // Enable controls when initialization is complete using the function from this module\n  enableInteractiveControls(inputElement, submitButton, outputElement);\n}\n\n/**\n * Finds all interactive components registered on the window and sets up\n * IntersectionObservers (via the provided creator function) to lazy-load\n * and initialize them when they enter the viewport.\n * @param {Window} win - The window object.\n * @param {Document} doc - The document object.\n * @param {Function} logFn - Logging function.\n * @param {Function} warnFn - Warning function.\n * @param {Function} getElementByIdFn - Function to get element by ID.\n * @param {Function} createIntersectionObserverFn - Function that creates an IntersectionObserver for a given article, module path, and function name.\n */\nexport function initializeVisibleComponents(win, doc, logFn, warnFn, getElementByIdFn, createIntersectionObserverFn) {\n  if (win.interactiveComponents && win.interactiveComponents.length > 0) {\n    logFn('Initializing', win.interactiveComponents.length, 'interactive components via IntersectionObserver');\n    win.interactiveComponents.forEach(component => {\n      const article = getElementByIdFn(doc, component.id);\n      if (article) {\n        const observer = createIntersectionObserverFn(article, component.modulePath, component.functionName);\n        observer.observe(article);\n      } else {\n        warnFn(`Could not find article element with ID: ${component.id} for component initialization.`);\n      }\n    });\n  } else {\n    warnFn('No interactive components found to initialize');\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/copy.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'findJsFiles' has a complexity of 6. Maximum allowed is 2.","line":26,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":38,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#!/usr/bin/env node\n\nimport fs from 'fs';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\n// Get __dirname equivalent in ES module scope\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Define base directories\nconst projectRoot = path.resolve(__dirname, '../..'); // Adjust based on script location\nconst srcDir = path.resolve(projectRoot, 'src');\nconst publicDir = path.resolve(projectRoot, 'public');\nconst srcToysDir = path.resolve(srcDir, 'toys');\nconst srcBrowserDir = path.resolve(srcDir, 'browser');\n\n// Ensure public directory exists\nif (!fs.existsSync(publicDir)) {\n  fs.mkdirSync(publicDir, { recursive: true });\n}\n\n// --- Copy Toy Files --- \n\n// Function to recursively find JS files in the toys directory\nfunction findJsFiles(dir) {\n  let jsFiles = [];\n  const entries = fs.readdirSync(dir, { withFileTypes: true });\n  for (const entry of entries) {\n    const fullPath = path.join(dir, entry.name);\n    if (entry.isDirectory()) {\n      jsFiles = jsFiles.concat(findJsFiles(fullPath));\n    } else if (entry.isFile() && entry.name.endsWith('.js') && !entry.name.endsWith('.test.js')) {\n      jsFiles.push(fullPath);\n    }\n  }\n  return jsFiles;\n}\n\n// Find all JS files in src/toys\nconst toyFiles = findJsFiles(srcToysDir);\n\n// Copy each toy file to the corresponding path in public\ntoyFiles.forEach(filePath => {\n  const relativePath = path.relative(srcToysDir, filePath);\n  const destPath = path.join(publicDir, relativePath);\n  const destDir = path.dirname(destPath);\n\n  // Ensure the destination directory exists\n  if (!fs.existsSync(destDir)) {\n    fs.mkdirSync(destDir, { recursive: true });\n  }\n\n  // Copy the file\n  fs.copyFileSync(filePath, destPath);\n  console.log(`Copied: ${filePath} -> ${destPath}`);\n});\n\nconsole.log('Toy files copied successfully!');\n\n// --- Copy Specific Assets --- \n\nconst assetsToCopy = [\n  { src: path.join(srcDir, 'blog.json'), dest: path.join(publicDir, 'blog.json') },\n  { src: path.join(srcBrowserDir, 'data.js'), dest: path.join(publicDir, 'data.js') },\n  { src: path.join(srcBrowserDir, 'main.js'), dest: path.join(publicDir, 'main.js') },\n  { src: path.join(srcBrowserDir, 'toys.js'), dest: path.join(publicDir, 'toys.js') },\n  { src: path.join(srcBrowserDir, 'audio-controls.js'), dest: path.join(publicDir, 'audio-controls.js') },\n  { src: path.join(srcBrowserDir, 'document.js'), dest: path.join(publicDir, 'document.js') },\n  { src: path.join(srcBrowserDir, 'tags.js'), dest: path.join(publicDir, 'tags.js') }\n];\n\nassetsToCopy.forEach(asset => {\n  if (fs.existsSync(asset.src)) {\n    fs.copyFileSync(asset.src, asset.dest);\n    console.log(`Copied: ${asset.src} -> ${asset.dest}`);\n  } else {\n    console.warn(`Warning: Asset not found, skipping copy: ${asset.src}`);\n  }\n});\n\nconsole.log('Specific assets copied successfully!');\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/full-width.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/generator.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/head.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/html.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/interactive.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/styles.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/generator/title.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/test/toys/2025-04-06/ticTacToe.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2024-10-02/hello.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-19/identity.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-21/booleanCoercer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-21/italics.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-26/prettyFloat.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'handleSimpleCases' has a complexity of 3. Maximum allowed is 2.","line":39,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function buildDecomposedResult(num) {\n  const A = formatDecimal(num);\n  const decomposition = getIEEEDecomposition(num);\n  if (!decomposition) return \"\";\n  return formatFloatDecomposition(A, decomposition);\n}\n\nexport function decomposeFloat(input) {\n  const num = Number(input);\n  const simple = handleSimpleCases(num);\n  if (simple !== null) return simple;\n  return buildDecomposedResult(num);\n}\n\nfunction getZeroVariantResult(num) {\n  const result = isZeroVariant(num);\n  return result !== null ? result : null;\n}\n\nfunction getIEEEDecomposition(num) {\n  const parts = decomposeIEEE754(num);\n  if (!isValidIEEEParts(parts)) return null;\n  return getSignificandAndExponent(parts);\n}\n\nfunction formatFloatDecomposition(decimal, { B, C }) {\n  return `${decimal} (${B.toString()} × 2^${C.toString()})`;\n}\n\nfunction getZeroVariantString(num) {\n  return getZeroVariantResult(num);\n}\n\nfunction resolveZeroVariant(num) {\n  const zeroResult = getZeroVariantString(num);\n  return zeroResult ? zeroResult : null;\n}\n\nfunction handleSimpleCases(num) {\n  if (!Number.isFinite(num)) return \"\";\n  if (resolveZeroVariant(num)) return resolveZeroVariant(num);\n  return null;\n}\n\nfunction isPositiveZero(n) {\n  return Object.is(n, 0);\n}\n\nfunction isNegativeZero(n) {\n  return Object.is(n, -0);\n}\n\nfunction isPositiveZeroResult(num) {\n  return isPositiveZero(num) ? \"0 (0 × 2^0)\" : null;\n}\n\nfunction isNegativeZeroResult(num) {\n  return isNegativeZero(num) ? \"0 (-0 × 2^0)\" : null;\n}\n\nfunction isZeroVariant(num) {\n  return isPositiveZeroResult(num) || isNegativeZeroResult(num);\n}\n\nfunction formatDecimal(num) {\n  let A = num.toPrecision(17);\n  return A.includes('.') ? A.replace(/\\.?0+$/, '') : A;\n}\n\nfunction hasIEEEFields(parts) {\n  return ['sign', 'mantissa', 'exponent'].every(key => key in parts);\n}\n\nfunction isValidIEEEParts(parts) {\n  return Boolean(parts) && hasIEEEFields(parts);\n}\n\nfunction getSignificandAndExponent({ sign, mantissa, exponent }) {\n  const signValue = sign === 0 ? 1n : -1n;\n  const fullSignificand = (1n << 52n) | BigInt(mantissa);\n  const B = signValue * fullSignificand;\n  const C = BigInt(exponent - 1023) - 52n;\n  return { B, C };\n}\n\nfunction decomposeIEEE754(value) {\n  if (!Number.isFinite(value)) return {};\n\n  const bits = getFloat64Bits(value);\n  return extractIEEEComponents(bits);\n}\n\nfunction getFloat64Bits(value) {\n  const buffer = new ArrayBuffer(8);\n  const floatView = new Float64Array(buffer);\n  const byteView = new Uint8Array(buffer);\n\n  floatView[0] = value;\n\n  let bits = 0n;\n  for (let i = 7; i >= 0; i--) {\n    bits = (bits << 8n) | BigInt(byteView[i]);\n  }\n\n  return bits;\n}\n\nfunction extractIEEEComponents(bits) {\n  const sign = Number((bits >> 63n) & 1n);\n  const exponentBits = (bits >> 52n) & 0x7FFn;\n  const mantissaBits = bits & 0xFFFFFFFFFFFFFn;\n\n  if (exponentBits === 0n) {\n    return {};\n  }\n\n  return {\n    sign,\n    mantissa: Number(mantissaBits),\n    exponent: Number(exponentBits),\n  };\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-28/rand.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-29/fishingGame.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'getBaitData' has a complexity of 3. Maximum allowed is 2.","line":24,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"function isRecognizedBait(baitKey, baitOptions) {\n  return baitKey in baitOptions;\n}\n\nfunction isEmptyBait(baitKey) {\n  return baitKey.length === 0;\n}\n\nfunction getDefaultBaitResponse(moodDescription) {\n  return {\n    isError: true,\n    message: `You cast your line with nothing but hesitation. Without any bait, the waters remain undisturbed in their ${moodDescription}.`\n  };\n}\n\nfunction getRecognizedBait(baitKey, baitOptions) {\n  return baitOptions[baitKey];\n}\n\nfunction getUnrecognizedBait() {\n  return { modifier: 0, description: \"an unconventional bait\" };\n}\n\nfunction getBaitData(input, baitOptions, moodDescription) {\n  const baitKey = input.trim().toLowerCase();\n  const recognized = isRecognizedBait(baitKey, baitOptions);\n  if (recognized) return getRecognizedBait(baitKey, baitOptions);\n  if (isEmptyBait(baitKey)) return getDefaultBaitResponse(moodDescription);\n  return getUnrecognizedBait();\n}\n\nfunction getTimeOfDay(hour) {\n  const ranges = [\n    { start: 5, end: 12, label: \"morning\" },\n    { start: 12, end: 17, label: \"afternoon\" },\n    { start: 17, end: 21, label: \"evening\" },\n    { start: 21, end: 24, label: \"night\" },\n    { start: 0, end: 5, label: \"night\" },\n  ];\n  const match = ranges.find(({ start, end }) => hour >= start && hour < end);\n  if (!match) throw new Error(`Unrecognized hour: ${hour}`);\n  return match.label;\n}\n\nfunction getSeason(month) {\n  const ranges = [\n    { months: [11, 0, 1], label: \"winter\" },\n    { months: [2, 3, 4], label: \"spring\" },\n    { months: [5, 6, 7], label: \"summer\" },\n    { months: [8, 9, 10], label: \"fall\" },\n  ];\n  const match = ranges.find(({ months }) => months.includes(month));\n  if (!match) throw new Error(`Unrecognized month: ${month}`);\n  return match.label;\n}\n\nfunction getMoodDescription(season, timeOfDay) {\n  const seasonDescriptions = {\n    winter: \"crisp, icy waters\",\n    spring: \"bubbling, fresh currents\",\n    summer: \"warm, shimmering waves\",\n    fall: \"cool, reflective ponds\",\n  };\n  const timeDescriptions = {\n    morning: \"as dawn breaks with promise\",\n    afternoon: \"under a vibrant sun\",\n    evening: \"in the glow of twilight\",\n    night: \"beneath a silent, starry sky\",\n  };\n  return `${seasonDescriptions[season]} ${timeDescriptions[timeOfDay]}`;\n}\n\nfunction isSilentCatch(chance) {\n  return chance < 0.3;\n}\n\nfunction isCommonCatch(chance) {\n  return chance < 0.6;\n}\n\nfunction isTroutCatch(chance) {\n  return chance < 0.85;\n}\n\nconst fishingOutcomes = [\n  {\n    check: isSilentCatch,\n    describe: (bait, mood) =>\n      `the water stays silent. Despite your use of ${bait}, no fish disturb the ${mood}.`,\n  },\n  {\n    check: isCommonCatch,\n    describe: (bait, mood) =>\n      `a common carp surfaces gently, a modest reward for your effort with ${bait}, set against ${mood}.`,\n  },\n  {\n    check: isTroutCatch,\n    describe: (bait, mood) =>\n      `a glimmering trout appears briefly, its shimmer echoing the beauty of ${mood}. Your choice of ${bait} worked well.`,\n  },\n  {\n    check: () => true,\n    describe: (bait, mood) =>\n      `in a burst of brilliance, a legendary golden fish leaps forth—its radiance matching the splendor of ${mood}. Your ${bait} has yielded a prize.`,\n  },\n];\n\nfunction getFishingOutcome(effectiveChance, baitDescription, moodDescription) {\n  return fishingOutcomes.find(({ check }) => check(effectiveChance)).describe(baitDescription, moodDescription);\n}\n\nfunction getBaitOptions() {\n  return {\n    \"worm\": { modifier: 0.0, description: \"a wriggling worm\" },\n    \"insect\": { modifier: 0.05, description: \"a lively insect\" },\n    \"bread\": { modifier: -0.05, description: \"a slice of bread\" },\n    \"cheese\": { modifier: 0.1, description: \"a pungent piece of cheese\" },\n    \"shiny bait\": { modifier: 0.15, description: \"a glittering lure\" },\n    \"doughnut\": { modifier: 0.2, description: \"a tempting doughnut\" },\n    \"grub\": { modifier: 0.05, description: \"a succulent grub\" },\n    \"minnow\": { modifier: 0.1, description: \"a darting minnow\" },\n    \"sausage\": { modifier: 0.2, description: \"a savory sausage\" },\n    \"maggot\": { modifier: -0.1, description: \"a squirming maggot\" },\n  };\n}\n\nfunction getTimeContext(getCurrentTime) {\n  const date = new Date(getCurrentTime());\n  const month = date.getMonth();\n  const hour = date.getHours();\n  const season = getSeason(month);\n  const timeOfDay = getTimeOfDay(hour);\n  return { season, timeOfDay };\n}\n\nfunction fishingGame(input, env) {\n  const { season, timeOfDay } = getTimeContext(env.get(\"getCurrentTime\"));\n\n  const moodDescription = getMoodDescription(season, timeOfDay);\n\n  const baitOptions = getBaitOptions();\n\n  const baitDataOrError = getBaitData(input, baitOptions, moodDescription);\n  if (baitDataOrError.isError) return baitDataOrError.message;\n  const baitData = baitDataOrError;\n\n  const getRandomNumber = env.get(\"getRandomNumber\");\n  const baseChance = getRandomNumber();\n  const effectiveChance = Math.min(1, Math.max(0, baseChance + baitData.modifier));\n\n  const outcome = getFishingOutcome(effectiveChance, baitData.description, moodDescription);\n\n  return `Casting your line with ${baitData.description}, you await a catch. ${outcome}`;\n}\n\nexport { fishingGame };","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-29/get.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'get' has a complexity of 16. Maximum allowed is 2.","line":7,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":55,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Retrieves a value from data provided by the environment using the input as a path.\n * @param {string} input - The path (e.g., 'key1.key2.0.key3') to look up in the data.\n * @param {Map<string, Function>} env - Environment map containing dependencies. Expected: 'getData'.\n * @returns {string} The JSON stringified value found at the path, or an error message.\n */\nexport function get(input, env) {\n  if (!env || typeof env.get !== 'function') {\n    return \"Error: 'env' Map with 'get' method is required.\";\n  }\n  const getData = env.get('getData');\n  if (typeof getData !== 'function') {\n    return \"Error: 'getData' function not found in env.\";\n  }\n\n  try {\n    const data = getData();\n    if (input.trim() === '') {\n      return JSON.stringify(data);\n    }\n    // Basic check if initial data is an object or array\n    if (data === null || (typeof data !== 'object' && !Array.isArray(data))) {\n        return \"Error: 'getData' did not return a valid object or array.\";\n    }\n\n    // Split the input path by dots\n    const pathSegments = input.split('.');\n    let currentValue = data;\n    let currentPath = '';\n\n    // Traverse the path\n    for (const segment of pathSegments) {\n      currentPath = currentPath ? `${currentPath}.${segment}` : segment;\n      if (currentValue === null || typeof currentValue !== 'object') {\n        return `Error: Cannot access property '${segment}' on non-object value at path '${currentPath.substring(0, currentPath.lastIndexOf('.') !== -1 ? currentPath.lastIndexOf('.') : 0)}'. Value is: ${JSON.stringify(currentValue)}`;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(currentValue, segment)) {\n        currentValue = currentValue[segment];\n      } else {\n        return `Error: Path segment '${segment}' not found at '${currentPath}'. Available keys/indices: ${Object.keys(currentValue).join(', ')}`;\n      }\n    }\n\n    // Return a string representation of the final value\n    try {\n      return JSON.stringify(currentValue);\n    } catch (stringifyError) {\n        return `Error stringifying final value at path \"${input}\": ${stringifyError.message}`;\n    }\n  } catch (error) {\n      // Catch errors from getData() execution or other unexpected issues\n      return `Error during data retrieval or path traversal for \"${input}\": ${error.message}`;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-29/setTemporary.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'isObject' has a complexity of 3. Maximum allowed is 2.","line":6,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":8,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'deepMerge' has a complexity of 4. Maximum allowed is 2.","line":19,"column":1,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":43,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":22,"column":33,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":34,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Function 'setTemporary' has a complexity of 10. Maximum allowed is 2.","line":52,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":102,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Checks if an item is a plain object (not an array or null).\n * @param {*} item - The item to check.\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n/**\n * Deeply merges two objects. Creates a new object with merged properties.\n * Properties in source will overwrite properties in target, unless both\n * properties are plain objects, in which case they are recursively merged.\n * Arrays and other types are overwritten, not merged.\n * @param {object} target - The target object.\n * @param {object} source - The source object.\n * @returns {object} A new object representing the merged result.\n */\nfunction deepMerge(target, source) {\n  const output = { ...target }; // Start with a shallow copy of the target\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      const targetValue = target[key];\n      const sourceValue = source[key];\n      if (isObject(targetValue) && isObject(sourceValue)) {\n        // If both target and source values are objects, recursively merge\n        output[key] = deepMerge(targetValue, sourceValue);\n      } else {\n        // Otherwise, overwrite with the source value\n        // (If sourceValue is an object, this assignment handles the case\n        // where target[key] wasn't an object or didn't exist)\n        output[key] = sourceValue;\n      }\n    });\n  } else if (isObject(source)) {\n      // If target is not an object but source is, return a shallow copy of source\n      // (or deep copy if required, but shallow should suffice here as we merge onto it)\n      return { ...source };\n  }\n  // If source is not an object, the initial shallow copy of target is returned\n  // or target itself if it wasn't an object either (though initial checks prevent this)\n  return output;\n}\n\n/**\n * Parses input as JSON, deep merges it into the 'temporary' object obtained via env.getData(),\n * and then passes the entire modified data structure back to env.setData().\n * @param {string} input - A JSON string to parse and merge.\n * @param {Map<string, Function>} env - Environment map. Expected: 'getData()', 'setData(data)'.\n * @returns {string} A confirmation message or an error message.\n */\nexport function setTemporary(input, env) {\n  let inputJson;\n  try {\n    inputJson = JSON.parse(input);\n  } catch (parseError) {\n    return `Error: Invalid JSON input. ${parseError.message}`;\n  }\n\n  if (!isObject(inputJson)) { // Use the helper\n      return \"Error: Input JSON must be a plain object.\";\n  }\n\n  if (!env || typeof env.get !== 'function') {\n    return \"Error: 'env' Map with 'get' method is required.\";\n  }\n  const getData = env.get('getData');\n  const setData = env.get('setData');\n  if (typeof getData !== 'function') {\n    return \"Error: 'getData' function not found in env.\";\n  }\n  if (typeof setData !== 'function') {\n      return \"Error: 'setData' function not found in env.\";\n  }\n\n  try {\n    const currentData = getData(); \n\n    if (!isObject(currentData)) { // Use the helper\n        return \"Error: 'getData' did not return a valid object.\";\n    }\n\n    // Deep clone currentData to create newData - JSON method is simple but has limitations (e.g., with Dates, Functions)\n    // For this use case, it should be acceptable.\n    const newData = JSON.parse(JSON.stringify(currentData));\n\n    // Ensure the 'temporary' key exists and is an object in the new copy\n    if (!isObject(newData.temporary)) {\n        newData.temporary = {}; \n    }\n\n    // Perform the deep merge\n    newData.temporary = deepMerge(newData.temporary, inputJson);\n\n    setData(newData);\n\n    return `Success: Temporary data deep merged.`; \n\n  } catch (error) {\n    return `Error updating temporary data: ${error.message}`;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-03-30/cyberpunkAdventure.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'cyberpunkAdventure' has a complexity of 22. Maximum allowed is 2.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":115,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function cyberpunkAdventure(input, env) {\n  try {\n    const getRandomNumber = env.get(\"getRandomNumber\");\n    const getCurrentTime = env.get(\"getCurrentTime\");\n    const getData = env.get(\"getData\");\n    const setTemporaryData = env.get(\"setData\");\n    const { temporary } = getData();\n    const scoped = temporary.CYBE1 || {};\n\n    const name = scoped.name || input.trim() || \"Stray\";\n    const state = scoped.state || \"intro\";\n    const inventory = scoped.inventory || [];\n    const visited = new Set(scoped.visited || []);\n\n    const lowerInput = input.trim().toLowerCase();\n    const time = getCurrentTime();\n\n    let output = \"\";\n    let nextState = state;\n    let nextInventory = [...inventory];\n    let nextVisited = new Set(visited);\n\n    // If we haven’t stored the name yet, do so now\n    if (!scoped.name) {\n      setTemporaryData({ temporary: { CYBE1: { name } } });\n      return `> Welcome, ${name}. Your story begins now.\\n> Type 'start' to continue.`;\n    }\n\n    // Game logic\n    switch (state) {\n      case \"intro\":\n        output = `> ${time}\\n> ${name}, you're in the Neon Market. Lights hum. Faces blur.\\n> You see paths to: Hacker Den, Transport Hub, and Back Alley.\\n> Where do you go? (hacker / transport / alley)`;\n        nextState = \"hub\";\n        break;\n\n      case \"hub\":\n        if (lowerInput.includes(\"hacker\")) {\n          output = `> You approach the Hacker Den. The door requires a password.`;\n          nextState = \"hacker:door\";\n        } else if (lowerInput.includes(\"transport\")) {\n          output = `> You head to the Transport Hub. Trains screech overhead.`;\n          nextState = \"transport:platform\";\n        } else if (lowerInput.includes(\"alley\")) {\n          output = `> You slip into the Back Alley. The shadows move with you.`;\n          nextState = \"alley:stealth\";\n        } else {\n          output = `> Unclear direction. Options: hacker / transport / alley`;\n        }\n        break;\n\n      // Hacker Den phases\n      case \"hacker:door\":\n        if (lowerInput.includes(\"zero\")) {\n          output = `> Password accepted. Inside, a rogue AI offers you a cracked implant.`;\n          nextInventory.push(\"cracked implant\");\n          nextVisited.add(\"hacker\");\n          nextState = \"hub\";\n        } else {\n          output = `> Hint: the password is a number and a name...`;\n        }\n        break;\n\n      // Transport Hub phases\n      case \"transport:platform\":\n        output = `> A vendor offers you a neural ticket in exchange for your datapad.`;\n        nextState = \"transport:trade\";\n        break;\n\n      case \"transport:trade\":\n        if (nextInventory.includes(\"datapad\") && lowerInput.includes(\"trade\")) {\n          output = `> You hand over the datapad. The vendor grins and slips you the neural ticket.`;\n          nextInventory.splice(nextInventory.indexOf(\"datapad\"), 1);\n          nextInventory.push(\"neural ticket\");\n          nextVisited.add(\"transport\");\n          nextState = \"hub\";\n        } else {\n          output = `> Do you want to trade? Type 'trade datapad'.`;\n        }\n        break;\n\n      // Back Alley phases\n      case \"alley:stealth\":\n        const stealthCheck = getRandomNumber();\n        const success = stealthCheck > 0.3;\n        if (success) {\n          output = `> You dodge the shadows and find a hidden stash: a stimpack.`;\n          nextInventory.push(\"stimpack\");\n          nextVisited.add(\"alley\");\n        } else {\n          output = `> You trip a wire. Sirens start up. You sprint back to the Market.`;\n        }\n        nextState = \"hub\";\n        break;\n\n      default:\n        output = `> Glitch in the grid. Resetting...`;\n        nextState = \"intro\";\n    }\n\n    setTemporaryData({\n      temporary: {\n        CYBE1: {\n          name,\n          state: nextState,\n          inventory: nextInventory,\n          visited: [...nextVisited]\n        }\n      }\n    });\n\n    return output;\n  } catch {\n    return `> SYSTEM ERROR: neural link failure`;\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-04-05/httpRequest.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/src/toys/2025-04-06/ticTacToe.js","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'ticTacToeMove' has a complexity of 24. Maximum allowed is 2.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":92,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'isWin' has a complexity of 14. Maximum allowed is 2.","line":42,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":50,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Function 'minimax' has a complexity of 10. Maximum allowed is 2.","line":52,"column":5,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":69,"endColumn":6}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function ticTacToeMove(input) {\n  try {\n    const parsed = JSON.parse(input);\n    const { moves } = parsed;\n    if (!Array.isArray(moves) || moves.length > 9) return returnInitialOptimalMove();\n\n    const board = Array.from({ length: 3 }, () => Array(3).fill(null));\n    const seen = new Set();\n\n    for (let i = 0; i < moves.length; i++) {\n      const move = moves[i];\n      if (!move || typeof move !== \"object\") return returnInitialOptimalMove();\n\n      const { player, position } = move;\n      if (![\"X\", \"O\"].includes(player)) return returnInitialOptimalMove();\n      if (!position || typeof position !== \"object\") return returnInitialOptimalMove();\n\n      const { row, column } = position;\n      if (![0, 1, 2].includes(row) || ![0, 1, 2].includes(column)) return returnInitialOptimalMove();\n\n      const key = `${row},${column}`;\n      if (seen.has(key)) return returnInitialOptimalMove();\n      seen.add(key);\n\n      // Removed unreachable guard clause\n      board[row][column] = player;\n\n      if (i > 0 && player === moves[i - 1].player) return returnInitialOptimalMove();\n\n      // Early exit if the game is already won\n      if (isWin(board, \"X\") || isWin(board, \"O\")) {\n        return JSON.stringify({ moves });\n      }\n    }\n\n    if (moves.length >= 9) return JSON.stringify({ moves });\n\n    const nextPlayer = moves.length === 0\n      ? \"X\"\n      : moves[moves.length - 1].player === \"X\" ? \"O\" : \"X\";\n\n    function isWin(b, p) {\n      for (let i = 0; i < 3; i++) {\n        if (b[i][0] === p && b[i][1] === p && b[i][2] === p) return true;\n        if (b[0][i] === p && b[1][i] === p && b[2][i] === p) return true;\n      }\n      if (b[0][0] === p && b[1][1] === p && b[2][2] === p) return true;\n      if (b[0][2] === p && b[1][1] === p && b[2][0] === p) return true;\n      return false;\n    }\n\n    function minimax(b, depth, isMax, player) {\n      const opp = player === \"X\" ? \"O\" : \"X\";\n      if (isWin(b, player)) return 10 - depth;\n      if (isWin(b, opp)) return depth - 10;\n      if (depth + moves.length === 9) return 0;\n\n      const scores = [];\n      for (let r = 0; r < 3; r++) {\n        for (let c = 0; c < 3; c++) {\n          if (!b[r][c]) {\n            b[r][c] = isMax ? player : opp;\n            scores.push(minimax(b, depth + 1, !isMax, player));\n            b[r][c] = null;\n          }\n        }\n      }\n      return isMax ? Math.max(...scores) : Math.min(...scores);\n    }\n\n    let best = -Infinity;\n    let bestMove = null;\n    for (let r = 0; r < 3; r++) {\n      for (let c = 0; c < 3; c++) {\n        if (!board[r][c]) {\n          board[r][c] = nextPlayer;\n          const score = minimax(board, 0, false, nextPlayer);\n          board[r][c] = null;\n          if (score > best) {\n            best = score;\n            bestMove = { row: r, column: c };\n          }\n        }\n      }\n    }\n\n    const newMove = { player: nextPlayer, position: bestMove };\n    return JSON.stringify({ moves: [...moves, newMove] });\n  } catch {\n    return returnInitialOptimalMove();\n  }\n}\n\nfunction returnInitialOptimalMove() {\n  // In an empty board, the optimal first move is the center\n  const optimal = { player: \"X\", position: { row: 1, column: 1 } };\n  return JSON.stringify({ moves: [optimal] });\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/stryker.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/browser/data.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/browser/main.test.js","messages":[{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":57,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":61,"endColumn":6}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { setupAudio } from '../../src/browser/audio-controls.js';\nimport { describe, test, jest } from '@jest/globals';\n\n// Mock DOM elements and functions\ndescribe('setupAudio', () => {\n  let mockDoc;\n  let mockAudio;\n  let mockAudioElements;\n  let mockControlsContainer;\n  let mockPlayButton;\n  let mockTimeDisplay;\n\n  beforeEach(() => {\n    // Mock document\n    mockDoc = {\n      querySelectorAll: jest.fn(),\n      createElement: jest.fn(),\n      createTextNode: jest.fn()\n    };\n\n    // Mock audio elements\n    mockAudio = {\n      id: '',\n      removeAttribute: jest.fn(),\n      play: jest.fn(),\n      pause: jest.fn(),\n      currentTime: 0\n    };\n\n    mockAudioElements = [mockAudio];\n    mockDoc.querySelectorAll.mockReturnValue(mockAudioElements);\n\n    // Mock DOM elements\n    mockControlsContainer = {\n      className: '',\n      id: '',\n      appendChild: jest.fn()\n    };\n    mockDoc.createElement.mockReturnValue(mockControlsContainer);\n\n    mockPlayButton = {\n      href: '#',\n      textContent: '',\n      addEventListener: jest.fn()\n    };\n    mockTimeDisplay = {\n      className: '',\n      textContent: '',\n      addEventListener: jest.fn()\n    };\n  });\n\n  test('sets up audio controls correctly', () => {\n    // Mock utility functions\n    const mockGetAudioElements = jest.fn(() => mockAudioElements);\n    const mockRemoveControlsAttribute = jest.fn();\n    const mockCreateElement = jest.fn((doc, tag) => {\n      if (tag === 'div') return mockControlsContainer;\n      if (tag === 'a') return mockPlayButton;\n      if (tag === 'span') return mockTimeDisplay;\n    });\n    const mockCreateTextNode = jest.fn();\n    const mockStopDefault = jest.fn();\n    const mockPlayAudio = jest.fn();\n    const mockPauseAudio = jest.fn();\n    const mockAddEventListener = jest.fn(() => {\n      // Event listener setup\n    });\n    const mockAppendChild = jest.fn();\n    const mockInsertBefore = jest.fn();\n\n    // Call setupAudio\n    setupAudio(\n      mockDoc,\n      mockGetAudioElements,\n      mockRemoveControlsAttribute,\n      mockCreateElement,\n      mockCreateTextNode,\n      mockStopDefault,\n      mockPlayAudio,\n      mockPauseAudio,\n      mockAddEventListener,\n      mockAppendChild,\n      mockInsertBefore\n    );\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/browser/toys.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'input' is defined but never used.","line":84,"column":41,"nodeType":"Identifier","messageId":"unusedVar","endLine":84,"endColumn":46,"suggestions":[{"messageId":"removeVar","data":{"varName":"input"},"fix":{"range":[2782,2787],"text":""},"desc":"Remove unused variable 'input'."}]},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":250,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":254,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 5. Maximum allowed is 2.","line":266,"column":40,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":273,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 2.","line":303,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":307,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 3. Maximum allowed is 2.","line":319,"column":40,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":323,"endColumn":6}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { describe, it, expect, beforeEach, jest } from '@jest/globals';\nimport { enableInteractiveControls } from '../../src/browser/toys.js'; // Adjust path as needed\n\ndescribe('enableInteractiveControls', () => {\n  let inputElement;\n  let submitButton;\n  let outputElement;\n  let parentElement;\n  let mockParentClassList;\n\n  beforeEach(() => {\n    // Mock input element\n    inputElement = { disabled: true };\n\n    // Mock submit button\n    submitButton = { disabled: true };\n\n    // Mock parent element with classList mock\n    mockParentClassList = {\n      containsWarning: true, // Simple state to track the class\n      add: jest.fn(), // Not strictly needed for this test, but good practice\n      remove: jest.fn((className) => {\n        if (className === 'warning') {\n          mockParentClassList.containsWarning = false;\n        }\n      }),\n      contains: jest.fn((className) => {\n        return className === 'warning' && mockParentClassList.containsWarning;\n      })\n    };\n    parentElement = { \n      classList: mockParentClassList,\n      appendChild: jest.fn() // Not needed, but completes the mock\n    };\n\n    // Mock output element and link its parent\n    outputElement = { \n      textContent: '',\n      parentElement: parentElement\n    };\n    \n  });\n\n  it('enables input and submit button', () => {\n    enableInteractiveControls(inputElement, submitButton, outputElement);\n    expect(inputElement.disabled).toBe(false);\n    expect(submitButton.disabled).toBe(false);\n  });\n\n  it('sets output textContent to \"Ready for input\"', () => {\n    enableInteractiveControls(inputElement, submitButton, outputElement);\n    expect(outputElement.textContent).toBe('Ready for input');\n  });\n\n  it('removes \"warning\" class from parent element', () => {\n    // Check initial state using the mock\n    expect(parentElement.classList.contains('warning')).toBe(true);\n    enableInteractiveControls(inputElement, submitButton, outputElement);\n    // Check that remove was called\n    expect(parentElement.classList.remove).toHaveBeenCalledWith('warning');\n    // Check final state using the mock\n    expect(parentElement.classList.contains('warning')).toBe(false);\n  });\n});\n\nimport { createHandleSubmit, initializeInteractiveComponent, initializeVisibleComponents } from '../../src/browser/toys.js';\n\ndescribe('createHandleSubmit', () => {\n  let mockFetch;\n  let inputElement;\n  let outputElement;\n  let handleSubmit;\n  let processingFunction;\n\n  beforeEach(() => {\n    inputElement = { value: 'hello', disabled: false };\n    outputElement = { textContent: '', parentElement: { classList: { add: jest.fn(), remove: jest.fn() } } };\n\n    mockFetch = jest.fn();\n    global.fetch = mockFetch;\n\n    const noop = () => {};\n    const globalState = {};\n    processingFunction = jest.fn(async (input) => 'transformed');\n    const stopDefault = (e) => e.preventDefault();\n    const createEnv = () => ({});\n    const errorFn = noop;\n    const addWarningFn = noop;\n\n    handleSubmit = createHandleSubmit(\n      inputElement,\n      outputElement,\n      globalState,\n      processingFunction,\n      stopDefault,\n      createEnv,\n      errorFn,\n      addWarningFn\n    );\n  });\n\n  it('characterizes current basic behavior on submit', async () => {\n    await handleSubmit(new Event('submit'));\n\n    // Characterization: ensure processingFunction is called\n    expect(processingFunction).toHaveBeenCalled();\n\n    // Characterization: ensure output is updated with result\n    await expect(outputElement.textContent).resolves.toEqual('transformed');\n  });\n\n  it('fetches from URL if processingFunction returns a request object', async () => {\n    const mockFetchFn = jest.fn(() =>\n      Promise.resolve({ text: () => Promise.resolve('fetched content') })\n    );\n\n    processingFunction = jest.fn(() =>\n      JSON.stringify({ request: { url: 'https://example.com/data' } })\n    );\n\n    const stopDefault = (e) => e.preventDefault();\n    const createEnv = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n\n    const handleSubmitWithFetch = createHandleSubmit(\n      inputElement,\n      outputElement,\n      {},\n      processingFunction,\n      stopDefault,\n      createEnv,\n      errorFn,\n      addWarningFn,\n      mockFetchFn\n    );\n\n    await handleSubmitWithFetch(new Event('submit'));\n\n    expect(mockFetchFn).toHaveBeenCalledWith('https://example.com/data');\n    await new Promise(resolve => setTimeout(resolve, 0));\n    expect(outputElement.textContent).toBe('fetched content');\n  });\n\n  it('handles fetch failure if request URL is unreachable', async () => {\n    const mockFetchFn = jest.fn(() =>\n      Promise.reject(new Error('Network failure'))\n    );\n\n    processingFunction = jest.fn(() =>\n      JSON.stringify({ request: { url: 'https://example.com/fail' } })\n    );\n\n    const stopDefault = (e) => e.preventDefault();\n    const createEnv = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n\n    const handleSubmitWithFailingFetch = createHandleSubmit(\n      inputElement,\n      outputElement,\n      {},\n      processingFunction,\n      stopDefault,\n      createEnv,\n      errorFn,\n      addWarningFn,\n      mockFetchFn\n    );\n\n    await handleSubmitWithFailingFetch(new Event('submit'));\n\n    await new Promise(resolve => setTimeout(resolve, 0));\n    expect(mockFetchFn).toHaveBeenCalledWith('https://example.com/fail');\n    expect(errorFn).toHaveBeenCalledWith('Error fetching request URL:', expect.any(Error));\n    expect(outputElement.textContent).toMatch(/Error fetching URL: Network failure/);\n    expect(addWarningFn).toHaveBeenCalledWith(outputElement);\n  });\n\n  it('handles error thrown by processingFunction', async () => {\n    const mockFetchFn = jest.fn(); // Should not be called\n\n    processingFunction = jest.fn(() => {\n      throw new Error('processing error');\n    });\n\n    const stopDefault = (e) => e.preventDefault();\n    const createEnv = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n\n    const handleSubmitThrowing = createHandleSubmit(\n      inputElement,\n      outputElement,\n      {},\n      processingFunction,\n      stopDefault,\n      createEnv,\n      errorFn,\n      addWarningFn,\n      mockFetchFn\n    );\n\n    await handleSubmitThrowing(new Event('submit'));\n\n    expect(mockFetchFn).not.toHaveBeenCalled();\n    expect(errorFn).toHaveBeenCalledWith('Error processing input:', expect.any(Error));\n    expect(outputElement.textContent).toMatch(/Error: processing error/);\n    expect(addWarningFn).toHaveBeenCalledWith(outputElement);\n  });\n\n  it('handles being called without an event', async () => {\n    const stopDefault = jest.fn();\n    const createEnv = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n    const fetchFn = jest.fn();\n    const processingFunction = jest.fn(() => 'result from no-event');\n\n    const input = { value: 'input without event' };\n    const output = { textContent: '', parentElement: { classList: { add: jest.fn(), remove: jest.fn() } } };\n\n    const handleSubmitNoEvent = createHandleSubmit(\n      input,\n      output,\n      {},\n      processingFunction,\n      stopDefault,\n      createEnv,\n      errorFn,\n      addWarningFn,\n      fetchFn\n    );\n\n    await handleSubmitNoEvent(); // no event passed\n\n    expect(stopDefault).not.toHaveBeenCalled();\n    expect(processingFunction).toHaveBeenCalledWith('input without event', expect.any(Object));\n    expect(output.textContent).toBe('result from no-event');\n  });\n});\n\ndescribe('initializeInteractiveComponent', () => {\n  it('attaches click and keypress listeners with expected arguments', () => {\n    const article = {};\n    const inputElement = { value: 'test', disabled: false };\n    const submitButton = { disabled: false };\n    const outputElement = { textContent: '', parentElement: { classList: { remove: jest.fn() } } };\n\n    const querySelectorFn = jest.fn((el, selector) => {\n      if (selector === 'input') return inputElement;\n      if (selector === 'button') return submitButton;\n      if (selector === 'p.output') return outputElement;\n    });\n\n    const globalState = {};\n    const stopDefaultFn = jest.fn();\n    const createEnvFn = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n    const fetchFn = jest.fn();\n\n    const processingFunction = jest.fn(() => 'processed result');\n    const listeners = {};\n\n    const addEventListenerFn = jest.fn((element, event, handler) => {\n      if (element === inputElement && event === 'keypress') {\n        listeners.keypress = handler;\n      }\n      if (element === submitButton && event === 'click') {\n        listeners.click = handler;\n      }\n    });\n\n    initializeInteractiveComponent(\n      article,\n      processingFunction,\n      querySelectorFn,\n      globalState,\n      stopDefaultFn,\n      createEnvFn,\n      errorFn,\n      addWarningFn,\n      addEventListenerFn,\n      fetchFn\n    );\n\n    expect(addEventListenerFn).toHaveBeenCalledTimes(2);\n    expect(addEventListenerFn).toHaveBeenCalledWith(submitButton, 'click', expect.any(Function));\n    expect(addEventListenerFn).toHaveBeenCalledWith(inputElement, 'keypress', expect.any(Function));\n\n    listeners.keypress({ key: 'Enter', preventDefault: jest.fn() });\n\n    expect(processingFunction).toHaveBeenCalledWith('test', expect.any(Object));\n  });\n\n  it('does not call handleSubmit when a non-Enter key is pressed', () => {\n    const article = {};\n    const inputElement = { value: 'test', disabled: false };\n    const submitButton = { disabled: false };\n    const outputElement = { textContent: '', parentElement: { classList: { remove: jest.fn() } } };\n\n    const querySelectorFn = jest.fn((el, selector) => {\n      if (selector === 'input') return inputElement;\n      if (selector === 'button') return submitButton;\n      if (selector === 'p.output') return outputElement;\n    });\n\n    const globalState = {};\n    const stopDefaultFn = jest.fn();\n    const createEnvFn = () => ({});\n    const errorFn = jest.fn();\n    const addWarningFn = jest.fn();\n    const fetchFn = jest.fn();\n\n    const processingFunction = jest.fn(() => 'processed result');\n    const listeners = {};\n\n    const addEventListenerFn = jest.fn((element, event, handler) => {\n      if (element === inputElement && event === 'keypress') {\n        listeners.keypress = handler;\n      }\n    });\n\n    initializeInteractiveComponent(\n      article,\n      processingFunction,\n      querySelectorFn,\n      globalState,\n      stopDefaultFn,\n      createEnvFn,\n      errorFn,\n      addWarningFn,\n      addEventListenerFn,\n      fetchFn\n    );\n\n    listeners.keypress({ key: 'a', preventDefault: jest.fn() });\n\n    expect(processingFunction).not.toHaveBeenCalled();\n  });\n});\n\ndescribe('initializeVisibleComponents', () => {\n  it('warns if there are no interactive components', () => {\n    const win = { interactiveComponents: [] };\n    const doc = {};\n    const logFn = jest.fn();\n    const warnFn = jest.fn();\n    const getElementByIdFn = jest.fn();\n    const createIntersectionObserverFn = jest.fn();\n\n    initializeVisibleComponents(win, doc, logFn, warnFn, getElementByIdFn, createIntersectionObserverFn);\n\n    expect(warnFn).toHaveBeenCalledWith('No interactive components found to initialize');\n  });\n\n  it('initializes and observes a valid interactive component', () => {\n    const mockArticle = {};\n    const mockObserver = { observe: jest.fn() };\n\n    const win = {\n      interactiveComponents: [\n        { id: 'test-id', modulePath: 'path/to/module', functionName: 'initFunction' }\n      ]\n    };\n    const doc = {};\n    const logFn = jest.fn();\n    const warnFn = jest.fn();\n    const getElementByIdFn = jest.fn(() => mockArticle);\n    const createIntersectionObserverFn = jest.fn(() => mockObserver);\n\n    initializeVisibleComponents(win, doc, logFn, warnFn, getElementByIdFn, createIntersectionObserverFn);\n\n    expect(logFn).toHaveBeenCalledWith(\n      'Initializing',\n      1,\n      'interactive components via IntersectionObserver'\n    );\n    expect(getElementByIdFn).toHaveBeenCalledWith(doc, 'test-id');\n    expect(createIntersectionObserverFn).toHaveBeenCalledWith(mockArticle, 'path/to/module', 'initFunction');\n    expect(mockObserver.observe).toHaveBeenCalledWith(mockArticle);\n  });\n\n  it('warns when article element is missing for a component', () => {\n    const win = {\n      interactiveComponents: [\n        { id: 'missing-id', modulePath: 'path/to/module', functionName: 'initFunction' }\n      ]\n    };\n    const doc = {};\n    const logFn = jest.fn();\n    const warnFn = jest.fn();\n    const getElementByIdFn = jest.fn(() => null);\n    const createIntersectionObserverFn = jest.fn();\n\n    initializeVisibleComponents(win, doc, logFn, warnFn, getElementByIdFn, createIntersectionObserverFn);\n\n    expect(getElementByIdFn).toHaveBeenCalledWith(doc, 'missing-id');\n    expect(createIntersectionObserverFn).not.toHaveBeenCalled();\n    expect(warnFn).toHaveBeenCalledWith(\n      'Could not find article element with ID: missing-id for component initialization.'\n    );\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/generator/generator.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2024-10-02/hello.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-19/identity.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-21/booleanCoercer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-21/italics.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-26/prettyFloat.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-28/rand.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-29/fishingGame.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-29/get.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-29/setTemporary.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-03-30/cyberpunkAdventure.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/matthew.heard/Code/Matt/dadeto/test/toys/2025-04-05/httpRequest.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]