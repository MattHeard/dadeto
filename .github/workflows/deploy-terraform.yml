name: Deploy Terraform

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - main

  workflow_dispatch:
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    env:
      REGION: europe-west1
      ENVIRONMENT: prod

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Google Cloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          install_components: gcloud

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Import orphaned Cloud Functions into state
        shell: bash
        run: |
          # Short names exactly as used in main.tf resource blocks (minus env prefix)
          FUNCS="get-api-key-credit submit-new-story submit-new-page \
                 process-new-story process-new-page render-variant render-contents"

          for fn in $FUNCS; do
            TF_ADDR="google_cloudfunctions_function.${fn//-/_}"
            GCF_PATH="projects/${{ secrets.GOOGLE_PROJECT }}/locations/${REGION}/functions/${ENVIRONMENT}-${fn}"

            # 1. Does the prod-prefixed function exist in Cloud Functions?
            if gcloud functions describe "${ENVIRONMENT}-${fn}" --region "${REGION}" \
                 --format='value(name)' >/dev/null 2>&1; then

              # 2. Is it already tracked in Terraform state?
              terraform state list -no-color > /tmp/state.txt
              if ! grep -q "$TF_ADDR" /tmp/state.txt; then
                echo "\ud83d\ude9a Importing ${ENVIRONMENT}-${fn} into state as ${TF_ADDR}"
                terraform import "$TF_ADDR" "$GCF_PATH"
              else
                echo "\u2705 ${ENVIRONMENT}-${fn} already present in state"
              fi
            else
              echo "\u26a0\ufe0f  ${ENVIRONMENT}-${fn} not found in GCP, skipping import"
            fi
          done

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
